{"version":3,"sources":["Home.js","Browse.js","AddRecipe.js","SearchRecipe.js","Main.js","index.js","services/RecipeApi.js","DropdownButton.js","services/SpringScrollBar.js","RecipePage.js","EditRecipe.js"],"names":["Home","props","setTerm","bind","onKeyDown","onClick","state","searchTerm","placeholder","navClass","event","target","value","this","setState","preventDefault","key","document","getElementById","click","stopPropagation","className","alt","src","type","onChange","id","to","Component","Browse","reverseList","recipeList","items","data","recipes","filterMessage","imageSource","reverse","changeView","error","isLoaded","spinAnim","Animated","Value","gallery","viewMessage","loop","timing","toValue","duration","easing","Easing","linear","useNativeDriver","start","RecipeApi","get","then","result","console","log","carrotStyle","transform","rotate","interpolate","inputRange","outputRange","position","top","left","right","bottom","height","width","class","message","group","reduce","r","e","key1","mealName","undefined","toUpperCase","push","Object","entries","map","item","idMeal","mealThumbnail","i","j","Image","style","source","AddRecipe","changeHandler","nam","name","val","ingredientsChangeHandler","ingredientObj","ingredients","measuresChangeHandler","measuresObj","measures","submitData","validateFields","recipeAlreadyExists","newIngredient","changeCategory","changeRegion","changeType","toggleCategory","toggleRegion","toggleType","Instructions","Tags","Youtube","mainCategory","mainRegion","mainType","ingredientBlocks","numIngredients","finalBlocks","newIngredientButton","categoryOpen","regionOpen","typeOpen","newValue","slides","newNum","newBlocks","concat","recipeData","parentArray","fieldName","fullFieldName","getIngredientsOrMeasure","Region","Category","Type","post","response","Array","isArray","history","recipeName","length","toast","autoClose","closeOnClick","addRecipeToDb","errMsg","isValid","ingredient1","measure1","dark","method","onSubmit","DropdownButton","isOpen","mainText","toggleThisClass","toggleClass1","toggleClass2","changeData","dropdown","dropdownContainer","mainButton","categories","imageId","image","SearchRecipe","changeSearchCategory","changeSearchRegion","changeSearchType","cancelFilter","handleCancelFilter","handleFilter","startFilter","toggleSearchCategory","toggleSearchRegion","toggleSearchType","term","dropdownDiv","stopFilter","filterDiv","finishedFilter","clearFilter","category","region","filteredArray","filter","filteredItems","keyword","match","params","searchString","madeArr","recipeIcons","Main","handleNav","handleNavClick","backgroundClass","browseClass","homeClass","burgerLine1","burgerLine2","burgerLine3","exact","path","component","RecipePage","EditRecipe","ReactDOM","render","url","window","location","origin","axios","create","baseURL","handleClick","handleDropdown","innerHTML","p","SpringScrollbars","rest","handleSpringUpdate","springSystem","SpringSystem","spring","createSpring","addListener","onSpringUpdate","deregisterSpring","removeAllListeners","destroy","refs","scrollbars","getScrollTop","getScrollHeight","getHeight","scrollTop","scrollHeight","MathUtil","mapValueInRange","setCurrentValue","setAtRest","setEndValue","getCurrentValue","ref","Recipe","deleteRecipe","api","recipeId","delete","measurements","spin","recipe","newTags","replaceAll","tags","ingredientNum","measureNum","eval","makeIngredients","item1","item2","put","initialNumIngredients","componentDidMount","finalTag","newCategory","newRegion","newType","ingredientId","measureId","divId","defaultValue","currIngredients","currMeasures","numInitial"],"mappings":"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","file":"static/js/main.f40daedb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    NavLink,\n    HashRouter,\n    \n} from \"react-router-dom\";\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.setTerm = this.setTerm.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.onClick = this.onClick.bind(this);\n        this.state = {\n          searchTerm: \"\",\n          placeholder: \"Search for a Recipe...\",\n          navClass: \"navLink\"\n        };\n        \n      }\n\n    setTerm(event) {\n        if (event.target.value !== \"\")\n        {\n            this.setState({navClass: \"navLinkActive\"});\n        }\n        else\n        {\n            this.setState({navClass: \"navLink\"});\n        }\n        this.setState({ searchTerm: event.target.value });\n        event.preventDefault();\n    }\n\n    onKeyDown(event) \n    {\n        if (event.key === 'Enter') \n        {\n            \n            if (this.state.searchTerm !== \"\")\n            {\n                document.getElementById(\"submit\").click();\n            }\n            else\n            {\n                this.setState({placeholder: \"Please enter a valid Recipe\"});\n            }\n            \n            event.stopPropagation();\n            event.preventDefault();\n        }\n    }\n\n    onClick(event) \n    {\n        if (this.state.searchTerm === \"\")\n        {\n            this.setState({placeholder: \"Please enter a valid Recipe\"});\n        }\n    }\n    \n    \n    render(){\n        return(\n            <HashRouter>\n                <div className = \"contentContainer\">\n                    <div className = \"spatulaContainer\">\n                        <img className = \"spatula\" alt=\"SpatulaImg\" src = \"/images/spatulaImage.png\"/>\n                    </div>\n                    <div className=\"mainContainer\">\n                        <h1>Find a New Recipe</h1>\n                        <div className = \"containSearch\">\n                            <div className = \"searchContainer\">\n                                <input onKeyDown={this.onKeyDown} className = \"searchBox shadow\" type=\"text\" onChange={this.setTerm} placeholder= {this.state.placeholder}/>\n                                <button  className = \"searchButton\" onClick = {this.onClick}>\n                                    <NavLink id = \"submit\" className = {this.state.navClass} to={`/search/${this.state.searchTerm}`}><img className = \"searchIcon\" alt=\"SearchIcon\" src = \"/images/searchIcon.png\"/></NavLink> \n                                </button>                \n                            </div>\n                        </div>\n                        <h1>OR</h1>\n                        <div className = \"uploadContainer\">\n                            <NavLink to=\"/add\" className = \"uploadRecipe\"> Upload Your Own Recipe.</NavLink>\n                        </div>\n                    </div>\n                </div>\n            </HashRouter>\n        )\n    }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Animated, Easing } from 'react-native';\nimport {\n  NavLink,\n  HashRouter\n} from \"react-router-dom\";\nimport SpringScrollbars from \"./services/SpringScrollBar\";\nimport RecipeApi from \"./services/RecipeApi\";\n\nclass Browse extends Component {\n  constructor(props) {\n    super(props);\n    this.changeView = this.changeView.bind(this)\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      spinAnim: new Animated.Value(0),\n      filterMessage: \"Sort Z-A\",\n      gallery: 1,\n      viewMessage: \"Gallery View\",\n      imageSource: \"./images/sortIcon.jpg\"\n    };\n  }\n\n  componentDidMount() {\n    Animated.loop(\n      Animated.timing(this.state.spinAnim, {\n        toValue: 100,\n        duration: 300000,\n        easing: Easing.linear,\n        useNativeDriver: true,\n      })\n    ).start();\n    RecipeApi.get(\"/api/listAllRecipeNames/1\").then(\n      (result) => {\n        this.setState({\n          isLoaded: true,\n          items: result.data,\n        });\n      },\n      (error) => {\n        console.log(error)\n        this.setState({\n          isLoaded: true,\n          error: error,\n        });\n      }\n    );\n  }\n\n  changeView(event) {\n    if (this.state.gallery === 1)\n    {\n      this.setState({\n        gallery: 0,\n        viewMessage: \"List View\"\n      });\n      event.preventDefault();\n    }\n    else\n    {\n      this.setState({\n        gallery: 1,\n        viewMessage: \"Gallery View\"\n      });\n      event.preventDefault();\n    }\n  }\n\n  reverseList = (event) => {\n    var recipeList = this.state.items.data.recipes;\n    if (this.state.filterMessage === \"Sort A-Z\")\n    {\n      this.setState({\n        imageSource: \"./images/sortIcon.jpg\",\n        filterMessage: \"Sort Z-A\"\n      });\n    }\n    else\n    {\n      this.setState({\n        imageSource: \"./images/sortIconUp.png\",\n        filterMessage: \"Sort A-Z\"\n      });\n    }\n    recipeList.reverse();\n    this.setState({\n      items: {\n        data: {\n          recipes: recipeList,\n        },\n      },\n    });\n    event.preventDefault();\n  };\n\n  render() {\n    const spin = this.state.spinAnim.interpolate({\n      inputRange: [0, 1],\n      outputRange: [\"0deg\", \"360deg\"],\n    });\n    const carrotStyle = {\n      transform: [{ rotate: spin }],\n      position: \"absolute\",\n      top: \"5vw\",\n      left: \"5vw\",\n      right: \"5vw\",\n      bottom: \"5vw\",\n      height: \"10vw\",\n      width: \"10vw\",\n    };\n    const { error, isLoaded, items } = this.state;\n    if (error) {\n      return <div class=\"text-center errorMessage\">Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return (\n        <div>\n          <div className=\"loadingContainer\">\n            <img\n              className=\"plate\"\n              src=\"../images/loadingIcon.png\"\n              alt=\"background\"\n            />\n            <Animated.Image\n              style={carrotStyle}\n              source=\"../images/ingredientIcon3.png\"\n              alt=\"carrot\"\n            />\n          </div>\n          <h1 className=\"text-center loadingText\">Awaiting Yumminess</h1>\n        </div>\n      );\n    } else {\n      const group = items.data.recipes.reduce((r, e) => {\n        const key1 = e.mealName[0];\n        if (key1 !== undefined) {\n          var key = key1.toUpperCase();\n          if (!r[key]) r[key] = [];\n          r[key].push(e);\n        }\n        return r;\n      }, {});\n      if (this.state.gallery === 0)\n      {\n        return(\n          <HashRouter>\n            <div className=\"contentContainer\">\n            <SpringScrollbars>\n              <div className=\"spatulaContainer\">\n                <img\n                  className=\"spatula\"\n                  alt=\"SpatulaImg\"\n                  src=\"/images/spatulaImage.png\"\n                />\n              </div>\n              <div className=\"browseWidgetContainer\">\n                  <button className=\"text-center flipList\" onClick={this.reverseList}>\n                    <img className = \"sortImage\" src = {this.state.imageSource} alt = \"sort\"/>\n                    {this.state.filterMessage}\n                  </button>\n                  <button className=\"text-center galleryView\" onClick={this.changeView}>\n                    <img className = \"listImage\" src = \"./images/listIcon.png\" alt = \"list\"/>\n                    {this.state.viewMessage}\n                  </button>\n              </div>\n              <div className=\"recipe-List\">\n                <div>\n                  <h1> Browse All Recipes </h1>\n                  <div className = \"mainSearchContainer\">\n\n                    {Object.entries(this.state.items.data.recipes).map((item) => {\n                      return (\n                        <NavLink to={`/recipe/${item[1].idMeal}`} className = \"shadow recipeBox\">\n                          <div className = \"recipeImageHolder\">\n                            <img className = \"recipeSearchImage\" alt = \"recipe\" src = {item[1].mealThumbnail}/>\n                          </div>\n                          <div className = \"recipeSearchText\">{item[1].mealName}</div>\n                        </NavLink>\n                      );\n                    })}\n                  </div>\n                </div>\n              </div>\n              </SpringScrollbars>\n            </div>\n          </HashRouter>\n        );\n      }\n      else\n      {\n        return (\n          <HashRouter>\n            <div className=\"contentContainer\">\n            <SpringScrollbars>\n              <div className=\"spatulaContainer\">\n                <img\n                  className=\"spatula\"\n                  alt=\"SpatulaImg\"\n                  src=\"/images/spatulaImage.png\"\n                />\n              </div>\n              <div className=\"browseWidgetContainer\">\n                  <button className=\"text-center flipList\" onClick={this.reverseList}>\n                    <img className = \"sortImage\" src = {this.state.imageSource} alt = \"sort\"/> \n                    {this.state.filterMessage}\n                  </button>\n                  <button className=\"text-center galleryView\" onClick={this.changeView}>\n                    <img className = \"galleryImage\" src = \"./images/galleryIcon.png\" alt = \"gallery\"/>\n                    {this.state.viewMessage}\n                  </button>\n              </div>\n              <div className=\"recipe-List\">\n                <div>\n                  <h1> Browse All Recipes </h1>\n                  <div className = \"recipeSection\">\n                    {Object.entries(group).map(([key, value], i) => {\n                      return (\n                        <div className=\"recipe-Block\" key={i}>\n                          <div className=\"recipe-key\">\n                            <strong>{key}</strong>\n                          </div>\n                          {value.map((item, j) => (\n                            <div className=\"recipe-Name\" key={j}>\n                              <NavLink\n                                to={`/recipe/${item.idMeal}`}\n                                className=\"links\"\n                              >\n                                {item.mealName}\n                              </NavLink>\n                            </div>\n                          ))}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n              </div>\n              </SpringScrollbars>\n            </div>\n          </HashRouter>\n        );\n      }\n    }\n  }\n}\n\nexport default Browse;\n","import React, { Component } from \"react\";\nimport \"./css/addStyles.css\";\nimport DropdownButton from \"./DropdownButton.js\";\nimport RecipeApi from \"./services/RecipeApi\";\nimport { ToastContainer, toast } from 'material-react-toastify';\nimport 'material-react-toastify/dist/ReactToastify.css';\nimport SpringScrollbars from \"./services/SpringScrollBar\";\n\nclass AddRecipe extends Component {\n  constructor(props) {\n    super(props);\n    this.newIngredient = this.newIngredient.bind(this);\n    this.submitData = this.submitData.bind(this);\n    this.changeCategory = this.changeCategory.bind(this);\n    this.changeRegion = this.changeRegion.bind(this);\n    this.changeType = this.changeType.bind(this);\n    this.toggleCategory = this.toggleCategory.bind(this);\n    this.toggleRegion = this.toggleRegion.bind(this);\n    this.toggleType = this.toggleType.bind(this);\n\n    this.state = {\n      mealName: \"\",\n      Instructions: \"\",\n      mealThumbnail: \"\",\n      Tags: \"\",\n      Youtube: \"\",\n      mainCategory: \"Choose a Category\",\n      mainRegion: \"Choose a Region\",\n      mainType: \"Choose a Type\",\n      ingredientBlocks: [4],\n      numIngredients: 4,\n      finalBlocks: [],\n      newIngredientButton: \"newIngredient\",\n      ingredients: {},\n      measures: {},\n      categoryOpen: false,\n      regionOpen: false,\n      typeOpen: false\n    };\n  }\n\n  changeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    this.setState({ [nam]: val });\n  };\n\n  ingredientsChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    var ingredientObj = this.state.ingredients\n    ingredientObj[nam] = val\n    this.setState({ingredients: ingredientObj})\n  }\n\n  measuresChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    var measuresObj = this.state.measures\n    measuresObj[nam] = val\n    this.setState({measures: measuresObj})\n  }\n\n  changeCategory(newValue) {\n    this.setState({ mainCategory: newValue });\n  }\n\n  changeType(newValue) {\n    this.setState({ mainType: newValue });\n  }\n\n  changeRegion(newValue) {\n    this.setState({ mainRegion: newValue });\n  }\n\n  toggleCategory(newValue) {\n    this.setState({ categoryOpen: newValue });\n  }\n\n  toggleRegion(newValue) {\n    this.setState({ regionOpen: newValue });\n  }\n\n  toggleType(newValue) {\n    this.setState({ typeOpen : newValue });\n  }\n\n  newIngredient(event)\n  {\n    if (this.state.numIngredients <= 20)\n    {\n      const slides = this.state.ingredientBlocks.map((item) => {\n        return (\n          <div id = {`ingredientContainer${item}`} className = \"ingredientContainer\">\n              <input name = {`ingredient${item}`} value = {this.state.ingredients[`ingredient\"${item}`]} onChange={this.ingredientsChangeHandler} className = \"text-center ingredientInput\" placeholder = {`Ingredient ${item}`}></input>\n              <span><input name = {`measure${item}`} value = {this.state.measures[`measure\"${item}`]} onChange={this.measuresChangeHandler} className = \"text-center measureInput\" placeholder = \"Measure/Units\"></input></span>\n          </div>\n        );\n      });\n      if (this.state.numIngredients === 4) \n      {\n        const newNum = this.state.numIngredients + 1\n        this.setState({\n        numIngredients: newNum,\n        ingredientBlocks: [newNum],\n        finalBlocks: slides});\n      }\n      else\n      {\n        const newNum = this.state.numIngredients + 1\n        var newBlocks = this.state.finalBlocks\n        newBlocks = newBlocks.concat(slides)\n        this.setState({\n        numIngredients: newNum,\n        ingredientBlocks: [newNum],\n        finalBlocks: newBlocks});\n        if (this.state.numIngredients === 20)\n        {\n          this.setState({newIngredientButton: \"newIngredientGone\"})\n        }\n      }\n\n    } \n    event.preventDefault();\n  }\n\n  getIngredientsOrMeasure(recipeData, parentArray, fieldName) {\n    for (var i = 1; i <= 20; i++) {\n      const fullFieldName = fieldName + i;\n      if (parentArray[fullFieldName] != null) \n      {\n        // if ingredient value present add to recipe Object\n        recipeData[fullFieldName] = parentArray[fullFieldName]\n      } else \n      {\n        // if no ingredient value present set as blank\n        recipeData[fullFieldName] = \"\";\n      }\n    }\n  }\n\n  addRecipeToDb() {\n    var recipeData = {};\n      recipeData.mealName = this.state.mealName ? this.state.mealName : \"\";\n      this.getIngredientsOrMeasure(recipeData, this.state.ingredients, \"ingredient\");\n      this.getIngredientsOrMeasure(recipeData, this.state.measures, \"measure\");\n      recipeData.mealThumbnail = this.state.mealThumbnail ? this.state.mealThumbnail : \"\";\n      recipeData.Instructions = this.state.Instructions ? this.state.Instructions : \"\";\n      recipeData.Tags = this.state.Tags ? this.state.Tags : \"\";\n      recipeData.Region = this.state.mainRegion ? this.state.mainRegion : \"\";\n      recipeData.Category = this.state.mainCategory ? this.state.mainCategory : \"\";\n      recipeData.Type = this.state.mainType ? this.state.mainType : \"\";\n\n      RecipeApi.post(\"/api/addRecipe\", recipeData).then((response) => {\n        if (response && response.data && Array.isArray(response.data.data.recipes) && response.data.data.recipes[0].idMeal) {\n          var id = response.data.data.recipes[0].idMeal;\n\n          // Redirect to Page that displays newly created Recipe\n          this.props.history.push(`/recipe/${id}`)\n        }\n      });\n  }\n\n  recipeAlreadyExists(recipeName)  {\n    RecipeApi.get(\"/api/checkRecipeExists/\"+ recipeName).then((response) => {\n      if (response && response.data && Array.isArray(response.data.data.recipes)) {\n        var recipes = response.data.data.recipes;\n        if (recipes.length > 0) {\n          toast.error(\"Recipe with this name already exists. Give a unique name to your recipe\", {\n            position:\"top-right\",\n            autoClose: 3000,\n            closeOnClick: true\n          });\n        } else {\n          this.addRecipeToDb()\n        }\n      }\n    });\n  }\n\n  validateFields() {\n    var isValid = true;\n    var errMsg;\n    var mealName = this.state.mealName ? this.state.mealName : \"\";\n    var ingredient1 = this.state.ingredients[\"ingredient1\"];\n    var measure1 = this.state.measures[\"measure1\"];\n    var mealThumbnail = this.state.mealThumbnail ? this.state.mealThumbnail : \"\";\n    var Instructions = this.state.Instructions ? this.state.Instructions : \"\";\n\n    if (mealName === \"\") {\n      isValid = false;\n      errMsg = \"Meal Name is mandatory\"\n    }\n\n    if (isValid && ingredient1 === undefined) {\n      isValid = false;\n      errMsg = \"Recipe should have at least one ingredient\"\n    }\n\n    if (isValid && measure1 === undefined) {\n      isValid = false;\n      errMsg = \"Ingredient should have some measure\"\n    }\n\n    if (isValid && Instructions === \"\") {\n      isValid = false;\n      errMsg = \"Recipe instructions are mandatory\"\n    }\n\n    if (isValid && mealThumbnail === \"\") {\n      isValid = false;\n      errMsg = \"Thumbnail URL is mandatory\"\n    }\n\n    if (!isValid) {\n      toast.dark(errMsg, {\n        position:\"top-right\",\n        autoClose: 3000,\n        closeOnClick: true\n      });\n    }\n    return isValid;\n  }\n\n  submitData = (event) => {\n    event.preventDefault();\n    if (this.validateFields()) {\n      this.recipeAlreadyExists(this.state.mealName)\n    }\n  };\n\n  render() {\n\n    return (\n      <div className = \"contentContainer\">\n        <ToastContainer />\n        <SpringScrollbars>\n        <div className = \"spatulaContainer\">\n            <img className = \"spatula\" alt=\"SpatulaImg\" src = \"/images/spatulaImage.png\"/>\n        </div>\n        <div className = \"mainAddRecipeContainer\">\n          <h1 className = \"text-center\">Add Recipe.</h1>\n          <form method=\"POST\" onSubmit={this.submitData}>\n            <input name = \"mealName\"   value={this.state.mealName} onChange={this.changeHandler} className = \"text-center mainInput\" placeholder = \"Recipe Name\"></input>\n            <div id = \"ingredientContainer1\" className = \"ingredientContainer\">\n              <input name = \"ingredient1\"  value={this.state.ingredients[`ingredient1`]} onChange={this.ingredientsChangeHandler} className = \"text-center ingredientInput\" placeholder = \"Ingredient 1\"></input>\n              <span><input name = \"measure1\" value={this.state.measures[`measure1`]} onChange={this.measuresChangeHandler} className = \"text-center measureInput\" placeholder = \"Measure/Units\"></input></span>\n            </div>\n            <div id = \"ingredientContainer2\" className = \"ingredientContainer\">\n              <input name = \"ingredient2\" value = {this.state.ingredients[`ingredient2`]} onChange={this.ingredientsChangeHandler} className = \"text-center ingredientInput\" placeholder = \"Ingredient 2\"></input>\n              <span><input name = \"measure2\" value = {this.state.measures[`measure2`]} onChange={this.measuresChangeHandler} className = \"text-center measureInput\" placeholder = \"Measure/Units\"></input></span>\n            </div>\n            <div id = \"ingredientContainer3\" className = \"ingredientContainer\">\n              <input name = \"ingredient3\" value = {this.state.ingredients[`ingredient3`]} onChange={this.ingredientsChangeHandler} className = \"text-center ingredientInput\" placeholder = \"Ingredient 3\"></input>\n              <span><input name = \"measure3\" value = {this.state.measures[`measure3`]} onChange={this.measuresChangeHandler} className = \"text-center measureInput\" placeholder = \"Measure/Units\"></input></span>\n            </div>\n            {this.state.finalBlocks}\n            <div id = \"moreIngredients\" className = \"moreIngredients\"></div>\n            <button type=\"button\" id = \"newIngredientButton\" className = {this.state.newIngredientButton} onClick={this.newIngredient}>+ Add Ingredient</button>\n            <textarea name = \"Instructions\"  value={this.state.Instructions} onChange={this.changeHandler} className = \"directionsInput\" placeholder = \"Preparation Instructions\"></textarea>\n            <div className = \"mainInput\">\n                <input name = \"mealThumbnail\"  value={this.state.mealThumbnail} onChange={this.changeHandler} className = \"text-center mainInput urlInput\" placeholder = \"Enter URL for Recipe Image\"></input>\n                <img className = \"uploadImage\" alt = \"upload\" src = \"../images/photoIcon.png\"/>\n            </div>\n            <DropdownButton isOpen = {this.state.categoryOpen} mainText = {this.state.mainCategory} toggleThisClass = {this.toggleCategory.bind(this)} toggleClass1 = {this.toggleRegion.bind(this)} toggleClass2 = {this.toggleType.bind(this)} changeData={this.changeCategory.bind(this)} id = \"Category\" className = {\"category\"} dropdown = {\"categoryDropdown\"} dropdownContainer = {\"categoryDropdownContainer\"} mainButton={\"categoryMain\"} categories = {[\"Appetizers\", \"Beverages\", \"Soups\",\"Salads\", \"Vegetables\",\"Main Dishes\",\"Breads\", \"Rolls\",\"Desserts\", \"Sides\", \"Miscellaneous\"]} imageId = \"categoryImage\" image = {\"../images/categoryIcon.png\"}/>\n            <DropdownButton isOpen = {this.state.regionOpen} mainText = {this.state.mainRegion} toggleThisClass = {this.toggleRegion.bind(this)} toggleClass1 = {this.toggleCategory.bind(this)} toggleClass2 = {this.toggleType.bind(this)} changeData={this.changeRegion.bind(this)} id = \"Region\" className = {\"region\"} dropdown = {\"regionDropdown\"} dropdownContainer = {\"regionDropdownContainer\"} mainButton={\"regionMain\"} categories = {[\"Turkish\",\"Italian\",\"Chinese\",\"Jamaican\",\"Dutch\",\"American\",\"Tunisian\",\"Spanish\",\"Japanese\",\"Canadian\",\"Indian\",\"Vietnamese\",\"Portuguese\",\"Moroccan\",\"Unknown\",\"Irish\",\"French\",\"Mexican\",\"Thai\",\"Malaysian\",\"Kenyan\",\"British\",\"Egyptian\",\"Greek\",\"Polish\",\"Russian\"]} imageId = \"regionImage\" image = {\"../images/regionIcon.png\"}/>\n            <DropdownButton isOpen = {this.state.typeOpen} mainText = {this.state.mainType} toggleThisClass = {this.toggleType.bind(this)} toggleClass1 = {this.toggleRegion.bind(this)} toggleClass2 = {this.toggleCategory.bind(this)} changeData={this.changeType.bind(this)} id = \"Type\" className = {\"type\"} dropdown = {\"typeDropdown\"} dropdownContainer = {\"typeDropdownContainer\"} mainButton={\"typeMain\"} categories = {[\"Vegetarian\", \"Non-Vegetarian\"]} imageId = \"typeImage\" image = {\"../images/typeIcon.png\"}/>\n            <div className = \"mainInput\">\n                <input name = \"Tags\" value={this.state.Tags} onChange={this.changeHandler} className = \"mainInput tagsInput\" placeholder = \"Tags e.g.(chicken, pie, carrots, etc.)\"></input>\n                <img className = \"uploadImage\" alt = \"tags\" src = \"../images/tagIcon.png\"/>\n            </div>\n            <div className = \"mainInput\">\n                <input name = \"Youtube\" value={this.state.Youtube} onChange={this.changeHandler} type = \"url\" className = \"text-center mainInput youtubeInput\" placeholder = \"YouTube URL\"></input>\n                <img className = \"uploadImage\" alt = \"video\" src = \"../images/videoIcon.png\"/>\n            </div>          \n            <button id = \"submitButton\" className = \"text-center submitButton\" type=\"submit\">Submit Recipe</button>\n          </form>\n        </div>\n        </SpringScrollbars>\n      </div>\n    );\n  }\n}\n \nexport default AddRecipe;","import React, { Component } from \"react\";\nimport { Animated, Easing } from 'react-native';\nimport {\n  NavLink,\n  HashRouter\n} from \"react-router-dom\";\nimport RecipeApi from \"./services/RecipeApi\";\nimport \"./css/searchStyles.css\";\nimport DropdownButton from \"./DropdownButton.js\";\nimport SpringScrollbars from \"./services/SpringScrollBar\";\n \nclass SearchRecipe extends Component {\n  constructor(props) {\n    super(props);\n    this.changeSearchCategory = this.changeSearchCategory.bind(this);\n    this.changeSearchRegion = this.changeSearchRegion.bind(this);\n    this.changeSearchType = this.changeSearchType.bind(this);\n    this.cancelFilter = this.cancelFilter.bind(this);\n    this.handleCancelFilter = this.handleCancelFilter.bind(this);\n    this.handleFilter = this.handleFilter.bind(this);\n    this.startFilter = this.startFilter.bind(this);\n    this.toggleSearchCategory = this.toggleSearchCategory.bind(this);\n    this.toggleSearchRegion = this.toggleSearchRegion.bind(this);\n    this.toggleSearchType = this.toggleSearchType.bind(this);\n    this.state = {\n      mealName: \"\",\n      Instructions: \"\",\n      mealThumbnail: \"\",\n      Tags: \"\",\n      Youtube: \"\",\n      mainCategory: \"Choose a Category\",\n      mainRegion: \"Choose a Region\",\n      mainType: \"Choose a Type\",\n      error: null,\n      isLoaded: false,\n      items: [],\n      recipes: [],\n      term: \"\",\n      dropdownDiv: \"dropdownDiv\",\n      stopFilter: \"stopFilter\",\n      filterDiv: \"filterDiv\",   \n      finishedFilter: \"finishedFilter\",\n      clearFilter: \"clearFilter\",\n      spinAnim: new Animated.Value(0),\n      categoryOpen: false,\n      regionOpen: false,\n      typeOpen: false\n    };\n  }\n\n  handleCancelFilter(event)\n  {\n    this.setState({\n      dropdownDiv: \"dropdownDiv\",\n      stopFilter: \"stopFilter\",\n      filterDiv: \"filterDiv\",   \n      finishedFilter: \"finishedFilter\",\n      clearFilter: \"clearFilter\"\n    });\n    event.preventDefault();\n  }\n\n  cancelFilter(event)\n  {\n    this.setState({\n      dropdownDiv: \"dropdownDiv\",\n      stopFilter: \"stopFilter\",\n      filterDiv: \"filterDiv\",   \n      finishedFilter: \"finishedFilter\",\n      clearFilter: \"clearFilter\",\n      mainCategory: \"Choose a Category\",\n      mainRegion: \"Choose a Region\",\n      mainType: \"Choose a Type\",\n      items: this.state.recipes\n    });\n    event.preventDefault();\n  }\n\n  toggleSearchCategory(newValue) {\n    this.setState({ categoryOpen: newValue });\n  }\n\n  toggleSearchRegion(newValue) {\n    this.setState({ regionOpen: newValue });\n  }\n\n  toggleSearchType(newValue) {\n    this.setState({ typeOpen : newValue });\n  }\n\n  handleFilter(event)\n  {\n    this.setState({\n      dropdownDiv: \"dropdownDiv\",\n      stopFilter: \"stopFilter\",\n      filterDiv: \"filterDiv\",   \n      finishedFilter: \"finishedFilter\",\n      clearFilter: \"clearFilter\"\n    });\n    const category = this.state.mainCategory\n    const region = this.state.mainRegion\n    const type = this.state.mainType\n  \n    let recipeArray = this.state.recipes.data.recipes\n    var filteredArray = recipeArray\n    if (category !== \"Choose a Category\")\n    {\n      filteredArray = filteredArray.filter(function(item) {\n        return item.Category === category\n      })\n    }\n    if (region !== \"Choose a Region\")\n    {\n      filteredArray = filteredArray.filter(function(item) {\n        return item.Region === region\n      })\n    }\n    if (type !== \"Choose a Type\")\n    {\n      filteredArray = filteredArray.filter(function(item) {\n        return item.Type === type\n      })\n    }\n    let filteredItems = {\n      data: {\n        recipes: filteredArray\n      }\n    }\n    this.setState({items: filteredItems});\n    event.preventDefault();\n    \n  }\n\n  startFilter(event) \n  {\n    this.setState({\n      dropdownDiv: \"dropdownDivActive\",\n      stopFilter: \"stopFilterActive\",\n      filterDiv: \"filterDivActive\",   \n      finishedFilter: \"finishedFilterActive\",\n      clearFilter: \"clearFilterActive\"\n    });\n    event.preventDefault();\n  }\n\n  changeSearchCategory(newValue) {\n    this.setState({ mainCategory: newValue });\n  }\n\n  changeSearchType(newValue) {\n    this.setState({ mainType: newValue });\n  }\n\n  changeSearchRegion(newValue) {\n    this.setState({ mainRegion: newValue });\n  }\n\n  componentDidMount() {\n    Animated.loop(Animated.timing(\n      this.state.spinAnim,\n    {\n      toValue: 100,\n      duration: 300000,\n      easing: Easing.linear,\n      useNativeDriver: true\n    }\n  )).start();\n    var keyword = this.props.match.params.recipeName;\n    const searchString = \"/api/searchRecipeByName/\" + keyword\n    RecipeApi.get(searchString).then(\n      (result) => {\n        const data = result.data;\n        this.setState({\n          isLoaded: true,\n          items: data,\n          term: keyword,\n          recipes: data\n        });\n        \n      },\n      (error) => {\n        this.setState({\n          isLoaded: true,\n          error,\n        });\n      }  \n    );    \n  }\n\n  render() {\n    const spin = this.state.spinAnim.interpolate({\n      inputRange: [0, 1],\n      outputRange: ['0deg', '360deg']\n    });\n    const carrotStyle  = {\n      transform: [{rotate: spin}],\n      position: \"absolute\",\n      top: \"5vw\",\n      left: \"5vw\",\n      right: \"5vw\",\n      bottom: \"5vw\",\n      height: \"10vw\",\n      width: \"10vw\"\n    }\n    var { error, isLoaded, items } = this.state;\n    if (error) {\n      return <div className = \"text-center errorMessage\">Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return (\n      <div>\n        <div className = \"loadingContainer\">\n            <img className = \"plate\" src = \"../images/loadingIcon.png\" alt = \"background\"/>\n            <Animated.Image style={carrotStyle} source = \"../images/ingredientIcon3.png\" alt = \"carrot\"/>\n        </div>\n        <h1 className = \"text-center loadingText\">Awaiting Yumminess</h1>\n\n      </div>);\n    } else {\n      let madeArr = Object.entries(items.data.recipes)\n      var recipeIcons = <div className = \"noRecipeContainer\"><img className = \"noRecipeIcon\" src = \"./images/logo.png\" alt = \"icon\"/><div className = \"text-center noRecipe\">No Recipe Found.</div></div>\n      \n      if (this.state.items.data.recipes.length !== 0)\n      {\n        recipeIcons = madeArr.map((item) => (\n          <NavLink to={`/recipe/${item[1].idMeal}`} className = \"shadow recipeBox\">\n            <div className = \"recipeImageHolder\">\n              <img className = \"recipeSearchImage\" alt = \"recipe\" src = {item[1].mealThumbnail}/>\n            </div>\n            <div className = \"recipeSearchText\">{item[1].mealName}</div>\n          </NavLink>\n        ));\n      }\n\n      return (\n      <HashRouter>\n        <div className = \"contentContainer\">\n          <div className = {this.state.filterDiv}>\n            <button onClick = {this.handleCancelFilter} className = {this.state.stopFilter}>\n              <div className = \"xLine1\"></div>\n              <div className = \"xLine2\"></div>\n            </button>\n            <div className = {this.state.dropdownDiv}>\n              <DropdownButton isOpen = {this.state.categoryOpen} mainText = {this.state.mainCategory} toggleThisClass = {this.toggleSearchCategory.bind(this)} toggleClass1 = {this.toggleSearchRegion.bind(this)} toggleClass2 = {this.toggleSearchType.bind(this)} changeData={this.changeSearchCategory.bind(this)} id = \"Category\" className = {\"category\"} dropdown = {\"categoryDropdown\"} dropdownContainer = {\"categoryDropdownContainer\"} mainButton={\"categoryMain\"} categories = {[\"Choose a Category\", \"Appetizers\", \"Beverages\", \"Soups\",\"Salads\", \"Vegetables\",\"Main Dishes\",\"Breads\", \"Rolls\",\"Desserts\", \"Sides\", \"Miscellaneous\"]} imageId = \"categoryImage\" image = {\"../images/categoryIcon.png\"}/>\n            </div>\n            <div className = {this.state.dropdownDiv}>\n              <DropdownButton isOpen = {this.state.regionOpen} mainText = {this.state.mainRegion} toggleThisClass = {this.toggleSearchRegion.bind(this)} toggleClass1 = {this.toggleSearchCategory.bind(this)} toggleClass2 = {this.toggleSearchType.bind(this)} changeData={this.changeSearchRegion.bind(this)} id = \"Region\" className = {\"region\"} dropdown = {\"regionDropdown\"} dropdownContainer = {\"regionDropdownContainer\"} mainButton={\"regionMain\"} categories = {[\"Choose a Region\", \"Turkish\",\"Italian\",\"Chinese\",\"Jamaican\",\"Dutch\",\"American\",\"Tunisian\",\"Spanish\",\"Japanese\",\"Canadian\",\"Indian\",\"Vietnamese\",\"Portuguese\",\"Moroccan\",\"Unknown\",\"Irish\",\"French\",\"Mexican\",\"Thai\",\"Malaysian\",\"Kenyan\",\"British\",\"Egyptian\",\"Greek\",\"Polish\",\"Russian\"]} imageId = \"regionImage\" image = {\"../images/regionIcon.png\"}/>            \n            </div>\n            <div className = {this.state.dropdownDiv}>\n              <DropdownButton isOpen = {this.state.typeOpen} mainText = {this.state.mainType} toggleThisClass = {this.toggleSearchType.bind(this)} toggleClass1 = {this.toggleSearchRegion.bind(this)} toggleClass2 = {this.toggleSearchCategory.bind(this)} changeData={this.changeSearchType.bind(this)} id = \"Type\" className = {\"type\"} dropdown = {\"typeDropdown\"} dropdownContainer = {\"typeDropdownContainer\"} mainButton={\"typeMain\"} categories = {[\"Choose a Type\", \"Vegetarian\", \"Non-Vegetarian\"]} imageId = \"typeImage\" image = {\"../images/typeIcon.png\"}/>\n            </div>\n            <div className = {this.state.dropdownDiv}>\n              <button className = {this.state.finishedFilter} onClick = {this.handleFilter}><img className = \"filterIcon2\" alt = \"filter\" src = \"../images/filterIconWhite.png\"/>Apply Filter</button>\n            </div>\n            <div className = {this.state.dropdownDiv}>\n              <button className = {this.state.clearFilter} onClick = {this.cancelFilter}>Clear Filters</button>\n            </div>\n          </div>\n          <SpringScrollbars>\n          \n          <div className = \"spatulaContainer\">\n              <img className = \"spatula\" alt=\"SpatulaImg\" src = \"/images/spatulaImage.png\"/>\n          </div>\n          <div className = \"searchHeader\">\n            <h1 className = \"searchHeaderText\">Search Results for \"{this.state.term}\"</h1>\n            <div className = \"filters\">\n              <button className = \"filterButton\" onClick = {this.startFilter}>\n                <img className = \"filterIcon\" alt = \"filter\" src = \"../images/filterIcon.png\"/>\n                Filter\n              </button>\n            </div>\n            <div className = \"mainSearchContainer\">\n              {recipeIcons}\n            </div>\n          </div>\n          </SpringScrollbars>\n        </div>\n        </HashRouter>\n\n      );\n    }\n  }\n}\n\nexport default SearchRecipe;\n","import React, { Component } from \"react\";\nimport {\n    Route,\n    NavLink,\n    HashRouter\n} from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Browse from \"./Browse\";\nimport AddRecipe from \"./AddRecipe\"\nimport SearchRecipe from \"./SearchRecipe\"\nimport RecipePage from \"./RecipePage\"\nimport EditRecipe from \"./EditRecipe\"\n \nclass Main extends Component {\n    constructor(props) {\n        super(props);\n        this.handleNav = this.handleNav.bind(this);\n        this.handleNavClick = this.handleNavClick.bind(this);\n        this.state = {\n            backgroundClass: \"background\",\n            browseClass: \"browseButton\",\n            homeClass: \"homeButton\",\n            burgerLine1: \"line1\",\n            burgerLine2: \"line2\",\n            burgerLine3: \"line3\"\n        };\n        }\n\n    handleNav() {\n        if (this.state.backgroundClass === \"background\")\n        {\n            this.setState ({\n                backgroundClass: \"backgroundActive\",\n                browseClass: \"browseButtonActive\",\n                homeClass: \"homeButtonActive\",\n                burgerLine1: \"line1Active\",\n                burgerLine2: \"line2Active\",\n                burgerLine3: \"line3Active\"\n            });\n        }\n        else\n        {\n            this.setState ({\n                backgroundClass: \"background\",\n                browseClass: \"browseButton\",\n                homeClass: \"homeButton\",\n                burgerLine1: \"line1\",\n                burgerLine2: \"line2\",\n                burgerLine3: \"line3\"\n            });\n        }\n\n    }\n\n    handleNavClick() {\n        if (this.state.backgroundClass === \"backgroundActive\")\n        {\n            this.setState ({\n                backgroundClass: \"background\",\n                browseClass: \"browseButton\",\n                homeClass: \"homeButton\",\n                burgerLine1: \"line1\",\n                burgerLine2: \"line2\",\n                burgerLine3: \"line3\"\n            });\n        }\n    }\n\n    render() {\n    return (\n        <HashRouter>\n        <nav className = \"nav\">\n            <div className={this.state.backgroundClass}></div>\n            <NavLink exact to=\"/\"><img className = \"logo\" src = \"/images/logo.png\" alt=\"logoImg\"/></NavLink>\n            <div className = \"linkContainer\">\n                <ul className=\"header\">\n                    <li className = {this.state.browseClass}><NavLink onClick = {this.handleNavClick} to= \"/browse\">Browse</NavLink></li>\n                    <li className = {this.state.homeClass} ><NavLink  onClick = {this.handleNavClick} exact to= \"/\">Home</NavLink></li>\n                </ul> \n            </div>\n            <button className=\"burger\" onClick = {this.handleNav}>\n                <div className={this.state.burgerLine1}></div>\n                <div className={this.state.burgerLine2}></div>\n                <div className={this.state.burgerLine3}></div>\n            </button>\n        </nav>\n        <div className=\"content\">\n            <Route exact path=\"/\" component={Home}/>\n            <Route path=\"/browse\" component={Browse}/>\n            <Route path=\"/add\" component={AddRecipe}/>\n            <Route path=\"/search/:recipeName\" component={SearchRecipe}/>\n            <Route path=\"/recipe/:recipeId\" component={RecipePage}/>\n            <Route path=\"/edit/:recipeId\" component={EditRecipe}/>\n        </div>\n        </HashRouter>\n    );\n    }\n}\n\nexport default Main;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Main from \"./Main\";\nimport \"./css/styles.css\"\nimport \"./css/homeStyles.css\"\nimport \"./css/browseStyles.css\"\nimport \"./css/searchStyles.css\"\n \nReactDOM.render(\n  <Main/>, \n  document.getElementById(\"root\")\n);","import axios from \"axios\";\n\n// const url = 'http://localhost:5000';\nconst url = window.location.origin;\n\nexport default axios.create({\n    baseURL: `${url}`\n})","import React, { Component } from \"react\";\nimport \"./css/addStyles.css\"; \n\nclass DropdownButton extends Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleDropdown = this.handleDropdown.bind(this);\n        this.onClick = this.onClick.bind(this);\n        this.state = {\n            categories: this.props.categories,\n            dropdown: this.props.dropdown,\n            dropdownContainer: this.props.dropdownContainer,\n            imageId: this.props.imageId\n        }\n      }\n\n      handleClick(event) {\n        const id = event.target.id;\n        var name = document.getElementById(id).innerHTML\n        this.props.changeData(name)\n\n      }\n\n      onClick(event) {\n        this.handleDropdown(event);\n        this.handleClick(event);\n        event.preventDefault()\n     }\n\n      handleDropdown(event) {\n        if (this.props.isOpen === false)\n        {\n           this.props.toggleThisClass(true)\n        }\n        else\n        {\n            this.props.toggleThisClass(false)\n        }\n        \n        this.props.toggleClass1(false)\n        this.props.toggleClass2(false)\n        event.preventDefault();\n    }\n\n    \n  render() {\n    let madeArr = Object.entries(this.props.categories)\n    let category = madeArr.map(p=>\n        <button id = {this.props.className + p[0]} name= {this.props.class + p[0]} className = \"text-center dropdownButtons\" onClick = {this.onClick} >{p[1]}</button>\n    );\n    if (this.props.isOpen === false)\n    {\n        return (\n            <div id = {this.props.dropdownContainer} className = \"dropdownContainer-closed\">\n                <button id = {this.props.mainButton} className = \"text-center mainButton\" onClick = {this.handleDropdown}>{this.props.mainText}\n                    <img id = {this.props.imageId} className = \"downArrow\" src = \"../images/dropdownIcon.png\" alt = \"dropdown\"/>\n                    <img className = \"uploadImage\" alt = \"category\" src = {this.props.image}/>\n                </button>\n                <div id = {this.props.dropdown} className = \"dropdown-closed\">\n                    {category}\n                </div>\n            </div>\n        );\n    }\n    else\n    {\n        return (\n            <div id = {this.props.dropdownContainer} className = \"dropdownContainer-open\">\n                <button id = {this.props.mainButton} className = \"text-center mainButton\" onClick = {this.handleDropdown}>{this.props.mainText}\n                    <img id = {this.props.imageId} className = \"downArrow downArrowRotate\" src = \"../images/dropdownIcon.png\" alt = \"dropdown\"/>\n                    <img className = \"uploadImage\" alt = \"category\" src = {this.props.image}/>\n                </button>\n                <div id = {this.props.dropdown} className = \"dropdown-open\">\n                    {category}\n                </div>\n            </div>\n        );\n    }\n  }\n}\n \nexport default DropdownButton;","import React, { Component } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { SpringSystem, MathUtil } from 'rebound';\n\nexport default class SpringScrollbars extends Component {\n\n    constructor(props, ...rest) {\n        super(props, ...rest);\n        this.handleSpringUpdate = this.handleSpringUpdate.bind(this);\n    }\n\n    componentDidMount() {\n        this.springSystem = new SpringSystem();\n        this.spring = this.springSystem.createSpring();\n        this.spring.addListener({ onSpringUpdate: this.handleSpringUpdate });\n    }\n\n    componentWillUnmount() {\n        this.springSystem.deregisterSpring(this.spring);\n        this.springSystem.removeAllListeners();\n        this.springSystem = undefined;\n        this.spring.destroy();\n        this.spring = undefined;\n    }\n\n    getScrollTop() {\n        return this.refs.scrollbars.getScrollTop();\n    }\n\n    getScrollHeight() {\n        return this.refs.scrollbars.getScrollHeight();\n    }\n\n    getHeight() {\n        return this.refs.scrollbars.getHeight();\n    }\n\n    scrollTop(top) {\n        const { scrollbars } = this.refs;\n        const scrollTop = scrollbars.getScrollTop();\n        const scrollHeight = scrollbars.getScrollHeight();\n        const val = MathUtil.mapValueInRange(top, 0, scrollHeight, scrollHeight * 0.2, scrollHeight * 0.8);\n        this.spring.setCurrentValue(scrollTop).setAtRest();\n        this.spring.setEndValue(val);\n    }\n\n    handleSpringUpdate(spring) {\n        const { scrollbars } = this.refs;\n        const val = spring.getCurrentValue();\n        scrollbars.scrollTop(val);\n    }\n\n    render() {\n        return (\n            <Scrollbars\n                {...this.props}\n                ref=\"scrollbars\"/>\n        );\n    }\n}","import React, { Component } from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport { Animated, Easing } from 'react-native';\nimport RecipeApi from \"./services/RecipeApi\";\nimport \"./css/recipeStyles.css\";\nimport SpringScrollbars from \"./services/SpringScrollBar\";\n\nclass Recipe extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      spinAnim: new Animated.Value(0)\n    };\n  }\n\n  componentDidMount() {\n    Animated.loop(Animated.timing(\n      this.state.spinAnim,\n    {\n      toValue: 100,\n      duration: 300000,\n      easing: Easing.linear,\n      useNativeDriver: true\n    }\n  )).start();\n    var id = this.props.match.params.recipeId;\n    var api = \"/api/getRecipeById/\" + id;\n    RecipeApi.get(api).then(\n      (result) => {\n        this.setState({\n          isLoaded: true,\n          items: result.data,\n        });\n      },\n      (error) => {\n        this.setState({\n          isLoaded: true,\n          error,\n        });\n      }\n    );\n  }\n\n  deleteRecipe = (event) => {\n    var recipeId = this.props.match.params.recipeId\n    var api = \"/api/deleteRecipe/\" + recipeId;\n    RecipeApi.delete(api).then(\n      (result) => {\n        this.props.history.push(`/browse`)\n      },\n      (error) => {\n        this.setState({\n          isLoaded: true,\n          error,\n        });\n      }\n    );\n  }\n\n  render() {\n    var ingredients = [];\n    var measurements = [];\n    const spin = this.state.spinAnim.interpolate({\n      inputRange: [0, 1],\n      outputRange: ['0deg', '360deg']\n    });\n    const carrotStyle  = {\n      transform: [{rotate: spin}],\n      position: \"absolute\",\n      top: \"5vw\",\n      left: \"5vw\",\n      right: \"5vw\",\n      bottom: \"5vw\",\n      height: \"10vw\",\n      width: \"10vw\"\n\n    }\n    const { error, isLoaded, items } = this.state;\n    if (error) {\n      return <div class = \"text-center errorMessage\">Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return (\n        <div>\n        <div className = \"loadingContainer\">\n            <img className = \"plate\" src = \"../images/loadingIcon.png\" alt = \"background\"/>\n            <Animated.Image style={carrotStyle} source = \"../images/ingredientIcon3.png\" alt = \"carrot\"/>\n        </div>\n        <h1 className = \"text-center loadingText\">Awaiting Yumminess</h1>\n\n      </div>)\n    } else {\n      if (items && items.data && items.data.recipes) \n      {\n        if (Array.isArray(items.data.recipes))\n        {\n          var recipe = items.data.recipes[0];\n          const category = \"Category: \" + recipe.Category;\n          const region = \"Region: \" + recipe.Region;\n          if (recipe.Tags !== null)\n          {\n            var newTags = recipe.Tags.replaceAll(\",\", \", \")\n          }\n          const tags = \"Tags: \" + newTags;\n          const type = \"Type: \" + recipe.Type;\n          var ingredientNum = recipe.ingredient1;\n          var measureNum = recipe.measure1;\n          var i = 1;\n          while (ingredientNum !== null && ingredientNum !== \"\" && i <= 20)\n          {\n            ingredients.push(ingredientNum);\n            measurements.push(measureNum)\n            i = i + 1\n            ingredientNum = eval(\"recipe.ingredient\" + i)\n            measureNum = eval(\"recipe.measure\" + i)\n          }\n          var makeIngredients = [];\n          for (var j = 0; j < ingredients.length; j++) {\n              var item1 = ingredients[j];\n              var item2 = measurements[j];\n              makeIngredients.push(<div className = \"mainIngredientText\"><img className = \"ingredientBullet\" src = \"../images/ingredientIcon.png\" alt = \"bulletpoint\"/><div className = \"measurementText\">{item2}</div><div className = \"ingredientText\">{item1}  </div></div>);\n          }\n          return (\n              <div className = \"contentContainer\">\n                <SpringScrollbars>\n                <div className = \"spatulaContainer\">\n                    <img className = \"spatula\" alt=\"SpatulaImg\" src = \"/images/spatulaImage.png\"/>\n                </div>\n            \n                <div className = \"recipeContainer\">\n                  <h1 className = \"text-center\">{recipe.mealName}</h1>\n                  <div className = \"divider\"></div>\n                  <div className = \"photoHolder\">\n                    <img className = \"recipeImage\" alt=\"recipeImage\" src = {`${recipe.mealThumbnail}`}/>\n                  </div>\n                  <div className = \"stepsContainer\">\n                    <h2 className = \"recipeText\">Ingredients</h2>\n                    <div className = \"ingredientContainerShow\">\n                      {makeIngredients}\n                    </div>\n                    <h2 className = \"recipeText\">Instructions</h2>\n                    <p className = \"instructionsText\">{recipe.Instructions}</p>\n                  </div>\n                  <div className = \"widgetContainer\">\n                    <img className = \"widgetImage\" alt = \"category\" src = \"../images/categoryIcon.png\"/>\n                    <span>\n                      <h2 className = \"widgetText\">{category}</h2>\n                    </span>\n                  </div>\n                  <div className = \"widgetContainer\">\n                    <img className = \"widgetImage\" alt = \"type\" src = \"../images/typeIcon.png\"/>\n                    <span>\n                      <h2 className = \"widgetText\">{type}</h2>\n                    </span>\n                  </div>\n                  <div className = \"widgetContainer\">\n                    <img className = \"widgetImage\" alt = \"region\" src = \"../images/regionIcon.png\"/>\n                    <span>\n                      <h2 className = \"widgetText\">{region}</h2>\n                    </span>\n                  </div>\n                  <div className = \"widgetContainer\">\n                    <img className = \"widgetImage\" alt = \"region\" src = \"../images/tagIcon.png\"/>\n                    <span>\n                      <h2 className = \"widgetText\">{tags}</h2>\n                    </span>\n                  </div>\n                  <div className = \"widgetContainer\">\n                    <NavLink to={`/edit/${recipe.idMeal}`} className = \"text-center editRecipe\">Edit Recipe</NavLink>\n                  </div>\n                  <div className = \"widgetContainer\">\n                    <div className = \"text-center deleteRecipe\" onClick={this.deleteRecipe}>Delete Recipe</div>\n                  </div>\n                </div>\n                </SpringScrollbars>\n              </div>\n            \n          );\n        }\n      }\n     \n    }\n  }\n}\n\nexport default Recipe;\n","import React, { Component } from \"react\";\nimport \"./css/addStyles.css\";\nimport DropdownButton from \"./DropdownButton.js\";\nimport RecipeApi from \"./services/RecipeApi\";\nimport {Animated, Easing } from 'react-native';\nimport SpringScrollbars from \"./services/SpringScrollBar\";\nimport { ToastContainer, toast } from 'material-react-toastify';\nimport 'material-react-toastify/dist/ReactToastify.css';\n\nclass EditRecipe extends Component {\n  constructor(props) {\n    super(props);\n    this.newIngredient = this.newIngredient.bind(this);\n    this.submitData = this.submitData.bind(this);\n    this.changeCategory = this.changeCategory.bind(this);\n    this.changeRegion = this.changeRegion.bind(this);\n    this.changeType = this.changeType.bind(this);\n    this.toggleCategory = this.toggleCategory.bind(this);\n    this.toggleRegion = this.toggleRegion.bind(this);\n    this.toggleType = this.toggleType.bind(this);\n    this.state = {\n      mealName: \"\",\n      Instructions: \"\",\n      mealThumbnail: \"\",\n      Tags: \"\",\n      Youtube: \"\",\n      mainCategory: \"Choose a Category\",\n      mainRegion: \"Choose a Region\",\n      mainType: \"Choose a Type\",\n      id: \"\",\n      spinAnim: new Animated.Value(0),\n      categoryOpen: false,\n      regionOpen: false,\n      typeOpen: false,\n      ingredientBlocks: [4],\n      initialNumIngredients: 0,\n      ingredients: {},\n      measures: {},\n      numIngredients: 4,\n      finalBlocks: [],\n      newIngredientButton: \"newIngredient\",\n    };\n  }\n\n\n  ingredientsChangeHandler = (event) => {\n    let nam = event.target.id;\n    let val = event.target.value;\n    var ingredientObj = this.state.ingredients\n    ingredientObj[nam] = val\n    this.setState({ingredients: ingredientObj})\n  }\n\n  measuresChangeHandler = (event) => {\n    let nam = event.target.id;\n    let val = event.target.value;\n    var measuresObj = this.state.measures\n    measuresObj[nam] = val\n    this.setState({measures: measuresObj})\n  }\n\n  changeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    this.setState({ [nam]: val });\n  };\n\n  changeCategory(newValue) {\n    this.setState({ mainCategory: newValue });\n  }\n\n  changeType(newValue) {\n    this.setState({ mainType: newValue });\n  }\n\n  changeRegion(newValue) {\n    this.setState({ mainRegion: newValue });\n  }\n\n  toggleCategory(newValue) {\n    this.setState({ categoryOpen: newValue });\n  }\n\n  toggleRegion(newValue) {\n    this.setState({ regionOpen: newValue });\n  }\n\n  toggleType(newValue) {\n    this.setState({ typeOpen : newValue });\n  }\n\n  newIngredient(event)\n  {\n    if (this.state.numIngredients <= 20)\n    {\n      const slides = this.state.ingredientBlocks.map((item) => {\n        return (\n          <div id = {`ingredientContainer${item}`} className = \"ingredientContainer\">\n              <input id = {`ingredient${item}`} value = {this.state.ingredients[`ingredient\"${item}`]} onChange={this.ingredientsChangeHandler} className = \"text-center ingredientInput\" placeholder = {`Ingredient ${item}`}></input>\n              <span><input id = {`measure${item}`} value = {this.state.measures[`measure\"${item}`]} onChange={this.measuresChangeHandler} className = \"text-center measureInput\" placeholder = \"Measure/Units\"></input></span>\n          </div>\n        );\n      });\n        \n      const newNum = this.state.numIngredients + 1\n      var newBlocks = this.state.finalBlocks\n      newBlocks = newBlocks.concat(slides)\n      this.setState({\n      numIngredients: newNum,\n      ingredientBlocks: [newNum],\n      finalBlocks: newBlocks});\n      if (this.state.numIngredients === 20)\n      {\n        this.setState({newIngredientButton: \"newIngredientGone\"})\n      }\n    } \n    event.preventDefault();\n  }\n\n  getIngredientsOrMeasure(recipeData, parentArray, fieldName) {\n    for (var i = 1; i <= 20; i++) {\n      const fullFieldName = fieldName + i;\n      if (parentArray[fullFieldName] != null) \n      {\n        // if ingredient value present add to recipe Object\n        recipeData[fullFieldName] = parentArray[fullFieldName]\n      } else \n      {\n        // if no ingredient value present set as blank\n        recipeData[fullFieldName] = \"\";\n      }\n    }\n  }\n\n  validateFields() {\n    var isValid = true;\n    var errMsg;\n    var mealName = this.state.mealName ? this.state.mealName : \"\";\n    var ingredient1 = this.state.ingredients[\"ingredient1\"];\n    var measure1 = this.state.measures[\"measure1\"];\n    var mealThumbnail = this.state.mealThumbnail ? this.state.mealThumbnail : \"\";\n    var Instructions = this.state.Instructions ? this.state.Instructions : \"\";\n\n    if (mealName === \"\") {\n      isValid = false;\n      errMsg = \"Meal Name is mandatory\"\n    }\n\n    if (isValid && ingredient1 === undefined) {\n      isValid = false;\n      errMsg = \"Recipe should have at least one ingredient\"\n    }\n\n    if (isValid && measure1 === undefined) {\n      isValid = false;\n      errMsg = \"Ingredient should have some measure\"\n    }\n\n    if (isValid && Instructions === \"\") {\n      isValid = false;\n      errMsg = \"Recipe instructions are mandatory\"\n    }\n\n    if (isValid && mealThumbnail === \"\") {\n      isValid = false;\n      errMsg = \"Thumbnail URL is mandatory\"\n    }\n\n    if (!isValid) {\n      toast.dark(errMsg, {\n        position:\"top-right\",\n        autoClose: 3000,\n        closeOnClick: true\n      });\n    }\n    return isValid;\n  }\n\n  componentDidMount() {\n    Animated.loop(Animated.timing(\n      this.state.spinAnim,\n    {\n      toValue: 100,\n      duration: 300000,\n      easing: Easing.linear,\n      useNativeDriver: true\n    }\n  )).start();\n    var id = this.props.match.params.recipeId;\n    var api = \"/api/getRecipeById/\" + id;\n    RecipeApi.get(api).then(\n      (result) => {\n        let recipe = result.data.data.recipes[0]\n        let finalTag = \"\"\n        let newCategory = this.state.mainCategory\n        let newRegion = this.state.mainRegion\n        let newType = this.state.mainType\n        if (recipe.Tags !== null)\n        {\n            finalTag = recipe.Tags.replaceAll(\",\",\", \")\n        }\n        if (recipe.Category !== null)\n        {\n            newCategory = recipe.Category\n        }\n        if (recipe.Region !== null)\n        {\n            newRegion = recipe.Region\n        }\n        if (recipe.Type !== null)\n        {\n            newType = recipe.Type\n        }\n\n        var makeIngredients = [];\n        var item1 =  eval(\"recipe.ingredient\" + 1)\n        var i = 1;\n        while (item1 !== null && item1 !== \"\" && i <= 20) {\n              const item2 =  eval(\"recipe.measure\" + i)\n              const ingredientId = (\"ingredient\" + i)\n              const measureId = (\"measure\" + i)\n              const divId = (\"ingredientContainer\" + i)\n              makeIngredients.push(<div id = {divId} className = \"ingredientContainer\">\n              <input id = {ingredientId} onChange={this.ingredientsChangeHandler} className = \"text-center ingredientInput\" defaultValue = {item1}></input>\n              <span><input id = {measureId} onChange={this.measuresChangeHandler} className = \"text-center measureInput\" defaultValue = {item2}></input></span>\n              </div>);\n              var currIngredients = this.state.ingredients\n              currIngredients[`ingredient${i}`] = item1\n              var currMeasures = this.state.measures\n              currMeasures[`measure${i}`] = item2\n\n              this.setState ({\n                ingredients: currIngredients,\n                measures: currMeasures\n              });\n              i = i + 1;\n              item1 =  eval(\"recipe.ingredient\" + i)\n        }\n        const numInitial = i;\n        this.setState({\n            isLoaded: true,\n            items: result.data,\n            mealName: recipe.mealName,\n            Instructions: recipe.Instructions,\n            mealThumbnail: recipe.mealThumbnail,\n            Tags: finalTag,\n            Youtube: recipe.Youtube,\n            mainCategory: newCategory,\n            mainRegion: newRegion,\n            mainType: newType,\n            id: recipe.idMeal,\n            numIngredients: numInitial,\n            ingredientBlocks: [numInitial],\n            finalBlocks: makeIngredients,\n            initialNumIngredients: numInitial+1\n        });\n      },\n      (error) => {\n        this.setState({\n          isLoaded: true,\n          error,\n        });\n      }\n    );\n  }\n  submitData = (event) => {\n    event.preventDefault();\n    if (this.validateFields())\n    {\n      var recipeData = {};\n      recipeData.mealName = this.state.mealName ? this.state.mealName : \"\";\n      this.getIngredientsOrMeasure(recipeData, this.state.ingredients, \"ingredient\");\n      this.getIngredientsOrMeasure(recipeData, this.state.measures, \"measure\");\n      recipeData.mealThumbnail = this.state.mealThumbnail ? this.state.mealThumbnail : \"\";\n      recipeData.Instructions = this.state.Instructions ? this.state.Instructions : \"\";\n      recipeData.Tags = this.state.Tags ? this.state.Tags : \"\";\n      if (this.state.mainRegion === \"Choose a Region\")\n      {\n          recipeData.Region = \"\"\n      }\n      else\n      {\n          recipeData.Region = this.state.mainRegion\n      }\n      if (this.state.mainCategory === \"Choose a Category\")\n      {\n          recipeData.Category = \"\"\n      }\n      else\n      {\n          recipeData.Category = this.state.mainCategory\n      }\n      if (this.state.mainType === \"Choose a Type\")\n      {\n          recipeData.Type = \"\"\n      }\n      else\n      {\n          recipeData.Type = this.state.mainType\n      }\n\n      RecipeApi.put(`/api/updateRecipe/${this.state.id}`, recipeData).then((response) => {\n          this.props.history.push(`/recipe/${this.state.id}`)\n      });\n    }\n  };\n\n  render() {\n\n    const spin = this.state.spinAnim.interpolate({\n        inputRange: [0, 1],\n        outputRange: ['0deg', '360deg']\n      });\n      const carrotStyle  = {\n        transform: [{rotate: spin}],\n        position: \"absolute\",\n        top: \"5vw\",\n        left: \"5vw\",\n        right: \"5vw\",\n        bottom: \"5vw\",\n        height: \"10vw\",\n        width: \"10vw\"\n      }\n      const { error, isLoaded, items } = this.state;\n      if (error) {\n        return <div class = \"text-center errorMessage\">Error: {error.message}</div>;\n      } else if (!isLoaded) {\n        return (\n        <div>\n          <div className = \"loadingContainer\">\n              <img className = \"plate\" src = \"../images/loadingIcon.png\" alt = \"background\"/>\n              <Animated.Image style={carrotStyle} source = \"../images/ingredientIcon3.png\" alt = \"carrot\"/>\n          </div>\n          <h1 className = \"text-center loadingText\">Awaiting Yumminess</h1>\n  \n        </div>);\n      } else {\n          \n        return (\n        <div className = \"contentContainer\">\n          <ToastContainer />\n          <SpringScrollbars>\n            <div className = \"spatulaContainer\">\n                <img className = \"spatula\" alt=\"SpatulaImg\" src = \"/images/spatulaImage.png\"/>\n            </div>\n            <div className = \"mainAddRecipeContainer\">\n            <h1 className = \"text-center\">Edit Recipe.</h1>\n            <form method=\"POST\" onSubmit={this.submitData}>\n                <input name = \"mealName\" onChange={this.changeHandler} className = \"text-center mainInput\" type=\"text\" defaultValue={this.state.mealName}></input>\n                {this.state.finalBlocks}\n                <div id = \"moreIngredients\" className = \"moreIngredients\"></div>\n                <button type=\"button\" id = \"newIngredientButton\" className = {this.state.newIngredientButton} onClick={this.newIngredient}>+ Add Ingredient</button>\n                <textarea name = \"Instructions\" onChange={this.changeHandler} className = \"directionsInput\" type = \"text\" defaultValue = {this.state.Instructions}></textarea>\n                <div className = \"mainInput\">\n                    <input name = \"mealThumbnail\" defaultValue={this.state.mealThumbnail} onChange={this.changeHandler} className = \"text-center mainInput youtubeInput\"></input>\n                    <img className = \"uploadImage\" alt = \"upload\" src = \"../images/photoIcon.png\"/>\n                </div>\n                  <DropdownButton isOpen = {this.state.categoryOpen} mainText = {this.state.mainCategory} toggleThisClass = {this.toggleCategory.bind(this)} toggleClass1 = {this.toggleRegion.bind(this)} toggleClass2 = {this.toggleType.bind(this)} changeData={this.changeCategory.bind(this)} id = \"Category\" className = {\"category\"} dropdown = {\"categoryDropdown\"} dropdownContainer = {\"categoryDropdownContainer\"} mainButton={\"categoryMain\"} categories = {[\"Appetizers\", \"Beverages\", \"Soups\",\"Salads\", \"Vegetables\",\"Main Dishes\",\"Breads\", \"Rolls\",\"Desserts\", \"Sides\", \"Miscellaneous\"]} imageId = \"categoryImage\" image = {\"../images/categoryIcon.png\"}/>\n                  <DropdownButton isOpen = {this.state.regionOpen} mainText = {this.state.mainRegion} toggleThisClass = {this.toggleRegion.bind(this)} toggleClass1 = {this.toggleCategory.bind(this)} toggleClass2 = {this.toggleType.bind(this)} changeData={this.changeRegion.bind(this)} id = \"Region\" className = {\"region\"} dropdown = {\"regionDropdown\"} dropdownContainer = {\"regionDropdownContainer\"} mainButton={\"regionMain\"} categories = {[\"Turkish\",\"Italian\",\"Chinese\",\"Jamaican\",\"Dutch\",\"American\",\"Tunisian\",\"Spanish\",\"Japanese\",\"Canadian\",\"Indian\",\"Vietnamese\",\"Portuguese\",\"Moroccan\",\"Unknown\",\"Irish\",\"French\",\"Mexican\",\"Thai\",\"Malaysian\",\"Kenyan\",\"British\",\"Egyptian\",\"Greek\",\"Polish\",\"Russian\"]} imageId = \"regionImage\" image = {\"../images/regionIcon.png\"}/>\n                  <DropdownButton isOpen = {this.state.typeOpen} mainText = {this.state.mainType} toggleThisClass = {this.toggleType.bind(this)} toggleClass1 = {this.toggleRegion.bind(this)} toggleClass2 = {this.toggleCategory.bind(this)} changeData={this.changeType.bind(this)} id = \"Type\" className = {\"type\"} dropdown = {\"typeDropdown\"} dropdownContainer = {\"typeDropdownContainer\"} mainButton={\"typeMain\"} categories = {[\"Vegetarian\", \"Non-Vegetarian\"]} imageId = \"typeImage\" image = {\"../images/typeIcon.png\"}/>\n                <div className = \"mainInput\">\n                    <input name = \"Tags\" defaultValue={this.state.Tags} onChange={this.changeHandler} className = \"mainInput tagsInput\"></input>\n                    <img className = \"uploadImage\" alt = \"tags\" src = \"../images/tagIcon.png\"/>\n                </div>\n                <div className = \"mainInput\">\n                    <input name = \"Youtube\" defaultValue={this.state.Youtube} onChange={this.changeHandler} type = \"url\" className = \"text-center mainInput youtubeInput\"></input>\n                    <img className = \"uploadImage\" alt = \"video\" src = \"../images/videoIcon.png\"/>\n                </div>            \n                <button id = \"submitButton\" className = \"text-center submitButton\" type=\"submit\">Update Recipe</button>\n            </form>\n            </div>\n            </SpringScrollbars>\n        </div>\n        );\n      }\n  }\n}\n \nexport default EditRecipe;"],"sourceRoot":""}