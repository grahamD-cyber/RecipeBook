{"version":3,"sources":["SearchRecipe.js","Home.js","Browse.js","AddRecipe.js","Main.js","index.js","services/RecipeApi.js","DropdownButton.js","services/SpringScrollBar.js","RecipePage.js","EditRecipe.js"],"names":["SearchRecipe","props","changeSearchCategory","bind","changeSearchRegion","changeSearchType","cancelFilter","handleCancelFilter","handleFilter","startFilter","state","mealName","Instructions","mealThumbnail","Tags","Youtube","mainCategory","mainRegion","mainType","error","isLoaded","items","recipes","term","dropdownDiv","stopFilter","filterDiv","finishedFilter","clearFilter","spinAnim","Animated","Value","event","this","setState","console","log","preventDefault","category","region","type","filteredArray","data","filter","item","Category","Region","Type","filteredItems","newValue","loop","timing","toValue","duration","easing","Easing","linear","useNativeDriver","start","keyword","match","params","recipeName","searchString","RecipeApi","get","then","result","carrotStyle","transform","rotate","interpolate","inputRange","outputRange","position","top","left","right","bottom","height","width","className","message","madeArr","Object","entries","recipeIcons","src","alt","length","map","to","idMeal","onClick","DropdownButton","mainText","changeData","id","dropdown","dropdownContainer","mainButton","categories","imageId","image","Image","style","source","Component","Home","setTerm","onKeyDown","searchTerm","placeholder","navClass","target","value","key","document","getElementById","click","stopPropagation","onChange","class","Browse","reverseList","recipeList","reverse","group","reduce","r","e","key1","undefined","toUpperCase","push","i","j","AddRecipe","changeHandler","nam","name","val","ingredientsChangeHandler","ingredientObj","ingredients","measuresChangeHandler","measuresObj","measures","submitData","validateFields","recipeAlreadyExists","newIngredient","changeCategory","changeRegion","changeType","ingredientBlocks","numIngredients","finalBlocks","newIngredientButton","slides","newNum","newBlocks","concat","recipeData","parentArray","fieldName","fullFieldName","getIngredientsOrMeasure","post","response","Array","isArray","history","toast","autoClose","closeOnClick","addRecipeToDb","errMsg","isValid","ingredient1","measure1","dark","method","onSubmit","Main","handleNav","handleNavClick","backgroundClass","browseClass","homeClass","line1","line2","line3","exact","path","component","RecipePage","EditRecipe","ReactDOM","render","url","window","location","origin","axios","create","baseURL","handleClick","handleDropdown","innerHTML","id2","id3","classList","remove","add","p","SpringScrollbars","rest","handleSpringUpdate","springSystem","SpringSystem","spring","createSpring","addListener","onSpringUpdate","deregisterSpring","removeAllListeners","destroy","refs","scrollbars","getScrollTop","getScrollHeight","getHeight","scrollTop","scrollHeight","MathUtil","mapValueInRange","setCurrentValue","setAtRest","setEndValue","getCurrentValue","ref","Recipe","deleteRecipe","api","recipeId","delete","measurements","spin","recipe","newTags","replaceAll","tags","youtube","ingredientNum","measureNum","eval","makeIngredients","item1","item2","put","finalTag","newCategory","newRegion","newType","newIngredientClicked","div","createElement","num","String","querySelector","appendChild","ingredientId","measureId","divId","defaultValue","required"],"mappings":"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","file":"static/js/main.5cff8030.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Animated, Easing } from 'react-native';\r\nimport {\r\n  NavLink,\r\n  HashRouter\r\n} from \"react-router-dom\";\r\nimport RecipeApi from \"./services/RecipeApi\";\r\nimport \"./css/searchStyles.css\";\r\nimport DropdownButton from \"./DropdownButton.js\";\r\n \r\nclass SearchRecipe extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.changeSearchCategory = this.changeSearchCategory.bind(this);\r\n    this.changeSearchRegion = this.changeSearchRegion.bind(this);\r\n    this.changeSearchType = this.changeSearchType.bind(this);\r\n    this.cancelFilter = this.cancelFilter.bind(this);\r\n    this.handleCancelFilter = this.handleCancelFilter.bind(this);\r\n    this.handleFilter = this.handleFilter.bind(this);\r\n    this.startFilter = this.startFilter.bind(this);\r\n    this.state = {\r\n      mealName: \"\",\r\n      Instructions: \"\",\r\n      mealThumbnail: \"\",\r\n      Tags: \"\",\r\n      Youtube: \"\",\r\n      mainCategory: \"Choose a Category\",\r\n      mainRegion: \"Choose a Region\",\r\n      mainType: \"Choose a Type\",\r\n      error: null,\r\n      isLoaded: false,\r\n      items: [],\r\n      recipes: [],\r\n      term: \"\",\r\n      dropdownDiv: \"dropdownDiv\",\r\n      stopFilter: \"stopFilter\",\r\n      filterDiv: \"filterDiv\",   \r\n      finishedFilter: \"finishedFilter\",\r\n      clearFilter: \"clearFilter\",\r\n      spinAnim: new Animated.Value(0)\r\n    };\r\n  }\r\n\r\n  handleCancelFilter(event)\r\n  {\r\n    this.setState({\r\n      dropdownDiv: \"dropdownDiv\",\r\n      stopFilter: \"stopFilter\",\r\n      filterDiv: \"filterDiv\",   \r\n      finishedFilter: \"finishedFilter\",\r\n      clearFilter: \"clearFilter\"\r\n    });\r\n    console.log(\"X pressed\")\r\n    event.preventDefault();\r\n  }\r\n\r\n  cancelFilter(event)\r\n  {\r\n    this.setState({\r\n      dropdownDiv: \"dropdownDiv\",\r\n      stopFilter: \"stopFilter\",\r\n      filterDiv: \"filterDiv\",   \r\n      finishedFilter: \"finishedFilter\",\r\n      clearFilter: \"clearFilter\",\r\n      mainCategory: \"Choose a Category\",\r\n      mainRegion: \"Choose a Region\",\r\n      mainType: \"Choose a Type\",\r\n      items: this.state.recipes\r\n    });\r\n    event.preventDefault();\r\n  }\r\n\r\n  handleFilter(event)\r\n  {\r\n    this.setState({\r\n      dropdownDiv: \"dropdownDiv\",\r\n      stopFilter: \"stopFilter\",\r\n      filterDiv: \"filterDiv\",   \r\n      finishedFilter: \"finishedFilter\",\r\n      clearFilter: \"clearFilter\"\r\n    });\r\n    const category = this.state.mainCategory\r\n    const region = this.state.mainRegion\r\n    const type = this.state.mainType\r\n  \r\n    let recipeArray = this.state.recipes.data.recipes\r\n    var filteredArray = recipeArray\r\n    if (category !== \"Choose a Category\")\r\n    {\r\n      console.log(\"category is not Choose a category\")\r\n      filteredArray = filteredArray.filter(function(item) {\r\n        return item.Category === category\r\n      })\r\n    }\r\n    if (region !== \"Choose a Region\")\r\n    {\r\n      console.log(\"region is not Choose a region\")\r\n      filteredArray = filteredArray.filter(function(item) {\r\n        return item.Region === region\r\n      })\r\n    }\r\n    if (type !== \"Choose a Type\")\r\n    {\r\n      console.log(\"type is not Choose a Type\")\r\n      filteredArray = filteredArray.filter(function(item) {\r\n        return item.Type === type\r\n      })\r\n    }\r\n    let filteredItems = {\r\n      data: {\r\n        recipes: filteredArray\r\n      }\r\n    }\r\n    this.setState({items: filteredItems});\r\n    event.preventDefault();\r\n    \r\n  }\r\n\r\n\r\n\r\n  startFilter(event) \r\n  {\r\n    this.setState({\r\n      dropdownDiv: \"dropdownDivActive\",\r\n      stopFilter: \"stopFilterActive\",\r\n      filterDiv: \"filterDivActive\",   \r\n      finishedFilter: \"finishedFilterActive\",\r\n      clearFilter: \"clearFilterActive\"\r\n    });\r\n    event.preventDefault();\r\n  }\r\n\r\n  changeSearchCategory(newValue) {\r\n    this.setState({ mainCategory: newValue });\r\n  }\r\n\r\n  changeSearchType(newValue) {\r\n    this.setState({ mainType: newValue });\r\n  }\r\n\r\n  changeSearchRegion(newValue) {\r\n    this.setState({ mainRegion: newValue });\r\n  }\r\n\r\n  componentDidMount() {\r\n    Animated.loop(Animated.timing(\r\n      this.state.spinAnim,\r\n    {\r\n      toValue: 100,\r\n      duration: 300000,\r\n      easing: Easing.linear,\r\n      useNativeDriver: true\r\n    }\r\n  )).start();\r\n    var keyword = this.props.match.params.recipeName;\r\n    const searchString = \"/api/searchRecipeByName/\" + keyword\r\n    RecipeApi.get(searchString).then(\r\n      (result) => {\r\n        const data = result.data;\r\n        this.setState({\r\n          isLoaded: true,\r\n          items: data,\r\n          term: keyword,\r\n          recipes: data\r\n        });\r\n        \r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          error,\r\n        });\r\n      }  \r\n    );    \r\n  }\r\n\r\n  render() {\r\n    const spin = this.state.spinAnim.interpolate({\r\n      inputRange: [0, 1],\r\n      outputRange: ['0deg', '360deg']\r\n    });\r\n    const carrotStyle  = {\r\n      transform: [{rotate: spin}],\r\n      position: \"absolute\",\r\n      top: \"5vw\",\r\n      left: \"5vw\",\r\n      right: \"5vw\",\r\n      bottom: \"5vw\",\r\n      height: \"10vw\",\r\n      width: \"10vw\"\r\n    }\r\n    var { error, isLoaded, items } = this.state;\r\n    if (error) {\r\n      return <div className = \"text-center errorMessage\">Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return (\r\n      <div>\r\n        <div className = \"loadingContainer\">\r\n            <img className = \"plate\" src = \"../images/loadingIcon.png\" alt = \"background\"/>\r\n            <Animated.Image style={carrotStyle} source = \"../images/ingredientIcon3.png\" alt = \"carrot\"/>\r\n        </div>\r\n        <h1 className = \"text-center loadingText\">Awaiting Yumminess</h1>\r\n\r\n      </div>);\r\n    } else {\r\n      let madeArr = Object.entries(items.data.recipes)\r\n      var recipeIcons = <div className = \"noRecipeContainer\"><img className = \"noRecipeIcon\" src = \"./images/logo.png\" alt = \"icon\"/><div className = \"text-center noRecipe\">No Recipe Found.</div></div>\r\n    \r\n      if (this.state.items.data.recipes.length !== 0)\r\n      {\r\n        recipeIcons = madeArr.map((item) => (\r\n          <NavLink to={`/recipe/${item[1].idMeal}`} className = \"shadow recipeBox\">\r\n            <div className = \"recipeImageHolder\">\r\n              <img className = \"recipeSearchImage\" alt = \"recipe\" src = {item[1].mealThumbnail}/>\r\n            </div>\r\n            <div className = \"recipeSearchText\">{item[1].mealName}</div>\r\n          </NavLink>\r\n        ));\r\n      }\r\n\r\n      return (\r\n      <HashRouter>\r\n        <div className = \"contentContainer\">\r\n          <div className = \"spatulaContainer\">\r\n              <img className = \"spatula\" alt=\"SpatulaImg\" src = \"/images/spatulaImage.png\"/>\r\n          </div>\r\n          <div className = {this.state.filterDiv}>\r\n            <button onClick = {this.handleCancelFilter} className = {this.state.stopFilter}>\r\n              <div className = \"xLine1\"></div>\r\n              <div className = \"xLine2\"></div>\r\n            </button>\r\n            <div className = {this.state.dropdownDiv}>\r\n              <DropdownButton mainText = {this.state.mainCategory} changeData={this.changeSearchCategory.bind(this)} id = \"Category\" className = {\"category\"} dropdown = {\"categoryDropdown\"} dropdownContainer = {\"categoryDropdownContainer\"} mainButton={\"categoryMain\"} categories = {[\"Choose a Category\", \"Appetizers\", \"Beverages\", \"Soups\",\"Salads\", \"Vegetables\",\"Main Dishes\",\"Breads\", \"Rolls\",\"Desserts\", \"Sides\", \"Miscellaneous\"]} imageId = \"categoryImage\" image = {\"../images/categoryIcon.png\"}/>\r\n            </div>\r\n            <div className = {this.state.dropdownDiv}>\r\n              <DropdownButton mainText = {this.state.mainRegion} changeData={this.changeSearchRegion.bind(this)} id = \"Region\" className = {\"region\"} dropdown = {\"regionDropdown\"} dropdownContainer = {\"regionDropdownContainer\"} mainButton={\"regionMain\"} categories = {[\"Choose a Region\", \"Turkish\",\"Italian\",\"Chinese\",\"Jamaican\",\"Dutch\",\"American\",\"Tunisian\",\"Spanish\",\"Japanese\",\"Canadian\",\"Indian\",\"Vietnamese\",\"Portuguese\",\"Moroccan\",\"Unknown\",\"Irish\",\"French\",\"Mexican\",\"Thai\",\"Malaysian\",\"Kenyan\",\"British\",\"Egyptian\",\"Greek\",\"Polish\",\"Russian\"]} imageId = \"regionImage\" image = {\"../images/regionIcon.png\"}/>\r\n            </div>\r\n            <div className = {this.state.dropdownDiv}>\r\n              <DropdownButton mainText = {this.state.mainType} changeData={this.changeSearchType.bind(this)} id = \"Type\" className = {\"type\"} dropdown = {\"typeDropdown\"} dropdownContainer = {\"typeDropdownContainer\"} mainButton={\"typeMain\"} categories = {[\"Choose a Type\", \"Vegetarian\", \"Non-Vegetarian\"]} imageId = \"typeImage\" image = {\"../images/typeIcon.png\"}/>\r\n            </div>\r\n            <div className = {this.state.dropdownDiv}>\r\n              <button className = {this.state.finishedFilter} onClick = {this.handleFilter}><img className = \"filterIcon2\" alt = \"filter\" src = \"../images/filterIconWhite.png\"/>Apply Filter</button>\r\n            </div>\r\n            <div className = {this.state.dropdownDiv}>\r\n              <button className = {this.state.clearFilter} onClick = {this.cancelFilter}>Clear Filters</button>\r\n            </div>\r\n          </div>\r\n          <div className = \"searchHeader\">\r\n            <h1 className = \"searchHeaderText\">Search Results for \"{this.state.term}\"</h1>\r\n            <div className = \"filters\">\r\n              <button className = \"filterButton\" onClick = {this.startFilter}>\r\n                <img className = \"filterIcon\" alt = \"filter\" src = \"../images/filterIcon.png\"/>\r\n                Filter\r\n              </button>\r\n            </div>\r\n            <div className = \"mainSearchContainer\">\r\n              {recipeIcons}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </HashRouter>\r\n\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default SearchRecipe;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n    NavLink,\r\n    HashRouter,\r\n    \r\n} from \"react-router-dom\";\r\nimport SearchRecipe from \"./SearchRecipe.js\";\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.setTerm = this.setTerm.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n        this.onClick = this.onClick.bind(this);\r\n        this.state = {\r\n          searchTerm: \"\",\r\n          placeholder: \"Search for a Recipe...\",\r\n          navClass: \"navLink\"\r\n        };\r\n        \r\n      }\r\n\r\n    setTerm(event) {\r\n        if (event.target.value !== \"\")\r\n        {\r\n            this.setState({navClass: \"navLinkActive\"});\r\n        }\r\n        else\r\n        {\r\n            this.setState({navClass: \"navLink\"});\r\n        }\r\n        this.setState({ searchTerm: event.target.value });\r\n        event.preventDefault();\r\n    }\r\n\r\n    onKeyDown(event) \r\n    {\r\n        if (event.key === 'Enter') \r\n        {\r\n            \r\n            if (this.state.searchTerm !== \"\")\r\n            {\r\n                document.getElementById(\"submit\").click();\r\n            }\r\n            else\r\n            {\r\n                this.setState({placeholder: \"Please enter a valid Recipe\"});\r\n            }\r\n            \r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    onClick(event) \r\n    {\r\n        if (this.state.searchTerm === \"\")\r\n        {\r\n            this.setState({placeholder: \"Please enter a valid Recipe\"});\r\n        }\r\n    }\r\n    \r\n    \r\n    render(){\r\n        return(\r\n            <HashRouter>\r\n                <div className = \"contentContainer\">\r\n                    <div className = \"spatulaContainer\">\r\n                        <img className = \"spatula\" alt=\"SpatulaImg\" src = \"/images/spatulaImage.png\"/>\r\n                    </div>\r\n                    <div className=\"mainContainer\">\r\n                        <h1>Find a New Recipe</h1>\r\n                        <div className = \"containSearch\">\r\n                            <div className = \"searchContainer\">\r\n                                <input onKeyDown={this.onKeyDown} className = \"searchBox shadow\" type=\"text\" onChange={this.setTerm} placeholder= {this.state.placeholder}/>\r\n                                <button  className = \"searchButton\" onClick = {this.onClick}>\r\n                                    <NavLink id = \"submit\" class = {this.state.navClass} to={`/search/${this.state.searchTerm}`}><img className = \"searchIcon\" alt=\"SearchIcon\" src = \"/images/searchIcon.png\"/></NavLink> \r\n                                </button>                \r\n                            </div>\r\n                        </div>\r\n                        <h1>OR</h1>\r\n                        <div className = \"uploadContainer\">\r\n                            <NavLink to=\"/add\" className = \"uploadRecipe\"> Upload Your Own Recipe.</NavLink>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { Animated, Easing } from 'react-native';\r\nimport {\r\n  NavLink,\r\n  HashRouter\r\n} from \"react-router-dom\";\r\nimport SpringScrollbars from \"./services/SpringScrollBar\";\r\nimport RecipeApi from \"./services/RecipeApi\";\r\n\r\nclass Browse extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: [],\r\n      spinAnim: new Animated.Value(0),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    Animated.loop(\r\n      Animated.timing(this.state.spinAnim, {\r\n        toValue: 100,\r\n        duration: 300000,\r\n        easing: Easing.linear,\r\n        useNativeDriver: true,\r\n      })\r\n    ).start();\r\n    RecipeApi.get(\"/api/listAllRecipeNames/1\").then(\r\n      (result) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          items: result.data,\r\n        });\r\n      },\r\n      (error) => {\r\n        console.log(error)\r\n        this.setState({\r\n          isLoaded: true,\r\n          error: error,\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  reverseList = (event) => {\r\n    var recipeList = this.state.items.data.recipes;\r\n    recipeList.reverse();\r\n    this.setState({\r\n      items: {\r\n        data: {\r\n          recipes: recipeList,\r\n        },\r\n      },\r\n    });\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const spin = this.state.spinAnim.interpolate({\r\n      inputRange: [0, 1],\r\n      outputRange: [\"0deg\", \"360deg\"],\r\n    });\r\n    const carrotStyle = {\r\n      transform: [{ rotate: spin }],\r\n      position: \"absolute\",\r\n      top: \"5vw\",\r\n      left: \"5vw\",\r\n      right: \"5vw\",\r\n      bottom: \"5vw\",\r\n      height: \"10vw\",\r\n      width: \"10vw\",\r\n    };\r\n    const { error, isLoaded, items } = this.state;\r\n    if (error) {\r\n      return <div class=\"text-center errorMessage\">Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return (\r\n        <div>\r\n          <div className=\"loadingContainer\">\r\n            <img\r\n              className=\"plate\"\r\n              src=\"../images/loadingIcon.png\"\r\n              alt=\"background\"\r\n            />\r\n            <Animated.Image\r\n              style={carrotStyle}\r\n              source=\"../images/ingredientIcon3.png\"\r\n              alt=\"carrot\"\r\n            />\r\n          </div>\r\n          <h1 className=\"text-center loadingText\">Awaiting Yumminess</h1>\r\n        </div>\r\n      );\r\n    } else {\r\n      const group = items.data.recipes.reduce((r, e) => {\r\n        const key1 = e.mealName[0];\r\n        if (key1 !== undefined) {\r\n          var key = key1.toUpperCase();\r\n          if (!r[key]) r[key] = [];\r\n          r[key].push(e);\r\n        }\r\n        return r;\r\n      }, {});\r\n\r\n      return (\r\n        <HashRouter>\r\n          <div className=\"contentContainer\">\r\n          <SpringScrollbars>\r\n            <div className=\"spatulaContainer\">\r\n              <img\r\n                className=\"spatula\"\r\n                alt=\"SpatulaImg\"\r\n                src=\"/images/spatulaImage.png\"\r\n              />\r\n            </div>\r\n            <div className=\"recipe-List\">\r\n              <div className=\"browseWidgetContainer\">\r\n                <div\r\n                  className=\"text-center flipList\"\r\n                  onClick={this.reverseList}\r\n                >\r\n                  Flip\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <h1> Browse All Recipes </h1>\r\n                {Object.entries(group).map(([key, value], i) => {\r\n                  return (\r\n                    <div className=\"recipe-Block\" key={i}>\r\n                      <div className=\"recipe-key\">\r\n                        <strong>{key}</strong>\r\n                      </div>\r\n                      {value.map((item, j) => (\r\n                        <div className=\"recipe-Name\" key={j}>\r\n                          <NavLink\r\n                            to={`/recipe/${item.idMeal}`}\r\n                            className=\"links\"\r\n                          >\r\n                            {item.mealName}\r\n                          </NavLink>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n            </SpringScrollbars>\r\n          </div>\r\n        </HashRouter>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Browse;\r\n","import React, { Component } from \"react\";\r\nimport \"./css/addStyles.css\";\r\nimport DropdownButton from \"./DropdownButton.js\";\r\nimport RecipeApi from \"./services/RecipeApi\";\r\nimport { ToastContainer, toast } from 'material-react-toastify';\r\nimport 'material-react-toastify/dist/ReactToastify.css';\r\nimport SpringScrollbars from \"./services/SpringScrollBar\";\r\n\r\nclass AddRecipe extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.newIngredient = this.newIngredient.bind(this);\r\n    this.submitData = this.submitData.bind(this);\r\n    this.changeCategory = this.changeCategory.bind(this);\r\n    this.changeRegion = this.changeRegion.bind(this);\r\n    this.changeType = this.changeType.bind(this);\r\n    this.state = {\r\n      mealName: \"\",\r\n      Instructions: \"\",\r\n      mealThumbnail: \"\",\r\n      Tags: \"\",\r\n      Youtube: \"\",\r\n      mainCategory: \"Choose a Category\",\r\n      mainRegion: \"Choose a Region\",\r\n      mainType: \"Choose a Type\",\r\n      ingredientBlocks: [4],\r\n      numIngredients: 4,\r\n      finalBlocks: [],\r\n      newIngredientButton: \"newIngredient\",\r\n      ingredients: {},\r\n      measures: {}\r\n    };\r\n  }\r\n\r\n  changeHandler = (event) => {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n    this.setState({ [nam]: val });\r\n  };\r\n\r\n  ingredientsChangeHandler = (event) => {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n    var ingredientObj = this.state.ingredients\r\n    ingredientObj[nam] = val\r\n    this.setState({ingredients: ingredientObj})\r\n  }\r\n\r\n  measuresChangeHandler = (event) => {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n    var measuresObj = this.state.measures\r\n    measuresObj[nam] = val\r\n    this.setState({measures: measuresObj})\r\n  }\r\n\r\n  changeCategory(newValue) {\r\n    this.setState({ mainCategory: newValue });\r\n  }\r\n\r\n  changeType(newValue) {\r\n    this.setState({ mainType: newValue });\r\n  }\r\n\r\n  changeRegion(newValue) {\r\n    this.setState({ mainRegion: newValue });\r\n  }\r\n\r\n  newIngredient(event)\r\n  {\r\n    if (this.state.numIngredients <= 20)\r\n    {\r\n      \r\n      // this.setState({ ingredientBlocks: this.state.ingredientBlocks.push(this.state.numRecipes)})\r\n      const slides = this.state.ingredientBlocks.map((item) => {\r\n        return (\r\n          <div id = {`ingredientContainer${item}`} className = \"ingredientContainer\">\r\n              <input name = {`ingredient${item}`} value = {this.state.ingredients[`ingredient\"${item}`]} onChange={this.ingredientsChangeHandler} className = \"text-center ingredientInput\" placeholder = {`Ingredient ${item}`}></input>\r\n              <span><input name = {`measure${item}`} value = {this.state.measures[`measure\"${item}`]} onChange={this.measuresChangeHandler} className = \"text-center measureInput\" placeholder = \"Measure/Units\"></input></span>\r\n          </div>\r\n        );\r\n      });\r\n      if (this.state.numIngredients === 4){\r\n        const newNum = this.state.numIngredients + 1\r\n        this.setState({\r\n        numIngredients: newNum,\r\n        ingredientBlocks: [newNum],\r\n        finalBlocks: slides});\r\n      }\r\n      else\r\n      {\r\n        const newNum = this.state.numIngredients + 1\r\n        var newBlocks = this.state.finalBlocks\r\n        newBlocks = newBlocks.concat(slides)\r\n        this.setState({\r\n        numIngredients: newNum,\r\n        ingredientBlocks: [newNum],\r\n        finalBlocks: newBlocks});\r\n        if (this.state.numIngredients === 20)\r\n        {\r\n          this.setState({newIngredientButton: \"newIngredientGone\"})\r\n        }\r\n      }\r\n\r\n    } \r\n    event.preventDefault();\r\n  }\r\n\r\n  getIngredientsOrMeasure(recipeData, parentArray, fieldName) {\r\n    for (var i = 1; i <= 20; i++) {\r\n      const fullFieldName = fieldName + i;\r\n      if (parentArray[fullFieldName] != null) {\r\n        // if ingredient value present add to recipe Object\r\n        recipeData[fullFieldName] = parentArray[fullFieldName]\r\n      } else {\r\n        // if no ingredient value present set as blank\r\n        recipeData[fullFieldName] = \"\";\r\n      }\r\n    }\r\n  }\r\n\r\n  addRecipeToDb() {\r\n    var recipeData = {};\r\n      recipeData.mealName = this.state.mealName ? this.state.mealName : \"\";\r\n      this.getIngredientsOrMeasure(recipeData, this.state.ingredients, \"ingredient\");\r\n      this.getIngredientsOrMeasure(recipeData, this.state.measures, \"measure\");\r\n      recipeData.mealThumbnail = this.state.mealThumbnail ? this.state.mealThumbnail : \"\";\r\n      recipeData.Instructions = this.state.Instructions ? this.state.Instructions : \"\";\r\n      recipeData.Tags = this.state.Tags ? this.state.Tags : \"\";\r\n      recipeData.Region = this.state.mainRegion ? this.state.mainRegion : \"\";\r\n      recipeData.Category = this.state.mainCategory ? this.state.mainCategory : \"\";\r\n      recipeData.Type = this.state.mainType ? this.state.mainType : \"\";\r\n\r\n      RecipeApi.post(\"/api/addRecipe\", recipeData).then((response) => {\r\n        if (response && response.data && Array.isArray(response.data.data.recipes) && response.data.data.recipes[0].idMeal) {\r\n          var id = response.data.data.recipes[0].idMeal;\r\n\r\n          // Redirect to Page that displays newly created Recipe\r\n          this.props.history.push(`/recipe/${id}`)\r\n        }\r\n      });\r\n  }\r\n\r\n  recipeAlreadyExists(recipeName)  {\r\n    RecipeApi.get(\"/api/checkRecipeExists/\"+ recipeName).then((response) => {\r\n      if (response && response.data && Array.isArray(response.data.data.recipes)) {\r\n        var recipes = response.data.data.recipes;\r\n        if (recipes.length > 0) {\r\n          toast.error(\"Recipe with this name already exists, Give a unique name to your recipe\", {\r\n            position:\"top-right\",\r\n            autoClose: 3000,\r\n            closeOnClick: true\r\n          });\r\n        } else {\r\n          this.addRecipeToDb()\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  validateFields() {\r\n    var isValid = true;\r\n    var errMsg;\r\n    var mealName = this.state.mealName ? this.state.mealName : \"\";\r\n    var ingredient1 = this.state.ingredients[\"ingredient1\"];\r\n    var measure1 = this.state.measures[\"measure1\"];\r\n    var mealThumbnail = this.state.mealThumbnail ? this.state.mealThumbnail : \"\";\r\n    var Instructions = this.state.Instructions ? this.state.Instructions : \"\";\r\n\r\n    if (mealName === \"\") {\r\n      isValid = false;\r\n      errMsg = \"Meal Name is mandatory\"\r\n    }\r\n\r\n    if (isValid && ingredient1 === undefined) {\r\n      isValid = false;\r\n      errMsg = \"Recipe should have atleast one ingredient\"\r\n    }\r\n\r\n    if (isValid && measure1 === undefined) {\r\n      isValid = false;\r\n      errMsg = \"Ingredient should have some measure\"\r\n    }\r\n\r\n    if (isValid && Instructions === \"\") {\r\n      isValid = false;\r\n      errMsg = \"Recipe instructions are mandatory\"\r\n    }\r\n\r\n    if (isValid && mealThumbnail === \"\") {\r\n      isValid = false;\r\n      errMsg = \"Thumbnail url is mandatory\"\r\n    }\r\n\r\n    if (!isValid) {\r\n      toast.dark(errMsg, {\r\n        position:\"top-right\",\r\n        autoClose: 3000,\r\n        closeOnClick: true\r\n      });\r\n    }\r\n    return isValid;\r\n  }\r\n\r\n  submitData = (event) => {\r\n    event.preventDefault();\r\n    if (this.validateFields()) {\r\n      this.recipeAlreadyExists(this.state.mealName)\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className = \"contentContainer\">\r\n        <ToastContainer />\r\n        <SpringScrollbars>\r\n        <div className = \"spatulaContainer\">\r\n            <img className = \"spatula\" alt=\"SpatulaImg\" src = \"/images/spatulaImage.png\"/>\r\n        </div>\r\n        <div className = \"mainAddRecipeContainer\">\r\n          <h1 className = \"text-center\">Add Recipe.</h1>\r\n          <form method=\"POST\" onSubmit={this.submitData}>\r\n            <input name = \"mealName\"   value={this.state.mealName} onChange={this.changeHandler} className = \"text-center mainInput\" placeholder = \"Recipe Name\"></input>\r\n            <div id = \"ingredientContainer1\" className = \"ingredientContainer\">\r\n              <input name = \"ingredient1\"  value={this.state.ingredients[`ingredient1`]} onChange={this.ingredientsChangeHandler} className = \"text-center ingredientInput\" placeholder = \"Ingredient 1\"></input>\r\n              <span><input name = \"measure1\" value={this.state.measures[`measure1`]} onChange={this.measuresChangeHandler} className = \"text-center measureInput\" placeholder = \"Measure/Units\"></input></span>\r\n            </div>\r\n            <div id = \"ingredientContainer2\" className = \"ingredientContainer\">\r\n              <input name = \"ingredient2\" value = {this.state.ingredients[`ingredient2`]} onChange={this.ingredientsChangeHandler} className = \"text-center ingredientInput\" placeholder = \"Ingredient 2\"></input>\r\n              <span><input name = \"measure2\" value = {this.state.measures[`measure2`]} onChange={this.measuresChangeHandler} className = \"text-center measureInput\" placeholder = \"Measure/Units\"></input></span>\r\n            </div>\r\n            <div id = \"ingredientContainer3\" className = \"ingredientContainer\">\r\n              <input name = \"ingredient3\" value = {this.state.ingredients[`ingredient3`]} onChange={this.ingredientsChangeHandler} className = \"text-center ingredientInput\" placeholder = \"Ingredient 3\"></input>\r\n              <span><input name = \"measure3\" value = {this.state.measures[`measure3`]} onChange={this.measuresChangeHandler} className = \"text-center measureInput\" placeholder = \"Measure/Units\"></input></span>\r\n            </div>\r\n            {this.state.finalBlocks}\r\n            <div id = \"moreIngredients\" className = \"moreIngredients\"></div>\r\n            <button type=\"button\" id = \"newIngredientButton\" className = {this.state.newIngredientButton} onClick={this.newIngredient}>+ Add Ingredient</button>\r\n            <textarea name = \"Instructions\"  value={this.state.Instructions} onChange={this.changeHandler} className = \"directionsInput\" placeholder = \"Preparation Instructions\"></textarea>\r\n            <div className = \"mainInput\">\r\n                <input name = \"mealThumbnail\"  value={this.state.mealThumbnail} onChange={this.changeHandler} className = \"text-center mainInput urlInput\" placeholder = \"Enter URL for Recipe Image\"></input>\r\n                <img className = \"uploadImage\" alt = \"upload\" src = \"../images/photoIcon.png\"/>\r\n            </div>\r\n            <DropdownButton mainText = {this.state.mainCategory} changeData={this.changeCategory.bind(this)} id = \"Category\" className = {\"category\"} dropdown = {\"categoryDropdown\"} dropdownContainer = {\"categoryDropdownContainer\"} mainButton={\"categoryMain\"} categories = {[\"Appetizers\", \"Beverages\", \"Soups\",\"Salads\", \"Vegetables\",\"Main Dishes\",\"Breads\", \"Rolls\",\"Desserts\", \"Sides\", \"Miscellaneous\"]} imageId = \"categoryImage\" image = {\"../images/categoryIcon.png\"}/>\r\n            <DropdownButton mainText = {this.state.mainRegion} changeData={this.changeRegion.bind(this)} id = \"Region\" className = {\"region\"} dropdown = {\"regionDropdown\"} dropdownContainer = {\"regionDropdownContainer\"} mainButton={\"regionMain\"} categories = {[\"Turkish\",\"Italian\",\"Chinese\",\"Jamaican\",\"Dutch\",\"American\",\"Tunisian\",\"Spanish\",\"Japanese\",\"Canadian\",\"Indian\",\"Vietnamese\",\"Portuguese\",\"Moroccan\",\"Unknown\",\"Irish\",\"French\",\"Mexican\",\"Thai\",\"Malaysian\",\"Kenyan\",\"British\",\"Egyptian\",\"Greek\",\"Polish\",\"Russian\"]} imageId = \"regionImage\" image = {\"../images/regionIcon.png\"}/>\r\n            <DropdownButton mainText = {this.state.mainType} changeData={this.changeType.bind(this)} id = \"Type\" className = {\"type\"} dropdown = {\"typeDropdown\"} dropdownContainer = {\"typeDropdownContainer\"} mainButton={\"typeMain\"} categories = {[\"Vegetarian\", \"Non-Vegetarian\"]} imageId = \"typeImage\" image = {\"../images/typeIcon.png\"}/>\r\n            <div className = \"mainInput\">\r\n                <input name = \"Tags\" value={this.state.Tags} onChange={this.changeHandler} className = \"mainInput tagsInput\" placeholder = \"Tags e.g.(chicken, pie, carrots, etc.)\"></input>\r\n                <img className = \"uploadImage\" alt = \"tags\" src = \"../images/tagIcon.png\"/>\r\n            </div>\r\n            <div className = \"mainInput\">\r\n                <input name = \"Youtube\" value={this.state.Youtube} onChange={this.changeHandler} type = \"url\" className = \"text-center mainInput youtubeInput\" placeholder = \"YouTube URL\"></input>\r\n                <img className = \"uploadImage\" alt = \"video\" src = \"../images/videoIcon.png\"/>\r\n            </div>\r\n            {/* <Tag/> */}\r\n          \r\n            <button id = \"submitButton\" className = \"text-center submitButton\" type=\"submit\">Submit Recipe</button>\r\n          </form>\r\n        </div>\r\n        </SpringScrollbars>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default AddRecipe;","\r\nimport React, { Component } from \"react\";\r\nimport {\r\n    Route,\r\n    NavLink,\r\n    HashRouter\r\n} from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport Browse from \"./Browse\";\r\nimport AddRecipe from \"./AddRecipe\"\r\nimport SearchRecipe from \"./SearchRecipe\"\r\nimport RecipePage from \"./RecipePage\"\r\nimport EditRecipe from \"./EditRecipe\"\r\n \r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleNav = this.handleNav.bind(this);\r\n        this.handleNavClick = this.handleNavClick.bind(this);\r\n        this.state = {\r\n            backgroundClass: \"background\",\r\n            browseClass: \"browseButton\",\r\n            homeClass: \"homeButton\",\r\n            line1: \"line1\",\r\n            line2: \"line2\",\r\n            line3: \"line3\"\r\n        };\r\n        }\r\n\r\n    handleNav() {\r\n        if (this.state.backgroundClass === \"background\")\r\n        {\r\n            this.setState ({\r\n                backgroundClass: \"backgroundActive\",\r\n                browseClass: \"browseButtonActive\",\r\n                homeClass: \"homeButtonActive\",\r\n                line1: \"line1Active\",\r\n                line2: \"line2Active\",\r\n                line3: \"line3Active\"\r\n            });\r\n        }\r\n        else\r\n        {\r\n            this.setState ({\r\n                backgroundClass: \"background\",\r\n                browseClass: \"browseButton\",\r\n                homeClass: \"homeButton\",\r\n                line1: \"line1\",\r\n                line2: \"line2\",\r\n                line3: \"line3\"\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    handleNavClick() {\r\n        if (this.state.backgroundClass === \"backgroundActive\")\r\n        {\r\n            this.setState ({\r\n                backgroundClass: \"background\",\r\n                browseClass: \"browseButton\",\r\n                homeClass: \"homeButton\",\r\n                line1: \"line1\",\r\n                line2: \"line2\",\r\n                line3: \"line3\"\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n    return (\r\n        <HashRouter>\r\n        <nav className = \"nav\">\r\n            <div className={this.state.backgroundClass}></div>\r\n            <NavLink exact to=\"/\"><img className = \"logo\" src = \"/images/logo.png\" alt=\"logoImg\"/></NavLink>\r\n            <div className = \"linkContainer\">\r\n                <ul className=\"header\">\r\n                    <li className = {this.state.browseClass}><NavLink onClick = {this.handleNavClick} to= \"/browse\">Browse</NavLink></li>\r\n                    <li className = {this.state.homeClass} ><NavLink  onClick = {this.handleNavClick} exact to= \"/\">Home</NavLink></li>\r\n                </ul> \r\n            </div>\r\n            <button className=\"burger\" onClick = {this.handleNav}>\r\n                <div className={this.state.line1}></div>\r\n                <div className={this.state.line2}></div>\r\n                <div className={this.state.line3}></div>\r\n            </button>\r\n        </nav>\r\n        <div className=\"content\">\r\n            <Route exact path=\"/\" component={Home}/>\r\n            <Route path=\"/browse\" component={Browse}/>\r\n            <Route path=\"/add\" component={AddRecipe}/>\r\n            <Route path=\"/search/:recipeName\" component={SearchRecipe}/>\r\n            <Route path=\"/recipe/:recipeId\" component={RecipePage}/>\r\n            <Route path=\"/edit/:recipeId\" component={EditRecipe}/>\r\n        </div>\r\n        </HashRouter>\r\n    );\r\n    }\r\n}\r\n\r\nexport default Main;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Main from \"./Main\";\r\nimport \"./css/styles.css\"\r\nimport \"./css/homeStyles.css\"\r\nimport \"./css/browseStyles.css\"\r\nimport \"./css/searchStyles.css\"\r\n \r\nReactDOM.render(\r\n  <Main/>, \r\n  document.getElementById(\"root\")\r\n);","import axios from \"axios\";\r\n\r\n//const url = 'http://localhost:5000';\r\nconst url = window.location.origin;\r\n\r\nexport default axios.create({\r\n    baseURL: `${url}`\r\n})","import React, { Component } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport \"./css/addStyles.css\"; \r\n\r\nclass DropdownButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleDropdown = this.handleDropdown.bind(this);\r\n        this.onClick = this.onClick.bind(this);\r\n        this.state = {\r\n            categories: this.props.categories,\r\n            dropdown: this.props.dropdown,\r\n            dropdownContainer: this.props.dropdownContainer,\r\n            imageId: this.props.imageId\r\n        }\r\n      }\r\n\r\n      handleClick(event) {\r\n        const id = event.target.id;\r\n        var name = document.getElementById(id).innerHTML\r\n        this.props.changeData(name)\r\n\r\n      }\r\n\r\n      onClick(event) {\r\n        this.handleDropdown(event);\r\n        this.handleClick(event);\r\n        event.preventDefault()\r\n     }\r\n\r\n      handleDropdown(event) {\r\n        const id = document.getElementById(this.state.dropdownContainer);\r\n        const id2 = document.getElementById(this.state.dropdown);\r\n        const id3 = document.getElementById(this.state.imageId);\r\n        if (id.classList.value === \"dropdownContainer-closed\")\r\n        {\r\n            id.classList.remove(\"dropdownContainer-closed\");\r\n            id.classList.add(\"dropdownContainer-open\");\r\n            id2.classList.remove(\"dropdown-closed\");\r\n            id2.classList.add(\"dropdown-open\");\r\n            id3.classList.add(\"downArrowRotate\");\r\n            id3.classList.add(\"downArrow\");\r\n        }\r\n        else\r\n        {\r\n            id.classList.remove(\"dropdownContainer-open\");\r\n            id.classList.add(\"dropdownContainer-closed\");\r\n            id2.classList.remove(\"dropdown-open\");\r\n            id2.classList.add(\"dropdown-closed\");\r\n            id3.classList.add(\"downArrow\");\r\n            id3.classList.remove(\"downArrowRotate\");\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    \r\n  render() {\r\n    let madeArr = Object.entries(this.props.categories)\r\n    let category = madeArr.map(p=>\r\n        <button id = {this.props.className + p[0]} name= {this.props.class + p[0]} className = \"text-center dropdownButtons\" onClick = {this.onClick} >{p[1]}</button>\r\n    );\r\n    return (\r\n\r\n        <div id = {this.props.dropdownContainer} className = \"dropdownContainer-closed\">\r\n            <button id = {this.props.mainButton} className = \"text-center mainButton\" onClick = {this.handleDropdown}>{this.props.mainText}\r\n                <img id = {this.props.imageId} className = \"downArrow\" src = \"../images/dropdownIcon.png\" alt = \"dropdown\"/>\r\n                <img className = \"uploadImage\" alt = \"category\" src = {this.props.image}/>\r\n            </button>\r\n            <div id = {this.props.dropdown} className = \"dropdown-closed\">\r\n                {category}\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default DropdownButton;","import React, { Component } from 'react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { SpringSystem, MathUtil } from 'rebound';\r\n\r\nexport default class SpringScrollbars extends Component {\r\n\r\n    constructor(props, ...rest) {\r\n        super(props, ...rest);\r\n        this.handleSpringUpdate = this.handleSpringUpdate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.springSystem = new SpringSystem();\r\n        this.spring = this.springSystem.createSpring();\r\n        this.spring.addListener({ onSpringUpdate: this.handleSpringUpdate });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.springSystem.deregisterSpring(this.spring);\r\n        this.springSystem.removeAllListeners();\r\n        this.springSystem = undefined;\r\n        this.spring.destroy();\r\n        this.spring = undefined;\r\n    }\r\n\r\n    getScrollTop() {\r\n        return this.refs.scrollbars.getScrollTop();\r\n    }\r\n\r\n    getScrollHeight() {\r\n        return this.refs.scrollbars.getScrollHeight();\r\n    }\r\n\r\n    getHeight() {\r\n        return this.refs.scrollbars.getHeight();\r\n    }\r\n\r\n    scrollTop(top) {\r\n        const { scrollbars } = this.refs;\r\n        const scrollTop = scrollbars.getScrollTop();\r\n        const scrollHeight = scrollbars.getScrollHeight();\r\n        const val = MathUtil.mapValueInRange(top, 0, scrollHeight, scrollHeight * 0.2, scrollHeight * 0.8);\r\n        this.spring.setCurrentValue(scrollTop).setAtRest();\r\n        this.spring.setEndValue(val);\r\n    }\r\n\r\n    handleSpringUpdate(spring) {\r\n        const { scrollbars } = this.refs;\r\n        const val = spring.getCurrentValue();\r\n        scrollbars.scrollTop(val);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Scrollbars\r\n                {...this.props}\r\n                ref=\"scrollbars\"/>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport { View,Animated, Easing } from 'react-native';\r\nimport RecipeApi from \"./services/RecipeApi\";\r\nimport \"./css/recipeStyles.css\";\r\nimport SpringScrollbars from \"./services/SpringScrollBar\";\r\n\r\nclass Recipe extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: [],\r\n      spinAnim: new Animated.Value(0)\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    Animated.loop(Animated.timing(\r\n      this.state.spinAnim,\r\n    {\r\n      toValue: 100,\r\n      duration: 300000,\r\n      easing: Easing.linear,\r\n      useNativeDriver: true\r\n    }\r\n  )).start();\r\n    var id = this.props.match.params.recipeId;\r\n    var api = \"/api/getRecipeById/\" + id;\r\n    RecipeApi.get(api).then(\r\n      (result) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          items: result.data,\r\n        });\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          error,\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteRecipe = (event) => {\r\n    var recipeId = this.props.match.params.recipeId\r\n    var api = \"/api/deleteRecipe/\" + recipeId;\r\n    RecipeApi.delete(api).then(\r\n      (result) => {\r\n        this.props.history.push(`/browse`)\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          error,\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    var ingredients = [];\r\n    var measurements = [];\r\n    const spin = this.state.spinAnim.interpolate({\r\n      inputRange: [0, 1],\r\n      outputRange: ['0deg', '360deg']\r\n    });\r\n    const carrotStyle  = {\r\n      transform: [{rotate: spin}],\r\n      position: \"absolute\",\r\n      top: \"5vw\",\r\n      left: \"5vw\",\r\n      right: \"5vw\",\r\n      bottom: \"5vw\",\r\n      height: \"10vw\",\r\n      width: \"10vw\"\r\n\r\n    }\r\n    const { error, isLoaded, items } = this.state;\r\n    if (error) {\r\n      return <div class = \"text-center errorMessage\">Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return (\r\n        <div>\r\n        <div className = \"loadingContainer\">\r\n            <img className = \"plate\" src = \"../images/loadingIcon.png\" alt = \"background\"/>\r\n            <Animated.Image style={carrotStyle} source = \"../images/ingredientIcon3.png\" alt = \"carrot\"/>\r\n        </div>\r\n        <h1 className = \"text-center loadingText\">Awaiting Yumminess</h1>\r\n\r\n      </div>)\r\n    } else {\r\n      if (items && items.data && items.data.recipes) \r\n      {\r\n        if (Array.isArray(items.data.recipes))\r\n        {\r\n          var recipe = items.data.recipes[0];\r\n          const category = \"Category: \" + recipe.Category;\r\n          const region = \"Region: \" + recipe.Region;\r\n          if (recipe.Tags !== null)\r\n          {\r\n            var newTags = recipe.Tags.replaceAll(\",\", \", \")\r\n          }\r\n          const tags = \"Tags: \" + newTags;\r\n          const type = \"Type: \" + recipe.Type;\r\n          const youtube = recipe.Youtube + \"?rel=0&amp;controls=0&amp;showinfo=0\"\r\n          var ingredientNum = recipe.ingredient1;\r\n          var measureNum = recipe.measure1;\r\n          var i = 1;\r\n          while (ingredientNum !== null && ingredientNum !== \"\" && i <= 20)\r\n          {\r\n            ingredients.push(ingredientNum);\r\n            measurements.push(measureNum)\r\n            i = i + 1\r\n            ingredientNum = eval(\"recipe.ingredient\" + i)\r\n            measureNum = eval(\"recipe.measure\" + i)\r\n          }\r\n          var makeIngredients = [];\r\n          for (var i = 0; i < ingredients.length; i++) {\r\n              var item1 = ingredients[i];\r\n              var item2 = measurements[i];\r\n              makeIngredients.push(<div className = \"mainIngredientText\"><img className = \"ingredientBullet\" src = \"../images/ingredientIcon.png\" alt = \"bulletpoint\"/><div className = \"measurementText\">{item2}</div><div className = \"ingredientText\">{item1}  </div></div>);\r\n          }\r\n          return (\r\n              <div className = \"contentContainer\">\r\n                <SpringScrollbars>\r\n                <div className = \"spatulaContainer\">\r\n                    <img className = \"spatula\" alt=\"SpatulaImg\" src = \"/images/spatulaImage.png\"/>\r\n                </div>\r\n            \r\n                <div className = \"recipeContainer\">\r\n                  <h1 className = \"text-center\">{recipe.mealName}</h1>\r\n                  <div className = \"divider\"></div>\r\n                  <div className = \"photoHolder\">\r\n                    <img className = \"recipeImage\" alt=\"recipeImage\" src = {`${recipe.mealThumbnail}`}/>\r\n                  </div>\r\n                  <div className = \"stepsContainer\">\r\n                    <h2 className = \"recipeText\">Ingredients</h2>\r\n                    <div className = \"ingredientContainerShow\">\r\n                      {makeIngredients}\r\n                    </div>\r\n                    <h2 className = \"recipeText\">Instructions</h2>\r\n                    <p className = \"instructionsText\">{recipe.Instructions}</p>\r\n                  </div>\r\n                  <div className = \"widgetContainer\">\r\n                    <img className = \"widgetImage\" alt = \"category\" src = \"../images/categoryIcon.png\"/>\r\n                    <span>\r\n                      <h2 className = \"widgetText\">{category}</h2>\r\n                    </span>\r\n                  </div>\r\n                  <div className = \"widgetContainer\">\r\n                    <img className = \"widgetImage\" alt = \"type\" src = \"../images/typeIcon.png\"/>\r\n                    <span>\r\n                      <h2 className = \"widgetText\">{type}</h2>\r\n                    </span>\r\n                  </div>\r\n                  <div className = \"widgetContainer\">\r\n                    <img className = \"widgetImage\" alt = \"region\" src = \"../images/regionIcon.png\"/>\r\n                    <span>\r\n                      <h2 className = \"widgetText\">{region}</h2>\r\n                    </span>\r\n                  </div>\r\n                  <div className = \"widgetContainer\">\r\n                    <img className = \"widgetImage\" alt = \"region\" src = \"../images/tagIcon.png\"/>\r\n                    <span>\r\n                      <h2 className = \"widgetText\">{tags}</h2>\r\n                    </span>\r\n                  </div>\r\n                  <div className = \"widgetContainer\">\r\n                    <NavLink to={`/edit/${recipe.idMeal}`} className = \"text-center editRecipe\">Edit Recipe</NavLink>\r\n                  </div>\r\n                  <div className = \"widgetContainer\">\r\n                    <div className = \"text-center deleteRecipe\" onClick={this.deleteRecipe}>Delete Recipe</div>\r\n                  </div>\r\n                </div>\r\n                </SpringScrollbars>\r\n              </div>\r\n            \r\n          );\r\n        }\r\n      }\r\n     \r\n    }\r\n  }\r\n}\r\n\r\nexport default Recipe;\r\n","import React, { Component } from \"react\";\r\nimport \"./css/addStyles.css\";\r\nimport DropdownButton from \"./DropdownButton.js\";\r\nimport RecipeApi from \"./services/RecipeApi\";\r\nimport {Animated, Easing } from 'react-native';\r\nimport SpringScrollbars from \"./services/SpringScrollBar\";\r\n\r\nclass EditRecipe extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.submitData = this.submitData.bind(this);\r\n    this.changeCategory = this.changeCategory.bind(this);\r\n    this.changeRegion = this.changeRegion.bind(this);\r\n    this.changeType = this.changeType.bind(this);\r\n    this.state = {\r\n      mealName: \"\",\r\n      Instructions: \"\",\r\n      mealThumbnail: \"\",\r\n      Tags: \"\",\r\n      Youtube: \"\",\r\n      mainCategory: \"Choose a Category\",\r\n      mainRegion: \"Choose a Region\",\r\n      mainType: \"Choose a Type\",\r\n      id: \"\",\r\n      spinAnim: new Animated.Value(0)\r\n    };\r\n  }\r\n\r\n  changeHandler = (event) => {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n    this.setState({ [nam]: val });\r\n  };\r\n\r\n  changeCategory(newValue) {\r\n    this.setState({ mainCategory: newValue });\r\n  }\r\n\r\n  changeType(newValue) {\r\n    this.setState({ mainType: newValue });\r\n  }\r\n\r\n  changeRegion(newValue) {\r\n    this.setState({ mainRegion: newValue });\r\n  }\r\n  getIngredientsOrMeasure(recipeData, fieldName) {\r\n    for (var i = 1; i <= 20; i++) {\r\n      const id = fieldName + i;\r\n      if (document.getElementById(id) != null) {\r\n        // if ingredient value present add to recipe Object\r\n        recipeData[id] = document.getElementById(id).value;\r\n      } else {\r\n        // if no ingredient value present set as blank\r\n        recipeData[id] = \"\";\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    Animated.loop(Animated.timing(\r\n      this.state.spinAnim,\r\n    {\r\n      toValue: 100,\r\n      duration: 300000,\r\n      easing: Easing.linear,\r\n      useNativeDriver: true\r\n    }\r\n  )).start();\r\n    var id = this.props.match.params.recipeId;\r\n    var api = \"/api/getRecipeById/\" + id;\r\n    RecipeApi.get(api).then(\r\n      (result) => {\r\n        let recipe = result.data.data.recipes[0]\r\n        let finalTag = \"\"\r\n        let newCategory = this.state.mainCategory\r\n        let newRegion = this.state.mainRegion\r\n        let newType = this.state.mainType\r\n        if (recipe.Tags !== null)\r\n        {\r\n            finalTag = recipe.Tags.replaceAll(\",\",\", \")\r\n        }\r\n        if (recipe.Category !== null)\r\n        {\r\n            newCategory = recipe.Category\r\n        }\r\n        if (recipe.Region !== null)\r\n        {\r\n            newRegion = recipe.Region\r\n        }\r\n        if (recipe.Type !== null)\r\n        {\r\n            newType = recipe.Type\r\n        }\r\n        this.setState({\r\n            isLoaded: true,\r\n            items: result.data,\r\n            mealName: recipe.mealName,\r\n            Instructions: recipe.Instructions,\r\n            mealThumbnail: recipe.mealThumbnail,\r\n            Tags: finalTag,\r\n            Youtube: recipe.Youtube,\r\n            mainCategory: newCategory,\r\n            mainRegion: newRegion,\r\n            mainType: newType,\r\n            id: recipe.idMeal\r\n        });\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          error,\r\n        });\r\n      }\r\n    );\r\n  }\r\n  submitData = (event) => {\r\n    event.preventDefault();\r\n    var recipeData = {};\r\n    recipeData.mealName = this.state.mealName ? this.state.mealName : \"\";\r\n    this.getIngredientsOrMeasure(recipeData, \"ingredient\");\r\n    this.getIngredientsOrMeasure(recipeData, \"measure\");\r\n    recipeData.mealThumbnail = this.state.mealThumbnail ? this.state.mealThumbnail : \"\";\r\n    recipeData.Instructions = this.state.Instructions ? this.state.Instructions : \"\";\r\n    recipeData.Tags = this.state.Tags ? this.state.Tags : \"\";\r\n    if (this.state.mainRegion === \"Choose a Region\")\r\n    {\r\n        recipeData.Region = \"\"\r\n    }\r\n    else\r\n    {\r\n        recipeData.Region = this.state.mainRegion\r\n    }\r\n    if (this.state.mainCategory === \"Choose a Category\")\r\n    {\r\n        recipeData.Category = \"\"\r\n    }\r\n    else\r\n    {\r\n        recipeData.Category = this.state.mainCategory\r\n    }\r\n    if (this.state.mainType === \"Choose a Type\")\r\n    {\r\n        recipeData.Type = \"\"\r\n    }\r\n    else\r\n    {\r\n        recipeData.Type = this.state.mainType\r\n    }\r\n\r\n    const test = `/api/updateRecipe/${this.state.id}`\r\n\r\n    RecipeApi.put(`/api/updateRecipe/${this.state.id}`, recipeData).then((response) => {\r\n        this.props.history.push(`/recipe/${this.state.id}`)\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    function newIngredientClicked() {\r\n        if (numIngredients <= 20) {\r\n          const div = document.createElement(\"div\");\r\n          div.classList.add(\"ingredientContainer\");\r\n          var num = String(numIngredients);\r\n          div.innerHTML = `<input id = \"ingredient${num}\" class = \"text-center ingredientInput\" placeholder = \"Ingredient ${num}\"></input>\r\n          <span><input id = \"measure${num}\" class = \"text-center measureInput\" placeholder = \"Measure/Units\"></input></span>`;\r\n          document.querySelector(\".moreIngredients\").appendChild(div);\r\n          numIngredients = numIngredients + 1;\r\n        } else {\r\n          const div = document.createElement(\"div\");\r\n          document\r\n            .getElementById(\"newIngredientButton\")\r\n            .classList.add(\"newIngredientGone\");\r\n          document\r\n            .getElementById(\"newIngredientButton\")\r\n            .classList.remove(\"newIngredient\");\r\n          div.innerHTML = `<h2 class = \"text-center\">Only 20 Ingredients Allowed.</h2>`;\r\n          document.querySelector(\".moreIngredients\").appendChild(div);\r\n        }\r\n      }\r\n    const spin = this.state.spinAnim.interpolate({\r\n        inputRange: [0, 1],\r\n        outputRange: ['0deg', '360deg']\r\n      });\r\n      const carrotStyle  = {\r\n        transform: [{rotate: spin}],\r\n        position: \"absolute\",\r\n        top: \"5vw\",\r\n        left: \"5vw\",\r\n        right: \"5vw\",\r\n        bottom: \"5vw\",\r\n        height: \"10vw\",\r\n        width: \"10vw\"\r\n      }\r\n      const { error, isLoaded, items } = this.state;\r\n      if (error) {\r\n        return <div class = \"text-center errorMessage\">Error: {error.message}</div>;\r\n      } else if (!isLoaded) {\r\n        return (\r\n        <div>\r\n          <div className = \"loadingContainer\">\r\n              <img className = \"plate\" src = \"../images/loadingIcon.png\" alt = \"background\"/>\r\n              <Animated.Image style={carrotStyle} source = \"../images/ingredientIcon3.png\" alt = \"carrot\"/>\r\n          </div>\r\n          <h1 className = \"text-center loadingText\">Awaiting Yumminess</h1>\r\n  \r\n        </div>);\r\n      } else {\r\n          \r\n        if (items && items.data && items.data.recipes) \r\n        {\r\n            if (Array.isArray(items.data.recipes))\r\n            {\r\n                var recipe = items.data.recipes[0];\r\n            }\r\n        }\r\n        var makeIngredients = [];\r\n        var item1 =  eval(\"recipe.ingredient\" + 1)\r\n        var i = 1;\r\n        while (item1 !== null && item1 !== \"\" && i <= 20) {\r\n              const item2 =  eval(\"recipe.measure\" + i)\r\n              const ingredientId = (\"ingredient\" + i)\r\n              const measureId = (\"measure\" + i)\r\n              const divId = (\"ingredientContainer\" + i)\r\n              makeIngredients.push(<div id = {divId} className = \"ingredientContainer\">\r\n              <input id = {ingredientId} className = \"text-center ingredientInput\" defaultValue = {item1}></input>\r\n              <span><input id = {measureId} className = \"text-center measureInput\" defaultValue = {item2}></input></span>\r\n              </div>);\r\n              i = i + 1;\r\n              item1 =  eval(\"recipe.ingredient\" + i)\r\n        }\r\n        var numIngredients = i;\r\n\r\n        return (\r\n        <div className = \"contentContainer\">\r\n          <SpringScrollbars>\r\n            <div className = \"spatulaContainer\">\r\n                <img className = \"spatula\" alt=\"SpatulaImg\" src = \"/images/spatulaImage.png\"/>\r\n            </div>\r\n            <div className = \"mainAddRecipeContainer\">\r\n            <h1 className = \"text-center\">Edit Recipe.</h1>\r\n            <form method=\"POST\" onSubmit={this.submitData}>\r\n                <input name = \"mealName\" onChange={this.changeHandler} className = \"text-center mainInput\" type=\"text\" defaultValue={this.state.mealName}></input>\r\n                {makeIngredients}\r\n                <div id = \"moreIngredients\" className = \"moreIngredients\"></div>\r\n                <button type=\"button\" id = \"newIngredientButton\" className = \"newIngredient\" onClick={newIngredientClicked}>+ Add Ingredient</button>\r\n                <textarea name = \"Instructions\" required onChange={this.changeHandler} className = \"directionsInput\" type = \"text\" defaultValue = {this.state.Instructions}></textarea>\r\n                <div className = \"mainInput\">\r\n                    <input name = \"mealThumbnail\" defaultValue={this.state.mealThumbnail} onChange={this.changeHandler} className = \"text-center mainInput youtubeInput\"></input>\r\n                    <img className = \"uploadImage\" alt = \"upload\" src = \"../images/photoIcon.png\"/>\r\n                </div>\r\n                <DropdownButton mainText = {this.state.mainCategory} changeData={this.changeCategory.bind(this)} id = \"Category\" className = {\"category\"} dropdown = {\"categoryDropdown\"} dropdownContainer = {\"categoryDropdownContainer\"} mainButton={\"categoryMain\"} categories = {[\"Appetizers\", \"Beverages\", \"Soups\",\"Salads\", \"Vegetables\",\"Main Dishes\",\"Breads\", \"Rolls\",\"Desserts\", \"Sides\", \"Miscellaneous\"]} imageId = \"categoryImage\" image = {\"../images/categoryIcon.png\"}/>\r\n                <DropdownButton mainText = {this.state.mainRegion} changeData={this.changeRegion.bind(this)} id = \"Region\" className = {\"region\"} dropdown = {\"regionDropdown\"} dropdownContainer = {\"regionDropdownContainer\"} mainButton={\"regionMain\"} categories = {[\"Turkish\",\"Italian\",\"Chinese\",\"Jamaican\",\"Dutch\",\"American\",\"Tunisian\",\"Spanish\",\"Japanese\",\"Canadian\",\"Indian\",\"Vietnamese\",\"Portuguese\",\"Moroccan\",\"Unknown\",\"Irish\",\"French\",\"Mexican\",\"Thai\",\"Malaysian\",\"Kenyan\",\"British\",\"Egyptian\",\"Greek\",\"Polish\",\"Russian\"]} imageId = \"regionImage\" image = {\"../images/regionIcon.png\"}/>\r\n                <DropdownButton mainText = {this.state.mainType} changeData={this.changeType.bind(this)} id = \"Type\" className = {\"type\"} dropdown = {\"typeDropdown\"} dropdownContainer = {\"typeDropdownContainer\"} mainButton={\"typeMain\"} categories = {[\"Vegetarian\", \"Non-Vegetarian\"]} imageId = \"typeImage\" image = {\"../images/typeIcon.png\"}/>\r\n                <div className = \"mainInput\">\r\n                    <input name = \"Tags\" defaultValue={this.state.Tags} onChange={this.changeHandler} className = \"mainInput tagsInput\"></input>\r\n                    <img className = \"uploadImage\" alt = \"tags\" src = \"../images/tagIcon.png\"/>\r\n                </div>\r\n                <div className = \"mainInput\">\r\n                    <input name = \"Youtube\" defaultValue={this.state.Youtube} onChange={this.changeHandler} type = \"url\" className = \"text-center mainInput youtubeInput\"></input>\r\n                    <img className = \"uploadImage\" alt = \"video\" src = \"../images/videoIcon.png\"/>\r\n                </div>\r\n                {/* <Tag/> */}\r\n            \r\n                <button id = \"submitButton\" className = \"text-center submitButton\" type=\"submit\">Update Recipe</button>\r\n            </form>\r\n            </div>\r\n            </SpringScrollbars>\r\n        </div>\r\n        );\r\n      }\r\n  }\r\n}\r\n \r\nexport default EditRecipe;"],"sourceRoot":""}