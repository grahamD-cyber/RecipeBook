{"version":3,"sources":["Home.js","Browse.js","AddRecipe.js","SearchRecipe.js","Main.js","index.js","services/RecipeApi.js","DropdownButton.js","services/SpringScrollBar.js","RecipePage.js","EditRecipe.js"],"names":["Home","props","setTerm","bind","onKeyDown","onClick","state","searchTerm","placeholder","navClass","event","target","value","this","setState","preventDefault","key","document","getElementById","click","stopPropagation","className","alt","src","type","onChange","id","to","Component","Browse","reverseList","recipeList","items","data","recipes","filterMessage","imageSource","reverse","changeView","error","isLoaded","spinAnim","Animated","Value","gallery","viewMessage","loop","timing","toValue","duration","easing","Easing","linear","useNativeDriver","start","RecipeApi","get","then","result","console","log","carrotStyle","transform","rotate","interpolate","inputRange","outputRange","position","top","left","right","bottom","height","width","class","message","group","reduce","r","e","key1","mealName","undefined","toUpperCase","push","Object","entries","map","item","idMeal","mealThumbnail","i","j","Image","style","source","AddRecipe","changeHandler","nam","name","val","ingredientsChangeHandler","ingredientObj","ingredients","measuresChangeHandler","measuresObj","measures","submitData","validateFields","recipeAlreadyExists","newIngredient","changeCategory","changeRegion","changeType","toggleCategory","toggleRegion","toggleType","Instructions","Tags","Youtube","mainCategory","mainRegion","mainType","ingredientBlocks","numIngredients","finalBlocks","newIngredientButton","categoryOpen","regionOpen","typeOpen","newValue","slides","newNum","newBlocks","concat","recipeData","parentArray","fieldName","fullFieldName","getIngredientsOrMeasure","Region","Category","Type","post","response","Array","isArray","history","recipeName","length","toast","autoClose","closeOnClick","addRecipeToDb","errMsg","isValid","ingredient1","measure1","dark","method","onSubmit","DropdownButton","isOpen","mainText","toggleThisClass","toggleClass1","toggleClass2","changeData","dropdown","dropdownContainer","mainButton","categories","imageId","image","SearchRecipe","changeSearchCategory","changeSearchRegion","changeSearchType","cancelFilter","handleCancelFilter","handleFilter","startFilter","toggleSearchCategory","toggleSearchRegion","toggleSearchType","term","dropdownDiv","stopFilter","filterDiv","finishedFilter","clearFilter","category","region","filteredArray","filter","filteredItems","keyword","match","params","searchString","madeArr","recipeIcons","Main","handleNav","handleNavClick","backgroundClass","browseClass","homeClass","line1","line2","line3","exact","path","component","RecipePage","EditRecipe","ReactDOM","render","url","window","location","origin","axios","create","baseURL","handleClick","handleDropdown","innerHTML","p","SpringScrollbars","rest","handleSpringUpdate","springSystem","SpringSystem","spring","createSpring","addListener","onSpringUpdate","deregisterSpring","removeAllListeners","destroy","refs","scrollbars","getScrollTop","getScrollHeight","getHeight","scrollTop","scrollHeight","MathUtil","mapValueInRange","setCurrentValue","setAtRest","setEndValue","getCurrentValue","ref","Recipe","deleteRecipe","api","recipeId","delete","measurements","spin","recipe","newTags","replaceAll","tags","ingredientNum","measureNum","eval","makeIngredients","item1","item2","put","finalTag","newCategory","newRegion","newType","newIngredientClicked","div","createElement","classList","add","num","String","querySelector","appendChild","remove","ingredientId","measureId","divId","defaultValue","required"],"mappings":"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","file":"static/js/main.8e946bd0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n    NavLink,\r\n    HashRouter,\r\n    \r\n} from \"react-router-dom\";\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.setTerm = this.setTerm.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n        this.onClick = this.onClick.bind(this);\r\n        this.state = {\r\n          searchTerm: \"\",\r\n          placeholder: \"Search for a Recipe...\",\r\n          navClass: \"navLink\"\r\n        };\r\n        \r\n      }\r\n\r\n    setTerm(event) {\r\n        if (event.target.value !== \"\")\r\n        {\r\n            this.setState({navClass: \"navLinkActive\"});\r\n        }\r\n        else\r\n        {\r\n            this.setState({navClass: \"navLink\"});\r\n        }\r\n        this.setState({ searchTerm: event.target.value });\r\n        event.preventDefault();\r\n    }\r\n\r\n    onKeyDown(event) \r\n    {\r\n        if (event.key === 'Enter') \r\n        {\r\n            \r\n            if (this.state.searchTerm !== \"\")\r\n            {\r\n                document.getElementById(\"submit\").click();\r\n            }\r\n            else\r\n            {\r\n                this.setState({placeholder: \"Please enter a valid Recipe\"});\r\n            }\r\n            \r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    onClick(event) \r\n    {\r\n        if (this.state.searchTerm === \"\")\r\n        {\r\n            this.setState({placeholder: \"Please enter a valid Recipe\"});\r\n        }\r\n    }\r\n    \r\n    \r\n    render(){\r\n        return(\r\n            <HashRouter>\r\n                <div className = \"contentContainer\">\r\n                    <div className = \"spatulaContainer\">\r\n                        <img className = \"spatula\" alt=\"SpatulaImg\" src = \"/images/spatulaImage.png\"/>\r\n                    </div>\r\n                    <div className=\"mainContainer\">\r\n                        <h1>Find a New Recipe</h1>\r\n                        <div className = \"containSearch\">\r\n                            <div className = \"searchContainer\">\r\n                                <input onKeyDown={this.onKeyDown} className = \"searchBox shadow\" type=\"text\" onChange={this.setTerm} placeholder= {this.state.placeholder}/>\r\n                                <button  className = \"searchButton\" onClick = {this.onClick}>\r\n                                    <NavLink id = \"submit\" className = {this.state.navClass} to={`/search/${this.state.searchTerm}`}><img className = \"searchIcon\" alt=\"SearchIcon\" src = \"/images/searchIcon.png\"/></NavLink> \r\n                                </button>                \r\n                            </div>\r\n                        </div>\r\n                        <h1>OR</h1>\r\n                        <div className = \"uploadContainer\">\r\n                            <NavLink to=\"/add\" className = \"uploadRecipe\"> Upload Your Own Recipe.</NavLink>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { Animated, Easing } from 'react-native';\r\nimport {\r\n  NavLink,\r\n  HashRouter\r\n} from \"react-router-dom\";\r\nimport SpringScrollbars from \"./services/SpringScrollBar\";\r\nimport RecipeApi from \"./services/RecipeApi\";\r\n\r\nclass Browse extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.changeView = this.changeView.bind(this)\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: [],\r\n      spinAnim: new Animated.Value(0),\r\n      filterMessage: \"Sort Z-A\",\r\n      gallery: 1,\r\n      viewMessage: \"Gallery View\",\r\n      imageSource: \"./images/sortIcon.jpg\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    Animated.loop(\r\n      Animated.timing(this.state.spinAnim, {\r\n        toValue: 100,\r\n        duration: 300000,\r\n        easing: Easing.linear,\r\n        useNativeDriver: true,\r\n      })\r\n    ).start();\r\n    RecipeApi.get(\"/api/listAllRecipeNames/1\").then(\r\n      (result) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          items: result.data,\r\n        });\r\n      },\r\n      (error) => {\r\n        console.log(error)\r\n        this.setState({\r\n          isLoaded: true,\r\n          error: error,\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  changeView(event) {\r\n    if (this.state.gallery === 1)\r\n    {\r\n      this.setState({\r\n        gallery: 0,\r\n        viewMessage: \"List View\"\r\n      });\r\n      event.preventDefault();\r\n    }\r\n    else\r\n    {\r\n      this.setState({\r\n        gallery: 1,\r\n        viewMessage: \"Gallery View\"\r\n      });\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  reverseList = (event) => {\r\n    var recipeList = this.state.items.data.recipes;\r\n    if (this.state.filterMessage === \"Sort A-Z\")\r\n    {\r\n      this.setState({\r\n        imageSource: \"./images/sortIcon.jpg\",\r\n        filterMessage: \"Sort Z-A\"\r\n      });\r\n    }\r\n    else\r\n    {\r\n      this.setState({\r\n        imageSource: \"./images/sortIconUp.png\",\r\n        filterMessage: \"Sort A-Z\"\r\n      });\r\n    }\r\n    recipeList.reverse();\r\n    this.setState({\r\n      items: {\r\n        data: {\r\n          recipes: recipeList,\r\n        },\r\n      },\r\n    });\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const spin = this.state.spinAnim.interpolate({\r\n      inputRange: [0, 1],\r\n      outputRange: [\"0deg\", \"360deg\"],\r\n    });\r\n    const carrotStyle = {\r\n      transform: [{ rotate: spin }],\r\n      position: \"absolute\",\r\n      top: \"5vw\",\r\n      left: \"5vw\",\r\n      right: \"5vw\",\r\n      bottom: \"5vw\",\r\n      height: \"10vw\",\r\n      width: \"10vw\",\r\n    };\r\n    const { error, isLoaded, items } = this.state;\r\n    if (error) {\r\n      return <div class=\"text-center errorMessage\">Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return (\r\n        <div>\r\n          <div className=\"loadingContainer\">\r\n            <img\r\n              className=\"plate\"\r\n              src=\"../images/loadingIcon.png\"\r\n              alt=\"background\"\r\n            />\r\n            <Animated.Image\r\n              style={carrotStyle}\r\n              source=\"../images/ingredientIcon3.png\"\r\n              alt=\"carrot\"\r\n            />\r\n          </div>\r\n          <h1 className=\"text-center loadingText\">Awaiting Yumminess</h1>\r\n        </div>\r\n      );\r\n    } else {\r\n      const group = items.data.recipes.reduce((r, e) => {\r\n        const key1 = e.mealName[0];\r\n        if (key1 !== undefined) {\r\n          var key = key1.toUpperCase();\r\n          if (!r[key]) r[key] = [];\r\n          r[key].push(e);\r\n        }\r\n        return r;\r\n      }, {});\r\n      if (this.state.gallery === 0)\r\n      {\r\n        return(\r\n          <HashRouter>\r\n            <div className=\"contentContainer\">\r\n            <SpringScrollbars>\r\n              <div className=\"spatulaContainer\">\r\n                <img\r\n                  className=\"spatula\"\r\n                  alt=\"SpatulaImg\"\r\n                  src=\"/images/spatulaImage.png\"\r\n                />\r\n              </div>\r\n              <div className=\"browseWidgetContainer\">\r\n                  <button className=\"text-center flipList\" onClick={this.reverseList}>\r\n                    <img className = \"sortImage\" src = {this.state.imageSource} alt = \"sort\"/>\r\n                    {this.state.filterMessage}\r\n                  </button>\r\n                  <button className=\"text-center galleryView\" onClick={this.changeView}>\r\n                    <img className = \"listImage\" src = \"./images/listIcon.png\" alt = \"list\"/>\r\n                    {this.state.viewMessage}\r\n                  </button>\r\n              </div>\r\n              <div className=\"recipe-List\">\r\n                <div>\r\n                  <h1> Browse All Recipes </h1>\r\n                  <div className = \"mainSearchContainer\">\r\n\r\n                    {Object.entries(this.state.items.data.recipes).map((item) => {\r\n                      return (\r\n                        <NavLink to={`/recipe/${item[1].idMeal}`} className = \"shadow recipeBox\">\r\n                          <div className = \"recipeImageHolder\">\r\n                            <img className = \"recipeSearchImage\" alt = \"recipe\" src = {item[1].mealThumbnail}/>\r\n                          </div>\r\n                          <div className = \"recipeSearchText\">{item[1].mealName}</div>\r\n                        </NavLink>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              </SpringScrollbars>\r\n            </div>\r\n          </HashRouter>\r\n        );\r\n      }\r\n      else\r\n      {\r\n        return (\r\n          <HashRouter>\r\n            <div className=\"contentContainer\">\r\n            <SpringScrollbars>\r\n              <div className=\"spatulaContainer\">\r\n                <img\r\n                  className=\"spatula\"\r\n                  alt=\"SpatulaImg\"\r\n                  src=\"/images/spatulaImage.png\"\r\n                />\r\n              </div>\r\n              <div className=\"browseWidgetContainer\">\r\n                  <button className=\"text-center flipList\" onClick={this.reverseList}>\r\n                    <img className = \"sortImage\" src = {this.state.imageSource} alt = \"sort\"/> \r\n                    {this.state.filterMessage}\r\n                  </button>\r\n                  <button className=\"text-center galleryView\" onClick={this.changeView}>\r\n                    <img className = \"galleryImage\" src = \"./images/galleryIcon.png\" alt = \"gallery\"/>\r\n                    {this.state.viewMessage}\r\n                  </button>\r\n              </div>\r\n              <div className=\"recipe-List\">\r\n                <div>\r\n                  <h1> Browse All Recipes </h1>\r\n                  <div className = \"recipeSection\">\r\n                    {Object.entries(group).map(([key, value], i) => {\r\n                      return (\r\n                        <div className=\"recipe-Block\" key={i}>\r\n                          <div className=\"recipe-key\">\r\n                            <strong>{key}</strong>\r\n                          </div>\r\n                          {value.map((item, j) => (\r\n                            <div className=\"recipe-Name\" key={j}>\r\n                              <NavLink\r\n                                to={`/recipe/${item.idMeal}`}\r\n                                className=\"links\"\r\n                              >\r\n                                {item.mealName}\r\n                              </NavLink>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              </SpringScrollbars>\r\n            </div>\r\n          </HashRouter>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Browse;\r\n","import React, { Component } from \"react\";\r\nimport \"./css/addStyles.css\";\r\nimport DropdownButton from \"./DropdownButton.js\";\r\nimport RecipeApi from \"./services/RecipeApi\";\r\nimport { ToastContainer, toast } from 'material-react-toastify';\r\nimport 'material-react-toastify/dist/ReactToastify.css';\r\nimport SpringScrollbars from \"./services/SpringScrollBar\";\r\n\r\nclass AddRecipe extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.newIngredient = this.newIngredient.bind(this);\r\n    this.submitData = this.submitData.bind(this);\r\n    this.changeCategory = this.changeCategory.bind(this);\r\n    this.changeRegion = this.changeRegion.bind(this);\r\n    this.changeType = this.changeType.bind(this);\r\n    this.toggleCategory = this.toggleCategory.bind(this);\r\n    this.toggleRegion = this.toggleRegion.bind(this);\r\n    this.toggleType = this.toggleType.bind(this);\r\n\r\n    this.state = {\r\n      mealName: \"\",\r\n      Instructions: \"\",\r\n      mealThumbnail: \"\",\r\n      Tags: \"\",\r\n      Youtube: \"\",\r\n      mainCategory: \"Choose a Category\",\r\n      mainRegion: \"Choose a Region\",\r\n      mainType: \"Choose a Type\",\r\n      ingredientBlocks: [4],\r\n      numIngredients: 4,\r\n      finalBlocks: [],\r\n      newIngredientButton: \"newIngredient\",\r\n      ingredients: {},\r\n      measures: {},\r\n      categoryOpen: false,\r\n      regionOpen: false,\r\n      typeOpen: false\r\n    };\r\n  }\r\n\r\n  changeHandler = (event) => {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n    this.setState({ [nam]: val });\r\n  };\r\n\r\n  ingredientsChangeHandler = (event) => {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n    var ingredientObj = this.state.ingredients\r\n    ingredientObj[nam] = val\r\n    this.setState({ingredients: ingredientObj})\r\n  }\r\n\r\n  measuresChangeHandler = (event) => {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n    var measuresObj = this.state.measures\r\n    measuresObj[nam] = val\r\n    this.setState({measures: measuresObj})\r\n  }\r\n\r\n  changeCategory(newValue) {\r\n    this.setState({ mainCategory: newValue });\r\n  }\r\n\r\n  changeType(newValue) {\r\n    this.setState({ mainType: newValue });\r\n  }\r\n\r\n  changeRegion(newValue) {\r\n    this.setState({ mainRegion: newValue });\r\n  }\r\n\r\n  toggleCategory(newValue) {\r\n    this.setState({ categoryOpen: newValue });\r\n  }\r\n\r\n  toggleRegion(newValue) {\r\n    this.setState({ regionOpen: newValue });\r\n  }\r\n\r\n  toggleType(newValue) {\r\n    this.setState({ typeOpen : newValue });\r\n  }\r\n\r\n  newIngredient(event)\r\n  {\r\n    if (this.state.numIngredients <= 20)\r\n    {\r\n      \r\n      // this.setState({ ingredientBlocks: this.state.ingredientBlocks.push(this.state.numRecipes)})\r\n      const slides = this.state.ingredientBlocks.map((item) => {\r\n        return (\r\n          <div id = {`ingredientContainer${item}`} className = \"ingredientContainer\">\r\n              <input name = {`ingredient${item}`} value = {this.state.ingredients[`ingredient\"${item}`]} onChange={this.ingredientsChangeHandler} className = \"text-center ingredientInput\" placeholder = {`Ingredient ${item}`}></input>\r\n              <span><input name = {`measure${item}`} value = {this.state.measures[`measure\"${item}`]} onChange={this.measuresChangeHandler} className = \"text-center measureInput\" placeholder = \"Measure/Units\"></input></span>\r\n          </div>\r\n        );\r\n      });\r\n      if (this.state.numIngredients === 4){\r\n        const newNum = this.state.numIngredients + 1\r\n        this.setState({\r\n        numIngredients: newNum,\r\n        ingredientBlocks: [newNum],\r\n        finalBlocks: slides});\r\n      }\r\n      else\r\n      {\r\n        const newNum = this.state.numIngredients + 1\r\n        var newBlocks = this.state.finalBlocks\r\n        newBlocks = newBlocks.concat(slides)\r\n        this.setState({\r\n        numIngredients: newNum,\r\n        ingredientBlocks: [newNum],\r\n        finalBlocks: newBlocks});\r\n        if (this.state.numIngredients === 20)\r\n        {\r\n          this.setState({newIngredientButton: \"newIngredientGone\"})\r\n        }\r\n      }\r\n\r\n    } \r\n    event.preventDefault();\r\n  }\r\n\r\n  getIngredientsOrMeasure(recipeData, parentArray, fieldName) {\r\n    for (var i = 1; i <= 20; i++) {\r\n      const fullFieldName = fieldName + i;\r\n      if (parentArray[fullFieldName] != null) {\r\n        // if ingredient value present add to recipe Object\r\n        recipeData[fullFieldName] = parentArray[fullFieldName]\r\n      } else {\r\n        // if no ingredient value present set as blank\r\n        recipeData[fullFieldName] = \"\";\r\n      }\r\n    }\r\n  }\r\n\r\n  addRecipeToDb() {\r\n    var recipeData = {};\r\n      recipeData.mealName = this.state.mealName ? this.state.mealName : \"\";\r\n      this.getIngredientsOrMeasure(recipeData, this.state.ingredients, \"ingredient\");\r\n      this.getIngredientsOrMeasure(recipeData, this.state.measures, \"measure\");\r\n      recipeData.mealThumbnail = this.state.mealThumbnail ? this.state.mealThumbnail : \"\";\r\n      recipeData.Instructions = this.state.Instructions ? this.state.Instructions : \"\";\r\n      recipeData.Tags = this.state.Tags ? this.state.Tags : \"\";\r\n      recipeData.Region = this.state.mainRegion ? this.state.mainRegion : \"\";\r\n      recipeData.Category = this.state.mainCategory ? this.state.mainCategory : \"\";\r\n      recipeData.Type = this.state.mainType ? this.state.mainType : \"\";\r\n\r\n      RecipeApi.post(\"/api/addRecipe\", recipeData).then((response) => {\r\n        if (response && response.data && Array.isArray(response.data.data.recipes) && response.data.data.recipes[0].idMeal) {\r\n          var id = response.data.data.recipes[0].idMeal;\r\n\r\n          // Redirect to Page that displays newly created Recipe\r\n          this.props.history.push(`/recipe/${id}`)\r\n        }\r\n      });\r\n  }\r\n\r\n  recipeAlreadyExists(recipeName)  {\r\n    RecipeApi.get(\"/api/checkRecipeExists/\"+ recipeName).then((response) => {\r\n      if (response && response.data && Array.isArray(response.data.data.recipes)) {\r\n        var recipes = response.data.data.recipes;\r\n        if (recipes.length > 0) {\r\n          toast.error(\"Recipe with this name already exists. Give a unique name to your recipe\", {\r\n            position:\"top-right\",\r\n            autoClose: 3000,\r\n            closeOnClick: true\r\n          });\r\n        } else {\r\n          this.addRecipeToDb()\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  validateFields() {\r\n    var isValid = true;\r\n    var errMsg;\r\n    var mealName = this.state.mealName ? this.state.mealName : \"\";\r\n    var ingredient1 = this.state.ingredients[\"ingredient1\"];\r\n    var measure1 = this.state.measures[\"measure1\"];\r\n    var mealThumbnail = this.state.mealThumbnail ? this.state.mealThumbnail : \"\";\r\n    var Instructions = this.state.Instructions ? this.state.Instructions : \"\";\r\n\r\n    if (mealName === \"\") {\r\n      isValid = false;\r\n      errMsg = \"Meal Name is mandatory\"\r\n    }\r\n\r\n    if (isValid && ingredient1 === undefined) {\r\n      isValid = false;\r\n      errMsg = \"Recipe should have at least one ingredient\"\r\n    }\r\n\r\n    if (isValid && measure1 === undefined) {\r\n      isValid = false;\r\n      errMsg = \"Ingredient should have some measure\"\r\n    }\r\n\r\n    if (isValid && Instructions === \"\") {\r\n      isValid = false;\r\n      errMsg = \"Recipe instructions are mandatory\"\r\n    }\r\n\r\n    if (isValid && mealThumbnail === \"\") {\r\n      isValid = false;\r\n      errMsg = \"Thumbnail URL is mandatory\"\r\n    }\r\n\r\n    if (!isValid) {\r\n      toast.dark(errMsg, {\r\n        position:\"top-right\",\r\n        autoClose: 3000,\r\n        closeOnClick: true\r\n      });\r\n    }\r\n    return isValid;\r\n  }\r\n\r\n  submitData = (event) => {\r\n    event.preventDefault();\r\n    if (this.validateFields()) {\r\n      this.recipeAlreadyExists(this.state.mealName)\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className = \"contentContainer\">\r\n        <ToastContainer />\r\n        <SpringScrollbars>\r\n        <div className = \"spatulaContainer\">\r\n            <img className = \"spatula\" alt=\"SpatulaImg\" src = \"/images/spatulaImage.png\"/>\r\n        </div>\r\n        <div className = \"mainAddRecipeContainer\">\r\n          <h1 className = \"text-center\">Add Recipe.</h1>\r\n          <form method=\"POST\" onSubmit={this.submitData}>\r\n            <input name = \"mealName\"   value={this.state.mealName} onChange={this.changeHandler} className = \"text-center mainInput\" placeholder = \"Recipe Name\"></input>\r\n            <div id = \"ingredientContainer1\" className = \"ingredientContainer\">\r\n              <input name = \"ingredient1\"  value={this.state.ingredients[`ingredient1`]} onChange={this.ingredientsChangeHandler} className = \"text-center ingredientInput\" placeholder = \"Ingredient 1\"></input>\r\n              <span><input name = \"measure1\" value={this.state.measures[`measure1`]} onChange={this.measuresChangeHandler} className = \"text-center measureInput\" placeholder = \"Measure/Units\"></input></span>\r\n            </div>\r\n            <div id = \"ingredientContainer2\" className = \"ingredientContainer\">\r\n              <input name = \"ingredient2\" value = {this.state.ingredients[`ingredient2`]} onChange={this.ingredientsChangeHandler} className = \"text-center ingredientInput\" placeholder = \"Ingredient 2\"></input>\r\n              <span><input name = \"measure2\" value = {this.state.measures[`measure2`]} onChange={this.measuresChangeHandler} className = \"text-center measureInput\" placeholder = \"Measure/Units\"></input></span>\r\n            </div>\r\n            <div id = \"ingredientContainer3\" className = \"ingredientContainer\">\r\n              <input name = \"ingredient3\" value = {this.state.ingredients[`ingredient3`]} onChange={this.ingredientsChangeHandler} className = \"text-center ingredientInput\" placeholder = \"Ingredient 3\"></input>\r\n              <span><input name = \"measure3\" value = {this.state.measures[`measure3`]} onChange={this.measuresChangeHandler} className = \"text-center measureInput\" placeholder = \"Measure/Units\"></input></span>\r\n            </div>\r\n            {this.state.finalBlocks}\r\n            <div id = \"moreIngredients\" className = \"moreIngredients\"></div>\r\n            <button type=\"button\" id = \"newIngredientButton\" className = {this.state.newIngredientButton} onClick={this.newIngredient}>+ Add Ingredient</button>\r\n            <textarea name = \"Instructions\"  value={this.state.Instructions} onChange={this.changeHandler} className = \"directionsInput\" placeholder = \"Preparation Instructions\"></textarea>\r\n            <div className = \"mainInput\">\r\n                <input name = \"mealThumbnail\"  value={this.state.mealThumbnail} onChange={this.changeHandler} className = \"text-center mainInput urlInput\" placeholder = \"Enter URL for Recipe Image\"></input>\r\n                <img className = \"uploadImage\" alt = \"upload\" src = \"../images/photoIcon.png\"/>\r\n            </div>\r\n            <DropdownButton isOpen = {this.state.categoryOpen} mainText = {this.state.mainCategory} toggleThisClass = {this.toggleCategory.bind(this)} toggleClass1 = {this.toggleRegion.bind(this)} toggleClass2 = {this.toggleType.bind(this)} changeData={this.changeCategory.bind(this)} id = \"Category\" className = {\"category\"} dropdown = {\"categoryDropdown\"} dropdownContainer = {\"categoryDropdownContainer\"} mainButton={\"categoryMain\"} categories = {[\"Appetizers\", \"Beverages\", \"Soups\",\"Salads\", \"Vegetables\",\"Main Dishes\",\"Breads\", \"Rolls\",\"Desserts\", \"Sides\", \"Miscellaneous\"]} imageId = \"categoryImage\" image = {\"../images/categoryIcon.png\"}/>\r\n            <DropdownButton isOpen = {this.state.regionOpen} mainText = {this.state.mainRegion} toggleThisClass = {this.toggleRegion.bind(this)} toggleClass1 = {this.toggleCategory.bind(this)} toggleClass2 = {this.toggleType.bind(this)} changeData={this.changeRegion.bind(this)} id = \"Region\" className = {\"region\"} dropdown = {\"regionDropdown\"} dropdownContainer = {\"regionDropdownContainer\"} mainButton={\"regionMain\"} categories = {[\"Turkish\",\"Italian\",\"Chinese\",\"Jamaican\",\"Dutch\",\"American\",\"Tunisian\",\"Spanish\",\"Japanese\",\"Canadian\",\"Indian\",\"Vietnamese\",\"Portuguese\",\"Moroccan\",\"Unknown\",\"Irish\",\"French\",\"Mexican\",\"Thai\",\"Malaysian\",\"Kenyan\",\"British\",\"Egyptian\",\"Greek\",\"Polish\",\"Russian\"]} imageId = \"regionImage\" image = {\"../images/regionIcon.png\"}/>\r\n            <DropdownButton isOpen = {this.state.typeOpen} mainText = {this.state.mainType} toggleThisClass = {this.toggleType.bind(this)} toggleClass1 = {this.toggleRegion.bind(this)} toggleClass2 = {this.toggleCategory.bind(this)} changeData={this.changeType.bind(this)} id = \"Type\" className = {\"type\"} dropdown = {\"typeDropdown\"} dropdownContainer = {\"typeDropdownContainer\"} mainButton={\"typeMain\"} categories = {[\"Vegetarian\", \"Non-Vegetarian\"]} imageId = \"typeImage\" image = {\"../images/typeIcon.png\"}/>\r\n            <div className = \"mainInput\">\r\n                <input name = \"Tags\" value={this.state.Tags} onChange={this.changeHandler} className = \"mainInput tagsInput\" placeholder = \"Tags e.g.(chicken, pie, carrots, etc.)\"></input>\r\n                <img className = \"uploadImage\" alt = \"tags\" src = \"../images/tagIcon.png\"/>\r\n            </div>\r\n            <div className = \"mainInput\">\r\n                <input name = \"Youtube\" value={this.state.Youtube} onChange={this.changeHandler} type = \"url\" className = \"text-center mainInput youtubeInput\" placeholder = \"YouTube URL\"></input>\r\n                <img className = \"uploadImage\" alt = \"video\" src = \"../images/videoIcon.png\"/>\r\n            </div>\r\n            {/* <Tag/> */}\r\n          \r\n            <button id = \"submitButton\" className = \"text-center submitButton\" type=\"submit\">Submit Recipe</button>\r\n          </form>\r\n        </div>\r\n        </SpringScrollbars>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default AddRecipe;","import React, { Component } from \"react\";\r\nimport { Animated, Easing } from 'react-native';\r\nimport {\r\n  NavLink,\r\n  HashRouter\r\n} from \"react-router-dom\";\r\nimport RecipeApi from \"./services/RecipeApi\";\r\nimport \"./css/searchStyles.css\";\r\nimport DropdownButton from \"./DropdownButton.js\";\r\nimport SpringScrollbars from \"./services/SpringScrollBar\";\r\n \r\nclass SearchRecipe extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.changeSearchCategory = this.changeSearchCategory.bind(this);\r\n    this.changeSearchRegion = this.changeSearchRegion.bind(this);\r\n    this.changeSearchType = this.changeSearchType.bind(this);\r\n    this.cancelFilter = this.cancelFilter.bind(this);\r\n    this.handleCancelFilter = this.handleCancelFilter.bind(this);\r\n    this.handleFilter = this.handleFilter.bind(this);\r\n    this.startFilter = this.startFilter.bind(this);\r\n    this.toggleSearchCategory = this.toggleSearchCategory.bind(this);\r\n    this.toggleSearchRegion = this.toggleSearchRegion.bind(this);\r\n    this.toggleSearchType = this.toggleSearchType.bind(this);\r\n    this.state = {\r\n      mealName: \"\",\r\n      Instructions: \"\",\r\n      mealThumbnail: \"\",\r\n      Tags: \"\",\r\n      Youtube: \"\",\r\n      mainCategory: \"Choose a Category\",\r\n      mainRegion: \"Choose a Region\",\r\n      mainType: \"Choose a Type\",\r\n      error: null,\r\n      isLoaded: false,\r\n      items: [],\r\n      recipes: [],\r\n      term: \"\",\r\n      dropdownDiv: \"dropdownDiv\",\r\n      stopFilter: \"stopFilter\",\r\n      filterDiv: \"filterDiv\",   \r\n      finishedFilter: \"finishedFilter\",\r\n      clearFilter: \"clearFilter\",\r\n      spinAnim: new Animated.Value(0),\r\n      categoryOpen: false,\r\n      regionOpen: false,\r\n      typeOpen: false\r\n    };\r\n  }\r\n\r\n  handleCancelFilter(event)\r\n  {\r\n    this.setState({\r\n      dropdownDiv: \"dropdownDiv\",\r\n      stopFilter: \"stopFilter\",\r\n      filterDiv: \"filterDiv\",   \r\n      finishedFilter: \"finishedFilter\",\r\n      clearFilter: \"clearFilter\"\r\n    });\r\n    event.preventDefault();\r\n  }\r\n\r\n  cancelFilter(event)\r\n  {\r\n    this.setState({\r\n      dropdownDiv: \"dropdownDiv\",\r\n      stopFilter: \"stopFilter\",\r\n      filterDiv: \"filterDiv\",   \r\n      finishedFilter: \"finishedFilter\",\r\n      clearFilter: \"clearFilter\",\r\n      mainCategory: \"Choose a Category\",\r\n      mainRegion: \"Choose a Region\",\r\n      mainType: \"Choose a Type\",\r\n      items: this.state.recipes\r\n    });\r\n    event.preventDefault();\r\n  }\r\n\r\n  toggleSearchCategory(newValue) {\r\n    this.setState({ categoryOpen: newValue });\r\n  }\r\n\r\n  toggleSearchRegion(newValue) {\r\n    this.setState({ regionOpen: newValue });\r\n  }\r\n\r\n  toggleSearchType(newValue) {\r\n    this.setState({ typeOpen : newValue });\r\n  }\r\n\r\n  handleFilter(event)\r\n  {\r\n    this.setState({\r\n      dropdownDiv: \"dropdownDiv\",\r\n      stopFilter: \"stopFilter\",\r\n      filterDiv: \"filterDiv\",   \r\n      finishedFilter: \"finishedFilter\",\r\n      clearFilter: \"clearFilter\"\r\n    });\r\n    const category = this.state.mainCategory\r\n    const region = this.state.mainRegion\r\n    const type = this.state.mainType\r\n  \r\n    let recipeArray = this.state.recipes.data.recipes\r\n    var filteredArray = recipeArray\r\n    if (category !== \"Choose a Category\")\r\n    {\r\n      filteredArray = filteredArray.filter(function(item) {\r\n        return item.Category === category\r\n      })\r\n    }\r\n    if (region !== \"Choose a Region\")\r\n    {\r\n      filteredArray = filteredArray.filter(function(item) {\r\n        return item.Region === region\r\n      })\r\n    }\r\n    if (type !== \"Choose a Type\")\r\n    {\r\n      filteredArray = filteredArray.filter(function(item) {\r\n        return item.Type === type\r\n      })\r\n    }\r\n    let filteredItems = {\r\n      data: {\r\n        recipes: filteredArray\r\n      }\r\n    }\r\n    this.setState({items: filteredItems});\r\n    event.preventDefault();\r\n    \r\n  }\r\n\r\n  startFilter(event) \r\n  {\r\n    this.setState({\r\n      dropdownDiv: \"dropdownDivActive\",\r\n      stopFilter: \"stopFilterActive\",\r\n      filterDiv: \"filterDivActive\",   \r\n      finishedFilter: \"finishedFilterActive\",\r\n      clearFilter: \"clearFilterActive\"\r\n    });\r\n    event.preventDefault();\r\n  }\r\n\r\n  changeSearchCategory(newValue) {\r\n    this.setState({ mainCategory: newValue });\r\n  }\r\n\r\n  changeSearchType(newValue) {\r\n    this.setState({ mainType: newValue });\r\n  }\r\n\r\n  changeSearchRegion(newValue) {\r\n    this.setState({ mainRegion: newValue });\r\n  }\r\n\r\n  componentDidMount() {\r\n    Animated.loop(Animated.timing(\r\n      this.state.spinAnim,\r\n    {\r\n      toValue: 100,\r\n      duration: 300000,\r\n      easing: Easing.linear,\r\n      useNativeDriver: true\r\n    }\r\n  )).start();\r\n    var keyword = this.props.match.params.recipeName;\r\n    const searchString = \"/api/searchRecipeByName/\" + keyword\r\n    RecipeApi.get(searchString).then(\r\n      (result) => {\r\n        const data = result.data;\r\n        this.setState({\r\n          isLoaded: true,\r\n          items: data,\r\n          term: keyword,\r\n          recipes: data\r\n        });\r\n        \r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          error,\r\n        });\r\n      }  \r\n    );    \r\n  }\r\n\r\n  render() {\r\n    const spin = this.state.spinAnim.interpolate({\r\n      inputRange: [0, 1],\r\n      outputRange: ['0deg', '360deg']\r\n    });\r\n    const carrotStyle  = {\r\n      transform: [{rotate: spin}],\r\n      position: \"absolute\",\r\n      top: \"5vw\",\r\n      left: \"5vw\",\r\n      right: \"5vw\",\r\n      bottom: \"5vw\",\r\n      height: \"10vw\",\r\n      width: \"10vw\"\r\n    }\r\n    var { error, isLoaded, items } = this.state;\r\n    if (error) {\r\n      return <div className = \"text-center errorMessage\">Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return (\r\n      <div>\r\n        <div className = \"loadingContainer\">\r\n            <img className = \"plate\" src = \"../images/loadingIcon.png\" alt = \"background\"/>\r\n            <Animated.Image style={carrotStyle} source = \"../images/ingredientIcon3.png\" alt = \"carrot\"/>\r\n        </div>\r\n        <h1 className = \"text-center loadingText\">Awaiting Yumminess</h1>\r\n\r\n      </div>);\r\n    } else {\r\n      let madeArr = Object.entries(items.data.recipes)\r\n      var recipeIcons = <div className = \"noRecipeContainer\"><img className = \"noRecipeIcon\" src = \"./images/logo.png\" alt = \"icon\"/><div className = \"text-center noRecipe\">No Recipe Found.</div></div>\r\n      \r\n      if (this.state.items.data.recipes.length !== 0)\r\n      {\r\n        recipeIcons = madeArr.map((item) => (\r\n          <NavLink to={`/recipe/${item[1].idMeal}`} className = \"shadow recipeBox\">\r\n            <div className = \"recipeImageHolder\">\r\n              <img className = \"recipeSearchImage\" alt = \"recipe\" src = {item[1].mealThumbnail}/>\r\n            </div>\r\n            <div className = \"recipeSearchText\">{item[1].mealName}</div>\r\n          </NavLink>\r\n        ));\r\n      }\r\n\r\n      return (\r\n      <HashRouter>\r\n        <div className = \"contentContainer\">\r\n          <SpringScrollbars>\r\n          <div className = \"spatulaContainer\">\r\n              <img className = \"spatula\" alt=\"SpatulaImg\" src = \"/images/spatulaImage.png\"/>\r\n          </div>\r\n          <div className = {this.state.filterDiv}>\r\n            <button onClick = {this.handleCancelFilter} className = {this.state.stopFilter}>\r\n              <div className = \"xLine1\"></div>\r\n              <div className = \"xLine2\"></div>\r\n            </button>\r\n            <div className = {this.state.dropdownDiv}>\r\n              <DropdownButton isOpen = {this.state.categoryOpen} mainText = {this.state.mainCategory} toggleThisClass = {this.toggleSearchCategory.bind(this)} toggleClass1 = {this.toggleSearchRegion.bind(this)} toggleClass2 = {this.toggleSearchType.bind(this)} changeData={this.changeSearchCategory.bind(this)} id = \"Category\" className = {\"category\"} dropdown = {\"categoryDropdown\"} dropdownContainer = {\"categoryDropdownContainer\"} mainButton={\"categoryMain\"} categories = {[\"Choose a Category\", \"Appetizers\", \"Beverages\", \"Soups\",\"Salads\", \"Vegetables\",\"Main Dishes\",\"Breads\", \"Rolls\",\"Desserts\", \"Sides\", \"Miscellaneous\"]} imageId = \"categoryImage\" image = {\"../images/categoryIcon.png\"}/>\r\n            </div>\r\n            <div className = {this.state.dropdownDiv}>\r\n              <DropdownButton isOpen = {this.state.regionOpen} mainText = {this.state.mainRegion} toggleThisClass = {this.toggleSearchRegion.bind(this)} toggleClass1 = {this.toggleSearchCategory.bind(this)} toggleClass2 = {this.toggleSearchType.bind(this)} changeData={this.changeSearchRegion.bind(this)} id = \"Region\" className = {\"region\"} dropdown = {\"regionDropdown\"} dropdownContainer = {\"regionDropdownContainer\"} mainButton={\"regionMain\"} categories = {[\"Choose a Region\", \"Turkish\",\"Italian\",\"Chinese\",\"Jamaican\",\"Dutch\",\"American\",\"Tunisian\",\"Spanish\",\"Japanese\",\"Canadian\",\"Indian\",\"Vietnamese\",\"Portuguese\",\"Moroccan\",\"Unknown\",\"Irish\",\"French\",\"Mexican\",\"Thai\",\"Malaysian\",\"Kenyan\",\"British\",\"Egyptian\",\"Greek\",\"Polish\",\"Russian\"]} imageId = \"regionImage\" image = {\"../images/regionIcon.png\"}/>            \r\n            </div>\r\n            <div className = {this.state.dropdownDiv}>\r\n              <DropdownButton isOpen = {this.state.typeOpen} mainText = {this.state.mainType} toggleThisClass = {this.toggleSearchType.bind(this)} toggleClass1 = {this.toggleSearchRegion.bind(this)} toggleClass2 = {this.toggleSearchCategory.bind(this)} changeData={this.changeSearchType.bind(this)} id = \"Type\" className = {\"type\"} dropdown = {\"typeDropdown\"} dropdownContainer = {\"typeDropdownContainer\"} mainButton={\"typeMain\"} categories = {[\"Choose a Type\", \"Vegetarian\", \"Non-Vegetarian\"]} imageId = \"typeImage\" image = {\"../images/typeIcon.png\"}/>\r\n            </div>\r\n            <div className = {this.state.dropdownDiv}>\r\n              <button className = {this.state.finishedFilter} onClick = {this.handleFilter}><img className = \"filterIcon2\" alt = \"filter\" src = \"../images/filterIconWhite.png\"/>Apply Filter</button>\r\n            </div>\r\n            <div className = {this.state.dropdownDiv}>\r\n              <button className = {this.state.clearFilter} onClick = {this.cancelFilter}>Clear Filters</button>\r\n            </div>\r\n          </div>\r\n          <div className = \"searchHeader\">\r\n            <h1 className = \"searchHeaderText\">Search Results for \"{this.state.term}\"</h1>\r\n            <div className = \"filters\">\r\n              <button className = \"filterButton\" onClick = {this.startFilter}>\r\n                <img className = \"filterIcon\" alt = \"filter\" src = \"../images/filterIcon.png\"/>\r\n                Filter\r\n              </button>\r\n            </div>\r\n            <div className = \"mainSearchContainer\">\r\n              {recipeIcons}\r\n            </div>\r\n          </div>\r\n          </SpringScrollbars>\r\n        </div>\r\n        </HashRouter>\r\n\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default SearchRecipe;\r\n","\r\nimport React, { Component } from \"react\";\r\nimport {\r\n    Route,\r\n    NavLink,\r\n    HashRouter\r\n} from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport Browse from \"./Browse\";\r\nimport AddRecipe from \"./AddRecipe\"\r\nimport SearchRecipe from \"./SearchRecipe\"\r\nimport RecipePage from \"./RecipePage\"\r\nimport EditRecipe from \"./EditRecipe\"\r\n \r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleNav = this.handleNav.bind(this);\r\n        this.handleNavClick = this.handleNavClick.bind(this);\r\n        this.state = {\r\n            backgroundClass: \"background\",\r\n            browseClass: \"browseButton\",\r\n            homeClass: \"homeButton\",\r\n            line1: \"line1\",\r\n            line2: \"line2\",\r\n            line3: \"line3\"\r\n        };\r\n        }\r\n\r\n    handleNav() {\r\n        if (this.state.backgroundClass === \"background\")\r\n        {\r\n            this.setState ({\r\n                backgroundClass: \"backgroundActive\",\r\n                browseClass: \"browseButtonActive\",\r\n                homeClass: \"homeButtonActive\",\r\n                line1: \"line1Active\",\r\n                line2: \"line2Active\",\r\n                line3: \"line3Active\"\r\n            });\r\n        }\r\n        else\r\n        {\r\n            this.setState ({\r\n                backgroundClass: \"background\",\r\n                browseClass: \"browseButton\",\r\n                homeClass: \"homeButton\",\r\n                line1: \"line1\",\r\n                line2: \"line2\",\r\n                line3: \"line3\"\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    handleNavClick() {\r\n        if (this.state.backgroundClass === \"backgroundActive\")\r\n        {\r\n            this.setState ({\r\n                backgroundClass: \"background\",\r\n                browseClass: \"browseButton\",\r\n                homeClass: \"homeButton\",\r\n                line1: \"line1\",\r\n                line2: \"line2\",\r\n                line3: \"line3\"\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n    return (\r\n        <HashRouter>\r\n        <nav className = \"nav\">\r\n            <div className={this.state.backgroundClass}></div>\r\n            <NavLink exact to=\"/\"><img className = \"logo\" src = \"/images/logo.png\" alt=\"logoImg\"/></NavLink>\r\n            <div className = \"linkContainer\">\r\n                <ul className=\"header\">\r\n                    <li className = {this.state.browseClass}><NavLink onClick = {this.handleNavClick} to= \"/browse\">Browse</NavLink></li>\r\n                    <li className = {this.state.homeClass} ><NavLink  onClick = {this.handleNavClick} exact to= \"/\">Home</NavLink></li>\r\n                </ul> \r\n            </div>\r\n            <button className=\"burger\" onClick = {this.handleNav}>\r\n                <div className={this.state.line1}></div>\r\n                <div className={this.state.line2}></div>\r\n                <div className={this.state.line3}></div>\r\n            </button>\r\n        </nav>\r\n        <div className=\"content\">\r\n            <Route exact path=\"/\" component={Home}/>\r\n            <Route path=\"/browse\" component={Browse}/>\r\n            <Route path=\"/add\" component={AddRecipe}/>\r\n            <Route path=\"/search/:recipeName\" component={SearchRecipe}/>\r\n            <Route path=\"/recipe/:recipeId\" component={RecipePage}/>\r\n            <Route path=\"/edit/:recipeId\" component={EditRecipe}/>\r\n        </div>\r\n        </HashRouter>\r\n    );\r\n    }\r\n}\r\n\r\nexport default Main;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Main from \"./Main\";\r\nimport \"./css/styles.css\"\r\nimport \"./css/homeStyles.css\"\r\nimport \"./css/browseStyles.css\"\r\nimport \"./css/searchStyles.css\"\r\n \r\nReactDOM.render(\r\n  <Main/>, \r\n  document.getElementById(\"root\")\r\n);","import axios from \"axios\";\r\n\r\n//const url = 'http://localhost:5000';\r\nconst url = window.location.origin;\r\n\r\nexport default axios.create({\r\n    baseURL: `${url}`\r\n})","import React, { Component } from \"react\";\r\nimport \"./css/addStyles.css\"; \r\n\r\nclass DropdownButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleDropdown = this.handleDropdown.bind(this);\r\n        this.onClick = this.onClick.bind(this);\r\n        this.state = {\r\n            categories: this.props.categories,\r\n            dropdown: this.props.dropdown,\r\n            dropdownContainer: this.props.dropdownContainer,\r\n            imageId: this.props.imageId\r\n        }\r\n      }\r\n\r\n      handleClick(event) {\r\n        const id = event.target.id;\r\n        var name = document.getElementById(id).innerHTML\r\n        this.props.changeData(name)\r\n\r\n      }\r\n\r\n      onClick(event) {\r\n        this.handleDropdown(event);\r\n        this.handleClick(event);\r\n        event.preventDefault()\r\n     }\r\n\r\n      handleDropdown(event) {\r\n        if (this.props.isOpen === false)\r\n        {\r\n           this.props.toggleThisClass(true)\r\n        }\r\n        else\r\n        {\r\n            this.props.toggleThisClass(false)\r\n        }\r\n        \r\n        this.props.toggleClass1(false)\r\n        this.props.toggleClass2(false)\r\n        event.preventDefault();\r\n    }\r\n\r\n    \r\n  render() {\r\n    let madeArr = Object.entries(this.props.categories)\r\n    let category = madeArr.map(p=>\r\n        <button id = {this.props.className + p[0]} name= {this.props.class + p[0]} className = \"text-center dropdownButtons\" onClick = {this.onClick} >{p[1]}</button>\r\n    );\r\n    if (this.props.isOpen === false)\r\n    {\r\n        return (\r\n            <div id = {this.props.dropdownContainer} className = \"dropdownContainer-closed\">\r\n                <button id = {this.props.mainButton} className = \"text-center mainButton\" onClick = {this.handleDropdown}>{this.props.mainText}\r\n                    <img id = {this.props.imageId} className = \"downArrow\" src = \"../images/dropdownIcon.png\" alt = \"dropdown\"/>\r\n                    <img className = \"uploadImage\" alt = \"category\" src = {this.props.image}/>\r\n                </button>\r\n                <div id = {this.props.dropdown} className = \"dropdown-closed\">\r\n                    {category}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n    {\r\n        return (\r\n            <div id = {this.props.dropdownContainer} className = \"dropdownContainer-open\">\r\n                <button id = {this.props.mainButton} className = \"text-center mainButton\" onClick = {this.handleDropdown}>{this.props.mainText}\r\n                    <img id = {this.props.imageId} className = \"downArrow downArrowRotate\" src = \"../images/dropdownIcon.png\" alt = \"dropdown\"/>\r\n                    <img className = \"uploadImage\" alt = \"category\" src = {this.props.image}/>\r\n                </button>\r\n                <div id = {this.props.dropdown} className = \"dropdown-open\">\r\n                    {category}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n  }\r\n}\r\n \r\nexport default DropdownButton;","import React, { Component } from 'react';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { SpringSystem, MathUtil } from 'rebound';\r\n\r\nexport default class SpringScrollbars extends Component {\r\n\r\n    constructor(props, ...rest) {\r\n        super(props, ...rest);\r\n        this.handleSpringUpdate = this.handleSpringUpdate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.springSystem = new SpringSystem();\r\n        this.spring = this.springSystem.createSpring();\r\n        this.spring.addListener({ onSpringUpdate: this.handleSpringUpdate });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.springSystem.deregisterSpring(this.spring);\r\n        this.springSystem.removeAllListeners();\r\n        this.springSystem = undefined;\r\n        this.spring.destroy();\r\n        this.spring = undefined;\r\n    }\r\n\r\n    getScrollTop() {\r\n        return this.refs.scrollbars.getScrollTop();\r\n    }\r\n\r\n    getScrollHeight() {\r\n        return this.refs.scrollbars.getScrollHeight();\r\n    }\r\n\r\n    getHeight() {\r\n        return this.refs.scrollbars.getHeight();\r\n    }\r\n\r\n    scrollTop(top) {\r\n        const { scrollbars } = this.refs;\r\n        const scrollTop = scrollbars.getScrollTop();\r\n        const scrollHeight = scrollbars.getScrollHeight();\r\n        const val = MathUtil.mapValueInRange(top, 0, scrollHeight, scrollHeight * 0.2, scrollHeight * 0.8);\r\n        this.spring.setCurrentValue(scrollTop).setAtRest();\r\n        this.spring.setEndValue(val);\r\n    }\r\n\r\n    handleSpringUpdate(spring) {\r\n        const { scrollbars } = this.refs;\r\n        const val = spring.getCurrentValue();\r\n        scrollbars.scrollTop(val);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Scrollbars\r\n                {...this.props}\r\n                ref=\"scrollbars\"/>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport { Animated, Easing } from 'react-native';\r\nimport RecipeApi from \"./services/RecipeApi\";\r\nimport \"./css/recipeStyles.css\";\r\nimport SpringScrollbars from \"./services/SpringScrollBar\";\r\n\r\nclass Recipe extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: [],\r\n      spinAnim: new Animated.Value(0)\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    Animated.loop(Animated.timing(\r\n      this.state.spinAnim,\r\n    {\r\n      toValue: 100,\r\n      duration: 300000,\r\n      easing: Easing.linear,\r\n      useNativeDriver: true\r\n    }\r\n  )).start();\r\n    var id = this.props.match.params.recipeId;\r\n    var api = \"/api/getRecipeById/\" + id;\r\n    RecipeApi.get(api).then(\r\n      (result) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          items: result.data,\r\n        });\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          error,\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteRecipe = (event) => {\r\n    var recipeId = this.props.match.params.recipeId\r\n    var api = \"/api/deleteRecipe/\" + recipeId;\r\n    RecipeApi.delete(api).then(\r\n      (result) => {\r\n        this.props.history.push(`/browse`)\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          error,\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    var ingredients = [];\r\n    var measurements = [];\r\n    const spin = this.state.spinAnim.interpolate({\r\n      inputRange: [0, 1],\r\n      outputRange: ['0deg', '360deg']\r\n    });\r\n    const carrotStyle  = {\r\n      transform: [{rotate: spin}],\r\n      position: \"absolute\",\r\n      top: \"5vw\",\r\n      left: \"5vw\",\r\n      right: \"5vw\",\r\n      bottom: \"5vw\",\r\n      height: \"10vw\",\r\n      width: \"10vw\"\r\n\r\n    }\r\n    const { error, isLoaded, items } = this.state;\r\n    if (error) {\r\n      return <div class = \"text-center errorMessage\">Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return (\r\n        <div>\r\n        <div className = \"loadingContainer\">\r\n            <img className = \"plate\" src = \"../images/loadingIcon.png\" alt = \"background\"/>\r\n            <Animated.Image style={carrotStyle} source = \"../images/ingredientIcon3.png\" alt = \"carrot\"/>\r\n        </div>\r\n        <h1 className = \"text-center loadingText\">Awaiting Yumminess</h1>\r\n\r\n      </div>)\r\n    } else {\r\n      if (items && items.data && items.data.recipes) \r\n      {\r\n        if (Array.isArray(items.data.recipes))\r\n        {\r\n          var recipe = items.data.recipes[0];\r\n          const category = \"Category: \" + recipe.Category;\r\n          const region = \"Region: \" + recipe.Region;\r\n          if (recipe.Tags !== null)\r\n          {\r\n            var newTags = recipe.Tags.replaceAll(\",\", \", \")\r\n          }\r\n          const tags = \"Tags: \" + newTags;\r\n          const type = \"Type: \" + recipe.Type;\r\n          var ingredientNum = recipe.ingredient1;\r\n          var measureNum = recipe.measure1;\r\n          var i = 1;\r\n          while (ingredientNum !== null && ingredientNum !== \"\" && i <= 20)\r\n          {\r\n            ingredients.push(ingredientNum);\r\n            measurements.push(measureNum)\r\n            i = i + 1\r\n            ingredientNum = eval(\"recipe.ingredient\" + i)\r\n            measureNum = eval(\"recipe.measure\" + i)\r\n          }\r\n          var makeIngredients = [];\r\n          for (var j = 0; j < ingredients.length; j++) {\r\n              var item1 = ingredients[j];\r\n              var item2 = measurements[j];\r\n              makeIngredients.push(<div className = \"mainIngredientText\"><img className = \"ingredientBullet\" src = \"../images/ingredientIcon.png\" alt = \"bulletpoint\"/><div className = \"measurementText\">{item2}</div><div className = \"ingredientText\">{item1}  </div></div>);\r\n          }\r\n          return (\r\n              <div className = \"contentContainer\">\r\n                <SpringScrollbars>\r\n                <div className = \"spatulaContainer\">\r\n                    <img className = \"spatula\" alt=\"SpatulaImg\" src = \"/images/spatulaImage.png\"/>\r\n                </div>\r\n            \r\n                <div className = \"recipeContainer\">\r\n                  <h1 className = \"text-center\">{recipe.mealName}</h1>\r\n                  <div className = \"divider\"></div>\r\n                  <div className = \"photoHolder\">\r\n                    <img className = \"recipeImage\" alt=\"recipeImage\" src = {`${recipe.mealThumbnail}`}/>\r\n                  </div>\r\n                  <div className = \"stepsContainer\">\r\n                    <h2 className = \"recipeText\">Ingredients</h2>\r\n                    <div className = \"ingredientContainerShow\">\r\n                      {makeIngredients}\r\n                    </div>\r\n                    <h2 className = \"recipeText\">Instructions</h2>\r\n                    <p className = \"instructionsText\">{recipe.Instructions}</p>\r\n                  </div>\r\n                  <div className = \"widgetContainer\">\r\n                    <img className = \"widgetImage\" alt = \"category\" src = \"../images/categoryIcon.png\"/>\r\n                    <span>\r\n                      <h2 className = \"widgetText\">{category}</h2>\r\n                    </span>\r\n                  </div>\r\n                  <div className = \"widgetContainer\">\r\n                    <img className = \"widgetImage\" alt = \"type\" src = \"../images/typeIcon.png\"/>\r\n                    <span>\r\n                      <h2 className = \"widgetText\">{type}</h2>\r\n                    </span>\r\n                  </div>\r\n                  <div className = \"widgetContainer\">\r\n                    <img className = \"widgetImage\" alt = \"region\" src = \"../images/regionIcon.png\"/>\r\n                    <span>\r\n                      <h2 className = \"widgetText\">{region}</h2>\r\n                    </span>\r\n                  </div>\r\n                  <div className = \"widgetContainer\">\r\n                    <img className = \"widgetImage\" alt = \"region\" src = \"../images/tagIcon.png\"/>\r\n                    <span>\r\n                      <h2 className = \"widgetText\">{tags}</h2>\r\n                    </span>\r\n                  </div>\r\n                  <div className = \"widgetContainer\">\r\n                    <NavLink to={`/edit/${recipe.idMeal}`} className = \"text-center editRecipe\">Edit Recipe</NavLink>\r\n                  </div>\r\n                  <div className = \"widgetContainer\">\r\n                    <div className = \"text-center deleteRecipe\" onClick={this.deleteRecipe}>Delete Recipe</div>\r\n                  </div>\r\n                </div>\r\n                </SpringScrollbars>\r\n              </div>\r\n            \r\n          );\r\n        }\r\n      }\r\n     \r\n    }\r\n  }\r\n}\r\n\r\nexport default Recipe;\r\n","import React, { Component } from \"react\";\r\nimport \"./css/addStyles.css\";\r\nimport DropdownButton from \"./DropdownButton.js\";\r\nimport RecipeApi from \"./services/RecipeApi\";\r\nimport {Animated, Easing } from 'react-native';\r\nimport SpringScrollbars from \"./services/SpringScrollBar\";\r\n\r\nclass EditRecipe extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.submitData = this.submitData.bind(this);\r\n    this.changeCategory = this.changeCategory.bind(this);\r\n    this.changeRegion = this.changeRegion.bind(this);\r\n    this.changeType = this.changeType.bind(this);\r\n    this.toggleCategory = this.toggleCategory.bind(this);\r\n    this.toggleRegion = this.toggleRegion.bind(this);\r\n    this.toggleType = this.toggleType.bind(this);\r\n    this.state = {\r\n      mealName: \"\",\r\n      Instructions: \"\",\r\n      mealThumbnail: \"\",\r\n      Tags: \"\",\r\n      Youtube: \"\",\r\n      mainCategory: \"Choose a Category\",\r\n      mainRegion: \"Choose a Region\",\r\n      mainType: \"Choose a Type\",\r\n      id: \"\",\r\n      spinAnim: new Animated.Value(0),\r\n      categoryOpen: false,\r\n      regionOpen: false,\r\n      typeOpen: false\r\n    };\r\n  }\r\n\r\n  changeHandler = (event) => {\r\n    let nam = event.target.name;\r\n    let val = event.target.value;\r\n    this.setState({ [nam]: val });\r\n  };\r\n\r\n  changeCategory(newValue) {\r\n    this.setState({ mainCategory: newValue });\r\n  }\r\n\r\n  changeType(newValue) {\r\n    this.setState({ mainType: newValue });\r\n  }\r\n\r\n  changeRegion(newValue) {\r\n    this.setState({ mainRegion: newValue });\r\n  }\r\n\r\n  toggleCategory(newValue) {\r\n    this.setState({ categoryOpen: newValue });\r\n  }\r\n\r\n  toggleRegion(newValue) {\r\n    this.setState({ regionOpen: newValue });\r\n  }\r\n\r\n  toggleType(newValue) {\r\n    this.setState({ typeOpen : newValue });\r\n  }\r\n\r\n  getIngredientsOrMeasure(recipeData, fieldName) {\r\n    for (var i = 1; i <= 20; i++) {\r\n      const id = fieldName + i;\r\n      if (document.getElementById(id) != null) {\r\n        // if ingredient value present add to recipe Object\r\n        recipeData[id] = document.getElementById(id).value;\r\n      } else {\r\n        // if no ingredient value present set as blank\r\n        recipeData[id] = \"\";\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    Animated.loop(Animated.timing(\r\n      this.state.spinAnim,\r\n    {\r\n      toValue: 100,\r\n      duration: 300000,\r\n      easing: Easing.linear,\r\n      useNativeDriver: true\r\n    }\r\n  )).start();\r\n    var id = this.props.match.params.recipeId;\r\n    var api = \"/api/getRecipeById/\" + id;\r\n    RecipeApi.get(api).then(\r\n      (result) => {\r\n        let recipe = result.data.data.recipes[0]\r\n        let finalTag = \"\"\r\n        let newCategory = this.state.mainCategory\r\n        let newRegion = this.state.mainRegion\r\n        let newType = this.state.mainType\r\n        if (recipe.Tags !== null)\r\n        {\r\n            finalTag = recipe.Tags.replaceAll(\",\",\", \")\r\n        }\r\n        if (recipe.Category !== null)\r\n        {\r\n            newCategory = recipe.Category\r\n        }\r\n        if (recipe.Region !== null)\r\n        {\r\n            newRegion = recipe.Region\r\n        }\r\n        if (recipe.Type !== null)\r\n        {\r\n            newType = recipe.Type\r\n        }\r\n        this.setState({\r\n            isLoaded: true,\r\n            items: result.data,\r\n            mealName: recipe.mealName,\r\n            Instructions: recipe.Instructions,\r\n            mealThumbnail: recipe.mealThumbnail,\r\n            Tags: finalTag,\r\n            Youtube: recipe.Youtube,\r\n            mainCategory: newCategory,\r\n            mainRegion: newRegion,\r\n            mainType: newType,\r\n            id: recipe.idMeal\r\n        });\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          error,\r\n        });\r\n      }\r\n    );\r\n  }\r\n  submitData = (event) => {\r\n    event.preventDefault();\r\n    var recipeData = {};\r\n    recipeData.mealName = this.state.mealName ? this.state.mealName : \"\";\r\n    this.getIngredientsOrMeasure(recipeData, \"ingredient\");\r\n    this.getIngredientsOrMeasure(recipeData, \"measure\");\r\n    recipeData.mealThumbnail = this.state.mealThumbnail ? this.state.mealThumbnail : \"\";\r\n    recipeData.Instructions = this.state.Instructions ? this.state.Instructions : \"\";\r\n    recipeData.Tags = this.state.Tags ? this.state.Tags : \"\";\r\n    if (this.state.mainRegion === \"Choose a Region\")\r\n    {\r\n        recipeData.Region = \"\"\r\n    }\r\n    else\r\n    {\r\n        recipeData.Region = this.state.mainRegion\r\n    }\r\n    if (this.state.mainCategory === \"Choose a Category\")\r\n    {\r\n        recipeData.Category = \"\"\r\n    }\r\n    else\r\n    {\r\n        recipeData.Category = this.state.mainCategory\r\n    }\r\n    if (this.state.mainType === \"Choose a Type\")\r\n    {\r\n        recipeData.Type = \"\"\r\n    }\r\n    else\r\n    {\r\n        recipeData.Type = this.state.mainType\r\n    }\r\n\r\n    RecipeApi.put(`/api/updateRecipe/${this.state.id}`, recipeData).then((response) => {\r\n        this.props.history.push(`/recipe/${this.state.id}`)\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    function newIngredientClicked() {\r\n        if (numIngredients <= 20) {\r\n          const div = document.createElement(\"div\");\r\n          div.classList.add(\"ingredientContainer\");\r\n          var num = String(numIngredients);\r\n          div.innerHTML = `<input id = \"ingredient${num}\" class = \"text-center ingredientInput\" placeholder = \"Ingredient ${num}\"></input>\r\n          <span><input id = \"measure${num}\" class = \"text-center measureInput\" placeholder = \"Measure/Units\"></input></span>`;\r\n          document.querySelector(\".moreIngredients\").appendChild(div);\r\n          numIngredients = numIngredients + 1;\r\n        } else {\r\n          const div = document.createElement(\"div\");\r\n          document\r\n            .getElementById(\"newIngredientButton\")\r\n            .classList.add(\"newIngredientGone\");\r\n          document\r\n            .getElementById(\"newIngredientButton\")\r\n            .classList.remove(\"newIngredient\");\r\n          div.innerHTML = `<h2 class = \"text-center\">Only 20 Ingredients Allowed.</h2>`;\r\n          document.querySelector(\".moreIngredients\").appendChild(div);\r\n        }\r\n      }\r\n    const spin = this.state.spinAnim.interpolate({\r\n        inputRange: [0, 1],\r\n        outputRange: ['0deg', '360deg']\r\n      });\r\n      const carrotStyle  = {\r\n        transform: [{rotate: spin}],\r\n        position: \"absolute\",\r\n        top: \"5vw\",\r\n        left: \"5vw\",\r\n        right: \"5vw\",\r\n        bottom: \"5vw\",\r\n        height: \"10vw\",\r\n        width: \"10vw\"\r\n      }\r\n      const { error, isLoaded, items } = this.state;\r\n      if (error) {\r\n        return <div class = \"text-center errorMessage\">Error: {error.message}</div>;\r\n      } else if (!isLoaded) {\r\n        return (\r\n        <div>\r\n          <div className = \"loadingContainer\">\r\n              <img className = \"plate\" src = \"../images/loadingIcon.png\" alt = \"background\"/>\r\n              <Animated.Image style={carrotStyle} source = \"../images/ingredientIcon3.png\" alt = \"carrot\"/>\r\n          </div>\r\n          <h1 className = \"text-center loadingText\">Awaiting Yumminess</h1>\r\n  \r\n        </div>);\r\n      } else {\r\n          \r\n        if (items && items.data && items.data.recipes) \r\n        {\r\n            if (Array.isArray(items.data.recipes))\r\n            {\r\n                var recipe = items.data.recipes[0];\r\n            }\r\n        }\r\n        var makeIngredients = [];\r\n        var item1 =  eval(\"recipe.ingredient\" + 1)\r\n        var i = 1;\r\n        while (item1 !== null && item1 !== \"\" && i <= 20) {\r\n              const item2 =  eval(\"recipe.measure\" + i)\r\n              const ingredientId = (\"ingredient\" + i)\r\n              const measureId = (\"measure\" + i)\r\n              const divId = (\"ingredientContainer\" + i)\r\n              makeIngredients.push(<div id = {divId} className = \"ingredientContainer\">\r\n              <input id = {ingredientId} className = \"text-center ingredientInput\" defaultValue = {item1}></input>\r\n              <span><input id = {measureId} className = \"text-center measureInput\" defaultValue = {item2}></input></span>\r\n              </div>);\r\n              i = i + 1;\r\n              item1 =  eval(\"recipe.ingredient\" + i)\r\n        }\r\n        var numIngredients = i;\r\n\r\n        return (\r\n        <div className = \"contentContainer\">\r\n          <SpringScrollbars>\r\n            <div className = \"spatulaContainer\">\r\n                <img className = \"spatula\" alt=\"SpatulaImg\" src = \"/images/spatulaImage.png\"/>\r\n            </div>\r\n            <div className = \"mainAddRecipeContainer\">\r\n            <h1 className = \"text-center\">Edit Recipe.</h1>\r\n            <form method=\"POST\" onSubmit={this.submitData}>\r\n                <input name = \"mealName\" onChange={this.changeHandler} className = \"text-center mainInput\" type=\"text\" defaultValue={this.state.mealName}></input>\r\n                {makeIngredients}\r\n                <div id = \"moreIngredients\" className = \"moreIngredients\"></div>\r\n                <button type=\"button\" id = \"newIngredientButton\" className = \"newIngredient\" onClick={newIngredientClicked}>+ Add Ingredient</button>\r\n                <textarea name = \"Instructions\" required onChange={this.changeHandler} className = \"directionsInput\" type = \"text\" defaultValue = {this.state.Instructions}></textarea>\r\n                <div className = \"mainInput\">\r\n                    <input name = \"mealThumbnail\" defaultValue={this.state.mealThumbnail} onChange={this.changeHandler} className = \"text-center mainInput youtubeInput\"></input>\r\n                    <img className = \"uploadImage\" alt = \"upload\" src = \"../images/photoIcon.png\"/>\r\n                </div>\r\n                  <DropdownButton isOpen = {this.state.categoryOpen} mainText = {this.state.mainCategory} toggleThisClass = {this.toggleCategory.bind(this)} toggleClass1 = {this.toggleRegion.bind(this)} toggleClass2 = {this.toggleType.bind(this)} changeData={this.changeCategory.bind(this)} id = \"Category\" className = {\"category\"} dropdown = {\"categoryDropdown\"} dropdownContainer = {\"categoryDropdownContainer\"} mainButton={\"categoryMain\"} categories = {[\"Appetizers\", \"Beverages\", \"Soups\",\"Salads\", \"Vegetables\",\"Main Dishes\",\"Breads\", \"Rolls\",\"Desserts\", \"Sides\", \"Miscellaneous\"]} imageId = \"categoryImage\" image = {\"../images/categoryIcon.png\"}/>\r\n                  <DropdownButton isOpen = {this.state.regionOpen} mainText = {this.state.mainRegion} toggleThisClass = {this.toggleRegion.bind(this)} toggleClass1 = {this.toggleCategory.bind(this)} toggleClass2 = {this.toggleType.bind(this)} changeData={this.changeRegion.bind(this)} id = \"Region\" className = {\"region\"} dropdown = {\"regionDropdown\"} dropdownContainer = {\"regionDropdownContainer\"} mainButton={\"regionMain\"} categories = {[\"Turkish\",\"Italian\",\"Chinese\",\"Jamaican\",\"Dutch\",\"American\",\"Tunisian\",\"Spanish\",\"Japanese\",\"Canadian\",\"Indian\",\"Vietnamese\",\"Portuguese\",\"Moroccan\",\"Unknown\",\"Irish\",\"French\",\"Mexican\",\"Thai\",\"Malaysian\",\"Kenyan\",\"British\",\"Egyptian\",\"Greek\",\"Polish\",\"Russian\"]} imageId = \"regionImage\" image = {\"../images/regionIcon.png\"}/>\r\n                  <DropdownButton isOpen = {this.state.typeOpen} mainText = {this.state.mainType} toggleThisClass = {this.toggleType.bind(this)} toggleClass1 = {this.toggleRegion.bind(this)} toggleClass2 = {this.toggleCategory.bind(this)} changeData={this.changeType.bind(this)} id = \"Type\" className = {\"type\"} dropdown = {\"typeDropdown\"} dropdownContainer = {\"typeDropdownContainer\"} mainButton={\"typeMain\"} categories = {[\"Vegetarian\", \"Non-Vegetarian\"]} imageId = \"typeImage\" image = {\"../images/typeIcon.png\"}/>\r\n                \r\n                \r\n                {/* <DropdownButton mainText = {this.state.mainCategory} changeData={this.changeCategory.bind(this)} id = \"Category\" className = {\"category\"} dropdown = {\"categoryDropdown\"} dropdownContainer = {\"categoryDropdownContainer\"} mainButton={\"categoryMain\"} categories = {[\"Appetizers\", \"Beverages\", \"Soups\",\"Salads\", \"Vegetables\",\"Main Dishes\",\"Breads\", \"Rolls\",\"Desserts\", \"Sides\", \"Miscellaneous\"]} imageId = \"categoryImage\" image = {\"../images/categoryIcon.png\"}/>\r\n                <DropdownButton mainText = {this.state.mainRegion} changeData={this.changeRegion.bind(this)} id = \"Region\" className = {\"region\"} dropdown = {\"regionDropdown\"} dropdownContainer = {\"regionDropdownContainer\"} mainButton={\"regionMain\"} categories = {[\"Turkish\",\"Italian\",\"Chinese\",\"Jamaican\",\"Dutch\",\"American\",\"Tunisian\",\"Spanish\",\"Japanese\",\"Canadian\",\"Indian\",\"Vietnamese\",\"Portuguese\",\"Moroccan\",\"Unknown\",\"Irish\",\"French\",\"Mexican\",\"Thai\",\"Malaysian\",\"Kenyan\",\"British\",\"Egyptian\",\"Greek\",\"Polish\",\"Russian\"]} imageId = \"regionImage\" image = {\"../images/regionIcon.png\"}/>\r\n                <DropdownButton mainText = {this.state.mainType} changeData={this.changeType.bind(this)} id = \"Type\" className = {\"type\"} dropdown = {\"typeDropdown\"} dropdownContainer = {\"typeDropdownContainer\"} mainButton={\"typeMain\"} categories = {[\"Vegetarian\", \"Non-Vegetarian\"]} imageId = \"typeImage\" image = {\"../images/typeIcon.png\"}/> */}\r\n                <div className = \"mainInput\">\r\n                    <input name = \"Tags\" defaultValue={this.state.Tags} onChange={this.changeHandler} className = \"mainInput tagsInput\"></input>\r\n                    <img className = \"uploadImage\" alt = \"tags\" src = \"../images/tagIcon.png\"/>\r\n                </div>\r\n                <div className = \"mainInput\">\r\n                    <input name = \"Youtube\" defaultValue={this.state.Youtube} onChange={this.changeHandler} type = \"url\" className = \"text-center mainInput youtubeInput\"></input>\r\n                    <img className = \"uploadImage\" alt = \"video\" src = \"../images/videoIcon.png\"/>\r\n                </div>\r\n                {/* <Tag/> */}\r\n            \r\n                <button id = \"submitButton\" className = \"text-center submitButton\" type=\"submit\">Update Recipe</button>\r\n            </form>\r\n            </div>\r\n            </SpringScrollbars>\r\n        </div>\r\n        );\r\n      }\r\n  }\r\n}\r\n \r\nexport default EditRecipe;"],"sourceRoot":""}